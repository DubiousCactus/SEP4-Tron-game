
FreeRTOS-Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000050  00800100  000017b2  00001846  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000049e  00800150  00800150  00001896  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001896  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018c8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000470  00000000  00000000  00001908  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000053a7  00000000  00000000  00001d78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000015ad  00000000  00000000  0000711f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002dd6  00000000  00000000  000086cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e60  00000000  00000000  0000b4a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001bcc  00000000  00000000  0000c304  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00005349  00000000  00000000  0000ded0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004d0  00000000  00000000  00013219  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 b8 03 	jmp	0x770	; 0x770 <__vector_13>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 05 01 	jmp	0x20a	; 0x20a <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__vector_20>
      54:	0c 94 ec 04 	jmp	0x9d8	; 0x9d8 <__vector_21>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 34 05 	jmp	0xa68	; 0xa68 <__vector_28>
      74:	0c 94 72 05 	jmp	0xae4	; 0xae4 <__vector_29>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 eb       	ldi	r30, 0xB2	; 178
      90:	f7 e1       	ldi	r31, 0x17	; 23
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a0 35       	cpi	r26, 0x50	; 80
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	25 e0       	ldi	r18, 0x05	; 5
      a0:	a0 e5       	ldi	r26, 0x50	; 80
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	ae 3e       	cpi	r26, 0xEE	; 238
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 bc 00 	call	0x178	; 0x178 <main>
      b2:	0c 94 d7 0b 	jmp	0x17ae	; 0x17ae <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <read_joystick>:
	/* Calculate score */

}

void communicate_serial(void *pvParameters)
{
      ba:	37 9b       	sbis	0x06, 7	; 6
      bc:	06 c0       	rjmp	.+12     	; 0xca <read_joystick+0x10>
      be:	64 e0       	ldi	r22, 0x04	; 4
      c0:	8a e0       	ldi	r24, 0x0A	; 10
      c2:	91 e0       	ldi	r25, 0x01	; 1
      c4:	0e 94 2e 01 	call	0x25c	; 0x25c <com_send_bytes>
      c8:	17 c0       	rjmp	.+46     	; 0xf8 <read_joystick+0x3e>
      ca:	36 9b       	sbis	0x06, 6	; 6
      cc:	06 c0       	rjmp	.+12     	; 0xda <read_joystick+0x20>
      ce:	66 e0       	ldi	r22, 0x06	; 6
      d0:	8e e0       	ldi	r24, 0x0E	; 14
      d2:	91 e0       	ldi	r25, 0x01	; 1
      d4:	0e 94 2e 01 	call	0x25c	; 0x25c <com_send_bytes>
      d8:	0f c0       	rjmp	.+30     	; 0xf8 <read_joystick+0x3e>
      da:	30 9b       	sbis	0x06, 0	; 6
      dc:	06 c0       	rjmp	.+12     	; 0xea <read_joystick+0x30>
      de:	66 e0       	ldi	r22, 0x06	; 6
      e0:	84 e1       	ldi	r24, 0x14	; 20
      e2:	91 e0       	ldi	r25, 0x01	; 1
      e4:	0e 94 2e 01 	call	0x25c	; 0x25c <com_send_bytes>
      e8:	07 c0       	rjmp	.+14     	; 0xf8 <read_joystick+0x3e>
      ea:	31 9b       	sbis	0x06, 1	; 6
      ec:	05 c0       	rjmp	.+10     	; 0xf8 <read_joystick+0x3e>
      ee:	67 e0       	ldi	r22, 0x07	; 7
      f0:	8a e1       	ldi	r24, 0x1A	; 26
      f2:	91 e0       	ldi	r25, 0x01	; 1
      f4:	0e 94 2e 01 	call	0x25c	; 0x25c <com_send_bytes>
      f8:	84 ef       	ldi	r24, 0xF4	; 244
      fa:	91 e0       	ldi	r25, 0x01	; 1
      fc:	0e 94 35 09 	call	0x126a	; 0x126a <vTaskDelay>
     100:	dc cf       	rjmp	.-72     	; 0xba <read_joystick>

00000102 <prepare_shiftregister>:

// Prepare shift register setting SER = 1
void prepare_shiftregister()
{
	// Set SER to 1
	PORTD |= _BV(PORTD2);
     102:	5a 9a       	sbi	0x0b, 2	; 11
     104:	08 95       	ret

00000106 <clock_shift_register_and_prepare_for_next_col>:

// clock shift-register
void clock_shift_register_and_prepare_for_next_col()
{
	// one SCK pulse
	PORTD |= _BV(PORTD5);
     106:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD &= ~_BV(PORTD5);
     108:	5d 98       	cbi	0x0b, 5	; 11
	
	// one RCK pulse
	PORTD |= _BV(PORTD4);
     10a:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD &= ~_BV(PORTD4);
     10c:	5c 98       	cbi	0x0b, 4	; 11
	
	// Set SER to 0 - for next column
	PORTD &= ~_BV(PORTD2);
     10e:	5a 98       	cbi	0x0b, 2	; 11
     110:	08 95       	ret

00000112 <load_col_value>:
}

// Load column value for column to show
void load_col_value(uint16_t col_value)
{
	PORTA = ~(col_value & 0xFF);
     112:	80 95       	com	r24
     114:	82 b9       	out	0x02, r24	; 2
	
	// Manipulate only with PB0 and PB1
	PORTB |= 0x03;
     116:	85 b1       	in	r24, 0x05	; 5
     118:	83 60       	ori	r24, 0x03	; 3
     11a:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~((col_value >> 8) & 0x03);
     11c:	85 b1       	in	r24, 0x05	; 5
     11e:	93 70       	andi	r25, 0x03	; 3
     120:	90 95       	com	r25
     122:	89 23       	and	r24, r25
     124:	85 b9       	out	0x05, r24	; 5
     126:	08 95       	ret

00000128 <handle_display>:
}

//-----------------------------------------
void handle_display(void)
{
     128:	cf 93       	push	r28
	static uint8_t col = 0;
	
	if (col == 0)
     12a:	c0 91 50 01 	lds	r28, 0x0150	; 0x800150 <__data_end>
     12e:	c1 11       	cpse	r28, r1
     130:	0c c0       	rjmp	.+24     	; 0x14a <handle_display+0x22>
		prepare_shiftregister();
     132:	0e 94 81 00 	call	0x102	; 0x102 <prepare_shiftregister>
	
	load_col_value(frame_buffer[col]);
     136:	80 e0       	ldi	r24, 0x00	; 0
     138:	90 e0       	ldi	r25, 0x00	; 0
     13a:	0e 94 89 00 	call	0x112	; 0x112 <load_col_value>
	
	clock_shift_register_and_prepare_for_next_col();
     13e:	0e 94 83 00 	call	0x106	; 0x106 <clock_shift_register_and_prepare_for_next_col>
	
	// count column up - prepare for next
	if (col++ > 13)
     142:	81 e0       	ldi	r24, 0x01	; 1
     144:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <__data_end>
     148:	14 c0       	rjmp	.+40     	; 0x172 <handle_display+0x4a>
	static uint8_t col = 0;
	
	if (col == 0)
		prepare_shiftregister();
	
	load_col_value(frame_buffer[col]);
     14a:	ec 2f       	mov	r30, r28
     14c:	f0 e0       	ldi	r31, 0x00	; 0
     14e:	ee 0f       	add	r30, r30
     150:	ff 1f       	adc	r31, r31
     152:	e1 5d       	subi	r30, 0xD1	; 209
     154:	fe 4f       	sbci	r31, 0xFE	; 254
     156:	80 81       	ld	r24, Z
     158:	91 81       	ldd	r25, Z+1	; 0x01
     15a:	0e 94 89 00 	call	0x112	; 0x112 <load_col_value>
	
	clock_shift_register_and_prepare_for_next_col();
     15e:	0e 94 83 00 	call	0x106	; 0x106 <clock_shift_register_and_prepare_for_next_col>
	
	// count column up - prepare for next
	if (col++ > 13)
     162:	ce 30       	cpi	r28, 0x0E	; 14
     164:	20 f4       	brcc	.+8      	; 0x16e <handle_display+0x46>
     166:	cf 5f       	subi	r28, 0xFF	; 255
     168:	c0 93 50 01 	sts	0x0150, r28	; 0x800150 <__data_end>
     16c:	02 c0       	rjmp	.+4      	; 0x172 <handle_display+0x4a>
		col = 0;
     16e:	10 92 50 01 	sts	0x0150, r1	; 0x800150 <__data_end>
}
     172:	cf 91       	pop	r28
     174:	08 95       	ret

00000176 <vApplicationIdleHook>:

//-----------------------------------------
void vApplicationIdleHook( void )
{
     176:	08 95       	ret

00000178 <main>:

//-----------------------------------------
int main(void)
{
	
	init_board();
     178:	0e 94 37 01 	call	0x26e	; 0x26e <init_board>
	
	// Shift register Enable output (G=0)
	PORTD &= ~_BV(PORTD6);
     17c:	5e 98       	cbi	0x0b, 6	; 11

	xTaskCreate(read_joystick, (const char*)"Read joystick", configMINIMAL_STACK_SIZE, (void *)NULL, tskIDLE_PRIORITY, NULL);
     17e:	e1 2c       	mov	r14, r1
     180:	f1 2c       	mov	r15, r1
     182:	00 e0       	ldi	r16, 0x00	; 0
     184:	20 e0       	ldi	r18, 0x00	; 0
     186:	30 e0       	ldi	r19, 0x00	; 0
     188:	45 e5       	ldi	r20, 0x55	; 85
     18a:	50 e0       	ldi	r21, 0x00	; 0
     18c:	61 e2       	ldi	r22, 0x21	; 33
     18e:	71 e0       	ldi	r23, 0x01	; 1
     190:	8d e5       	ldi	r24, 0x5D	; 93
     192:	90 e0       	ldi	r25, 0x00	; 0
     194:	0e 94 b6 06 	call	0xd6c	; 0xd6c <xTaskCreate>
	
	// Start the display handler timer
	init_display_timer(handle_display);
     198:	84 e9       	ldi	r24, 0x94	; 148
     19a:	90 e0       	ldi	r25, 0x00	; 0
     19c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <init_display_timer>
	
	sei();
     1a0:	78 94       	sei
	
	//Start the scheduler
	vTaskStartScheduler();
     1a2:	0e 94 cb 07 	call	0xf96	; 0xf96 <vTaskStartScheduler>
     1a6:	ff cf       	rjmp	.-2      	; 0x1a6 <main+0x2e>

000001a8 <_com_call_back>:
     1a8:	cf 93       	push	r28
     1aa:	df 93       	push	r29
     1ac:	00 d0       	rcall	.+0      	; 0x1ae <_com_call_back+0x6>
     1ae:	cd b7       	in	r28, 0x3d	; 61
     1b0:	de b7       	in	r29, 0x3e	; 62
     1b2:	6a 83       	std	Y+2, r22	; 0x02
     1b4:	80 91 99 01 	lds	r24, 0x0199	; 0x800199 <_x_rx_com_queue>
     1b8:	90 91 9a 01 	lds	r25, 0x019A	; 0x80019a <_x_rx_com_queue+0x1>
     1bc:	00 97       	sbiw	r24, 0x00	; 0
     1be:	71 f0       	breq	.+28     	; 0x1dc <_com_call_back+0x34>
     1c0:	19 82       	std	Y+1, r1	; 0x01
     1c2:	20 e0       	ldi	r18, 0x00	; 0
     1c4:	ae 01       	movw	r20, r28
     1c6:	4f 5f       	subi	r20, 0xFF	; 255
     1c8:	5f 4f       	sbci	r21, 0xFF	; 255
     1ca:	be 01       	movw	r22, r28
     1cc:	6e 5f       	subi	r22, 0xFE	; 254
     1ce:	7f 4f       	sbci	r23, 0xFF	; 255
     1d0:	0e 94 19 06 	call	0xc32	; 0xc32 <xQueueGenericSendFromISR>
     1d4:	89 81       	ldd	r24, Y+1	; 0x01
     1d6:	81 11       	cpse	r24, r1
     1d8:	0e 94 03 03 	call	0x606	; 0x606 <vPortYield>
     1dc:	0f 90       	pop	r0
     1de:	0f 90       	pop	r0
     1e0:	df 91       	pop	r29
     1e2:	cf 91       	pop	r28
     1e4:	08 95       	ret

000001e6 <init_display_timer>:
     1e6:	90 93 98 01 	sts	0x0198, r25	; 0x800198 <cb_ptr+0x1>
     1ea:	80 93 97 01 	sts	0x0197, r24	; 0x800197 <cb_ptr>
     1ee:	8a e0       	ldi	r24, 0x0A	; 10
     1f0:	87 bd       	out	0x27, r24	; 39
     1f2:	84 b5       	in	r24, 0x24	; 36
     1f4:	82 60       	ori	r24, 0x02	; 2
     1f6:	84 bd       	out	0x24, r24	; 36
     1f8:	ee e6       	ldi	r30, 0x6E	; 110
     1fa:	f0 e0       	ldi	r31, 0x00	; 0
     1fc:	80 81       	ld	r24, Z
     1fe:	82 60       	ori	r24, 0x02	; 2
     200:	80 83       	st	Z, r24
     202:	85 b5       	in	r24, 0x25	; 37
     204:	85 60       	ori	r24, 0x05	; 5
     206:	85 bd       	out	0x25, r24	; 37
     208:	08 95       	ret

0000020a <__vector_16>:
     20a:	1f 92       	push	r1
     20c:	0f 92       	push	r0
     20e:	0f b6       	in	r0, 0x3f	; 63
     210:	0f 92       	push	r0
     212:	11 24       	eor	r1, r1
     214:	2f 93       	push	r18
     216:	3f 93       	push	r19
     218:	4f 93       	push	r20
     21a:	5f 93       	push	r21
     21c:	6f 93       	push	r22
     21e:	7f 93       	push	r23
     220:	8f 93       	push	r24
     222:	9f 93       	push	r25
     224:	af 93       	push	r26
     226:	bf 93       	push	r27
     228:	ef 93       	push	r30
     22a:	ff 93       	push	r31
     22c:	e0 91 97 01 	lds	r30, 0x0197	; 0x800197 <cb_ptr>
     230:	f0 91 98 01 	lds	r31, 0x0198	; 0x800198 <cb_ptr+0x1>
     234:	30 97       	sbiw	r30, 0x00	; 0
     236:	09 f0       	breq	.+2      	; 0x23a <__vector_16+0x30>
     238:	09 95       	icall
     23a:	ff 91       	pop	r31
     23c:	ef 91       	pop	r30
     23e:	bf 91       	pop	r27
     240:	af 91       	pop	r26
     242:	9f 91       	pop	r25
     244:	8f 91       	pop	r24
     246:	7f 91       	pop	r23
     248:	6f 91       	pop	r22
     24a:	5f 91       	pop	r21
     24c:	4f 91       	pop	r20
     24e:	3f 91       	pop	r19
     250:	2f 91       	pop	r18
     252:	0f 90       	pop	r0
     254:	0f be       	out	0x3f, r0	; 63
     256:	0f 90       	pop	r0
     258:	1f 90       	pop	r1
     25a:	18 95       	reti

0000025c <com_send_bytes>:
     25c:	46 2f       	mov	r20, r22
     25e:	bc 01       	movw	r22, r24
     260:	80 91 9b 01 	lds	r24, 0x019B	; 0x80019b <_com_serial_instance>
     264:	90 91 9c 01 	lds	r25, 0x019C	; 0x80019c <_com_serial_instance+0x1>
     268:	0e 94 6b 04 	call	0x8d6	; 0x8d6 <serial_send_bytes>
     26c:	08 95       	ret

0000026e <init_board>:
     26e:	8f 92       	push	r8
     270:	9f 92       	push	r9
     272:	af 92       	push	r10
     274:	bf 92       	push	r11
     276:	cf 92       	push	r12
     278:	df 92       	push	r13
     27a:	ef 92       	push	r14
     27c:	0f 93       	push	r16
     27e:	84 e7       	ldi	r24, 0x74	; 116
     280:	91 e0       	ldi	r25, 0x01	; 1
     282:	0e 94 90 01 	call	0x320	; 0x320 <buffer_init>
     286:	81 e5       	ldi	r24, 0x51	; 81
     288:	91 e0       	ldi	r25, 0x01	; 1
     28a:	0e 94 90 01 	call	0x320	; 0x320 <buffer_init>
     28e:	0f 2e       	mov	r0, r31
     290:	f4 ed       	ldi	r31, 0xD4	; 212
     292:	8f 2e       	mov	r8, r31
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	9f 2e       	mov	r9, r31
     298:	f0 2d       	mov	r31, r0
     29a:	0f 2e       	mov	r0, r31
     29c:	f1 e5       	ldi	r31, 0x51	; 81
     29e:	af 2e       	mov	r10, r31
     2a0:	f1 e0       	ldi	r31, 0x01	; 1
     2a2:	bf 2e       	mov	r11, r31
     2a4:	f0 2d       	mov	r31, r0
     2a6:	0f 2e       	mov	r0, r31
     2a8:	f4 e7       	ldi	r31, 0x74	; 116
     2aa:	cf 2e       	mov	r12, r31
     2ac:	f1 e0       	ldi	r31, 0x01	; 1
     2ae:	df 2e       	mov	r13, r31
     2b0:	f0 2d       	mov	r31, r0
     2b2:	e1 2c       	mov	r14, r1
     2b4:	00 e0       	ldi	r16, 0x00	; 0
     2b6:	23 e0       	ldi	r18, 0x03	; 3
     2b8:	40 e0       	ldi	r20, 0x00	; 0
     2ba:	52 ec       	ldi	r21, 0xC2	; 194
     2bc:	61 e0       	ldi	r22, 0x01	; 1
     2be:	70 e0       	ldi	r23, 0x00	; 0
     2c0:	80 e0       	ldi	r24, 0x00	; 0
     2c2:	0e 94 f1 03 	call	0x7e2	; 0x7e2 <serial_new_instance>
     2c6:	90 93 9c 01 	sts	0x019C, r25	; 0x80019c <_com_serial_instance+0x1>
     2ca:	80 93 9b 01 	sts	0x019B, r24	; 0x80019b <_com_serial_instance>
     2ce:	88 b1       	in	r24, 0x08	; 8
     2d0:	83 6c       	ori	r24, 0xC3	; 195
     2d2:	88 b9       	out	0x08, r24	; 8
     2d4:	5b 9a       	sbi	0x0b, 3	; 11
     2d6:	8a b1       	in	r24, 0x0a	; 10
     2d8:	84 67       	ori	r24, 0x74	; 116
     2da:	8a b9       	out	0x0a, r24	; 10
     2dc:	5e 9a       	sbi	0x0b, 6	; 11
     2de:	81 b1       	in	r24, 0x01	; 1
     2e0:	8f ef       	ldi	r24, 0xFF	; 255
     2e2:	81 b9       	out	0x01, r24	; 1
     2e4:	84 b1       	in	r24, 0x04	; 4
     2e6:	83 60       	ori	r24, 0x03	; 3
     2e8:	84 b9       	out	0x04, r24	; 4
     2ea:	84 b1       	in	r24, 0x04	; 4
     2ec:	8c 63       	ori	r24, 0x3C	; 60
     2ee:	84 b9       	out	0x04, r24	; 4
     2f0:	0f 91       	pop	r16
     2f2:	ef 90       	pop	r14
     2f4:	df 90       	pop	r13
     2f6:	cf 90       	pop	r12
     2f8:	bf 90       	pop	r11
     2fa:	af 90       	pop	r10
     2fc:	9f 90       	pop	r9
     2fe:	8f 90       	pop	r8
     300:	08 95       	ret

00000302 <switch_in>:
     302:	95 b1       	in	r25, 0x05	; 5
     304:	93 7c       	andi	r25, 0xC3	; 195
     306:	95 b9       	out	0x05, r25	; 5
     308:	25 b1       	in	r18, 0x05	; 5
     30a:	34 e0       	ldi	r19, 0x04	; 4
     30c:	83 9f       	mul	r24, r19
     30e:	c0 01       	movw	r24, r0
     310:	11 24       	eor	r1, r1
     312:	82 2b       	or	r24, r18
     314:	85 b9       	out	0x05, r24	; 5
     316:	08 95       	ret

00000318 <switch_out>:
     318:	85 b1       	in	r24, 0x05	; 5
     31a:	83 7c       	andi	r24, 0xC3	; 195
     31c:	85 b9       	out	0x05, r24	; 5
     31e:	08 95       	ret

00000320 <buffer_init>:
     320:	fc 01       	movw	r30, r24
     322:	10 a2       	std	Z+32, r1	; 0x20
     324:	11 a2       	std	Z+33, r1	; 0x21
     326:	12 a2       	std	Z+34, r1	; 0x22
     328:	08 95       	ret

0000032a <buffer_get_item>:
     32a:	fc 01       	movw	r30, r24
     32c:	82 a1       	ldd	r24, Z+34	; 0x22
     32e:	88 23       	and	r24, r24
     330:	d9 f0       	breq	.+54     	; 0x368 <buffer_get_item+0x3e>
     332:	81 a1       	ldd	r24, Z+33	; 0x21
     334:	df 01       	movw	r26, r30
     336:	a8 0f       	add	r26, r24
     338:	b1 1d       	adc	r27, r1
     33a:	8c 91       	ld	r24, X
     33c:	db 01       	movw	r26, r22
     33e:	8c 93       	st	X, r24
     340:	21 a1       	ldd	r18, Z+33	; 0x21
     342:	30 e0       	ldi	r19, 0x00	; 0
     344:	2f 5f       	subi	r18, 0xFF	; 255
     346:	3f 4f       	sbci	r19, 0xFF	; 255
     348:	2f 71       	andi	r18, 0x1F	; 31
     34a:	30 78       	andi	r19, 0x80	; 128
     34c:	33 23       	and	r19, r19
     34e:	34 f4       	brge	.+12     	; 0x35c <buffer_get_item+0x32>
     350:	21 50       	subi	r18, 0x01	; 1
     352:	31 09       	sbc	r19, r1
     354:	20 6e       	ori	r18, 0xE0	; 224
     356:	3f 6f       	ori	r19, 0xFF	; 255
     358:	2f 5f       	subi	r18, 0xFF	; 255
     35a:	3f 4f       	sbci	r19, 0xFF	; 255
     35c:	21 a3       	std	Z+33, r18	; 0x21
     35e:	82 a1       	ldd	r24, Z+34	; 0x22
     360:	81 50       	subi	r24, 0x01	; 1
     362:	82 a3       	std	Z+34, r24	; 0x22
     364:	80 e0       	ldi	r24, 0x00	; 0
     366:	08 95       	ret
     368:	81 e0       	ldi	r24, 0x01	; 1
     36a:	08 95       	ret

0000036c <buffer_put_item>:
     36c:	fc 01       	movw	r30, r24
     36e:	42 a1       	ldd	r20, Z+34	; 0x22
     370:	40 32       	cpi	r20, 0x20	; 32
     372:	b8 f4       	brcc	.+46     	; 0x3a2 <buffer_put_item+0x36>
     374:	20 a1       	ldd	r18, Z+32	; 0x20
     376:	30 e0       	ldi	r19, 0x00	; 0
     378:	e2 0f       	add	r30, r18
     37a:	f3 1f       	adc	r31, r19
     37c:	60 83       	st	Z, r22
     37e:	2f 5f       	subi	r18, 0xFF	; 255
     380:	3f 4f       	sbci	r19, 0xFF	; 255
     382:	2f 71       	andi	r18, 0x1F	; 31
     384:	30 78       	andi	r19, 0x80	; 128
     386:	33 23       	and	r19, r19
     388:	34 f4       	brge	.+12     	; 0x396 <buffer_put_item+0x2a>
     38a:	21 50       	subi	r18, 0x01	; 1
     38c:	31 09       	sbc	r19, r1
     38e:	20 6e       	ori	r18, 0xE0	; 224
     390:	3f 6f       	ori	r19, 0xFF	; 255
     392:	2f 5f       	subi	r18, 0xFF	; 255
     394:	3f 4f       	sbci	r19, 0xFF	; 255
     396:	fc 01       	movw	r30, r24
     398:	20 a3       	std	Z+32, r18	; 0x20
     39a:	4f 5f       	subi	r20, 0xFF	; 255
     39c:	42 a3       	std	Z+34, r20	; 0x22
     39e:	80 e0       	ldi	r24, 0x00	; 0
     3a0:	08 95       	ret
     3a2:	82 e0       	ldi	r24, 0x02	; 2
     3a4:	08 95       	ret

000003a6 <vListInitialise>:
     3a6:	fc 01       	movw	r30, r24
     3a8:	03 96       	adiw	r24, 0x03	; 3
     3aa:	92 83       	std	Z+2, r25	; 0x02
     3ac:	81 83       	std	Z+1, r24	; 0x01
     3ae:	2f ef       	ldi	r18, 0xFF	; 255
     3b0:	3f ef       	ldi	r19, 0xFF	; 255
     3b2:	34 83       	std	Z+4, r19	; 0x04
     3b4:	23 83       	std	Z+3, r18	; 0x03
     3b6:	96 83       	std	Z+6, r25	; 0x06
     3b8:	85 83       	std	Z+5, r24	; 0x05
     3ba:	90 87       	std	Z+8, r25	; 0x08
     3bc:	87 83       	std	Z+7, r24	; 0x07
     3be:	10 82       	st	Z, r1
     3c0:	08 95       	ret

000003c2 <vListInitialiseItem>:
     3c2:	fc 01       	movw	r30, r24
     3c4:	11 86       	std	Z+9, r1	; 0x09
     3c6:	10 86       	std	Z+8, r1	; 0x08
     3c8:	08 95       	ret

000003ca <vListInsertEnd>:
     3ca:	cf 93       	push	r28
     3cc:	df 93       	push	r29
     3ce:	9c 01       	movw	r18, r24
     3d0:	fb 01       	movw	r30, r22
     3d2:	dc 01       	movw	r26, r24
     3d4:	11 96       	adiw	r26, 0x01	; 1
     3d6:	cd 91       	ld	r28, X+
     3d8:	dc 91       	ld	r29, X
     3da:	12 97       	sbiw	r26, 0x02	; 2
     3dc:	d3 83       	std	Z+3, r29	; 0x03
     3de:	c2 83       	std	Z+2, r28	; 0x02
     3e0:	8c 81       	ldd	r24, Y+4	; 0x04
     3e2:	9d 81       	ldd	r25, Y+5	; 0x05
     3e4:	95 83       	std	Z+5, r25	; 0x05
     3e6:	84 83       	std	Z+4, r24	; 0x04
     3e8:	8c 81       	ldd	r24, Y+4	; 0x04
     3ea:	9d 81       	ldd	r25, Y+5	; 0x05
     3ec:	dc 01       	movw	r26, r24
     3ee:	13 96       	adiw	r26, 0x03	; 3
     3f0:	7c 93       	st	X, r23
     3f2:	6e 93       	st	-X, r22
     3f4:	12 97       	sbiw	r26, 0x02	; 2
     3f6:	7d 83       	std	Y+5, r23	; 0x05
     3f8:	6c 83       	std	Y+4, r22	; 0x04
     3fa:	31 87       	std	Z+9, r19	; 0x09
     3fc:	20 87       	std	Z+8, r18	; 0x08
     3fe:	f9 01       	movw	r30, r18
     400:	80 81       	ld	r24, Z
     402:	8f 5f       	subi	r24, 0xFF	; 255
     404:	80 83       	st	Z, r24
     406:	df 91       	pop	r29
     408:	cf 91       	pop	r28
     40a:	08 95       	ret

0000040c <vListInsert>:
     40c:	cf 93       	push	r28
     40e:	df 93       	push	r29
     410:	eb 01       	movw	r28, r22
     412:	48 81       	ld	r20, Y
     414:	59 81       	ldd	r21, Y+1	; 0x01
     416:	4f 3f       	cpi	r20, 0xFF	; 255
     418:	2f ef       	ldi	r18, 0xFF	; 255
     41a:	52 07       	cpc	r21, r18
     41c:	21 f4       	brne	.+8      	; 0x426 <vListInsert+0x1a>
     41e:	fc 01       	movw	r30, r24
     420:	a7 81       	ldd	r26, Z+7	; 0x07
     422:	b0 85       	ldd	r27, Z+8	; 0x08
     424:	0d c0       	rjmp	.+26     	; 0x440 <vListInsert+0x34>
     426:	dc 01       	movw	r26, r24
     428:	13 96       	adiw	r26, 0x03	; 3
     42a:	01 c0       	rjmp	.+2      	; 0x42e <vListInsert+0x22>
     42c:	df 01       	movw	r26, r30
     42e:	12 96       	adiw	r26, 0x02	; 2
     430:	ed 91       	ld	r30, X+
     432:	fc 91       	ld	r31, X
     434:	13 97       	sbiw	r26, 0x03	; 3
     436:	20 81       	ld	r18, Z
     438:	31 81       	ldd	r19, Z+1	; 0x01
     43a:	42 17       	cp	r20, r18
     43c:	53 07       	cpc	r21, r19
     43e:	b0 f7       	brcc	.-20     	; 0x42c <vListInsert+0x20>
     440:	12 96       	adiw	r26, 0x02	; 2
     442:	ed 91       	ld	r30, X+
     444:	fc 91       	ld	r31, X
     446:	13 97       	sbiw	r26, 0x03	; 3
     448:	fb 83       	std	Y+3, r31	; 0x03
     44a:	ea 83       	std	Y+2, r30	; 0x02
     44c:	d5 83       	std	Z+5, r29	; 0x05
     44e:	c4 83       	std	Z+4, r28	; 0x04
     450:	bd 83       	std	Y+5, r27	; 0x05
     452:	ac 83       	std	Y+4, r26	; 0x04
     454:	13 96       	adiw	r26, 0x03	; 3
     456:	dc 93       	st	X, r29
     458:	ce 93       	st	-X, r28
     45a:	12 97       	sbiw	r26, 0x02	; 2
     45c:	99 87       	std	Y+9, r25	; 0x09
     45e:	88 87       	std	Y+8, r24	; 0x08
     460:	fc 01       	movw	r30, r24
     462:	20 81       	ld	r18, Z
     464:	2f 5f       	subi	r18, 0xFF	; 255
     466:	20 83       	st	Z, r18
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <uxListRemove>:
     46e:	cf 93       	push	r28
     470:	df 93       	push	r29
     472:	fc 01       	movw	r30, r24
     474:	a0 85       	ldd	r26, Z+8	; 0x08
     476:	b1 85       	ldd	r27, Z+9	; 0x09
     478:	c2 81       	ldd	r28, Z+2	; 0x02
     47a:	d3 81       	ldd	r29, Z+3	; 0x03
     47c:	84 81       	ldd	r24, Z+4	; 0x04
     47e:	95 81       	ldd	r25, Z+5	; 0x05
     480:	9d 83       	std	Y+5, r25	; 0x05
     482:	8c 83       	std	Y+4, r24	; 0x04
     484:	c4 81       	ldd	r28, Z+4	; 0x04
     486:	d5 81       	ldd	r29, Z+5	; 0x05
     488:	82 81       	ldd	r24, Z+2	; 0x02
     48a:	93 81       	ldd	r25, Z+3	; 0x03
     48c:	9b 83       	std	Y+3, r25	; 0x03
     48e:	8a 83       	std	Y+2, r24	; 0x02
     490:	11 96       	adiw	r26, 0x01	; 1
     492:	8d 91       	ld	r24, X+
     494:	9c 91       	ld	r25, X
     496:	12 97       	sbiw	r26, 0x02	; 2
     498:	e8 17       	cp	r30, r24
     49a:	f9 07       	cpc	r31, r25
     49c:	31 f4       	brne	.+12     	; 0x4aa <uxListRemove+0x3c>
     49e:	84 81       	ldd	r24, Z+4	; 0x04
     4a0:	95 81       	ldd	r25, Z+5	; 0x05
     4a2:	12 96       	adiw	r26, 0x02	; 2
     4a4:	9c 93       	st	X, r25
     4a6:	8e 93       	st	-X, r24
     4a8:	11 97       	sbiw	r26, 0x01	; 1
     4aa:	11 86       	std	Z+9, r1	; 0x09
     4ac:	10 86       	std	Z+8, r1	; 0x08
     4ae:	8c 91       	ld	r24, X
     4b0:	81 50       	subi	r24, 0x01	; 1
     4b2:	8c 93       	st	X, r24
     4b4:	df 91       	pop	r29
     4b6:	cf 91       	pop	r28
     4b8:	08 95       	ret

000004ba <pxPortInitialiseStack>:
     4ba:	31 e1       	ldi	r19, 0x11	; 17
     4bc:	fc 01       	movw	r30, r24
     4be:	30 83       	st	Z, r19
     4c0:	31 97       	sbiw	r30, 0x01	; 1
     4c2:	22 e2       	ldi	r18, 0x22	; 34
     4c4:	20 83       	st	Z, r18
     4c6:	31 97       	sbiw	r30, 0x01	; 1
     4c8:	a3 e3       	ldi	r26, 0x33	; 51
     4ca:	a0 83       	st	Z, r26
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	60 83       	st	Z, r22
     4d0:	31 97       	sbiw	r30, 0x01	; 1
     4d2:	70 83       	st	Z, r23
     4d4:	31 97       	sbiw	r30, 0x01	; 1
     4d6:	10 82       	st	Z, r1
     4d8:	31 97       	sbiw	r30, 0x01	; 1
     4da:	60 e8       	ldi	r22, 0x80	; 128
     4dc:	60 83       	st	Z, r22
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	10 82       	st	Z, r1
     4e2:	31 97       	sbiw	r30, 0x01	; 1
     4e4:	62 e0       	ldi	r22, 0x02	; 2
     4e6:	60 83       	st	Z, r22
     4e8:	31 97       	sbiw	r30, 0x01	; 1
     4ea:	63 e0       	ldi	r22, 0x03	; 3
     4ec:	60 83       	st	Z, r22
     4ee:	31 97       	sbiw	r30, 0x01	; 1
     4f0:	64 e0       	ldi	r22, 0x04	; 4
     4f2:	60 83       	st	Z, r22
     4f4:	31 97       	sbiw	r30, 0x01	; 1
     4f6:	65 e0       	ldi	r22, 0x05	; 5
     4f8:	60 83       	st	Z, r22
     4fa:	31 97       	sbiw	r30, 0x01	; 1
     4fc:	66 e0       	ldi	r22, 0x06	; 6
     4fe:	60 83       	st	Z, r22
     500:	31 97       	sbiw	r30, 0x01	; 1
     502:	67 e0       	ldi	r22, 0x07	; 7
     504:	60 83       	st	Z, r22
     506:	31 97       	sbiw	r30, 0x01	; 1
     508:	68 e0       	ldi	r22, 0x08	; 8
     50a:	60 83       	st	Z, r22
     50c:	31 97       	sbiw	r30, 0x01	; 1
     50e:	69 e0       	ldi	r22, 0x09	; 9
     510:	60 83       	st	Z, r22
     512:	31 97       	sbiw	r30, 0x01	; 1
     514:	60 e1       	ldi	r22, 0x10	; 16
     516:	60 83       	st	Z, r22
     518:	31 97       	sbiw	r30, 0x01	; 1
     51a:	30 83       	st	Z, r19
     51c:	31 97       	sbiw	r30, 0x01	; 1
     51e:	32 e1       	ldi	r19, 0x12	; 18
     520:	30 83       	st	Z, r19
     522:	31 97       	sbiw	r30, 0x01	; 1
     524:	33 e1       	ldi	r19, 0x13	; 19
     526:	30 83       	st	Z, r19
     528:	31 97       	sbiw	r30, 0x01	; 1
     52a:	34 e1       	ldi	r19, 0x14	; 20
     52c:	30 83       	st	Z, r19
     52e:	31 97       	sbiw	r30, 0x01	; 1
     530:	35 e1       	ldi	r19, 0x15	; 21
     532:	30 83       	st	Z, r19
     534:	31 97       	sbiw	r30, 0x01	; 1
     536:	36 e1       	ldi	r19, 0x16	; 22
     538:	30 83       	st	Z, r19
     53a:	31 97       	sbiw	r30, 0x01	; 1
     53c:	37 e1       	ldi	r19, 0x17	; 23
     53e:	30 83       	st	Z, r19
     540:	31 97       	sbiw	r30, 0x01	; 1
     542:	38 e1       	ldi	r19, 0x18	; 24
     544:	30 83       	st	Z, r19
     546:	31 97       	sbiw	r30, 0x01	; 1
     548:	39 e1       	ldi	r19, 0x19	; 25
     54a:	30 83       	st	Z, r19
     54c:	31 97       	sbiw	r30, 0x01	; 1
     54e:	30 e2       	ldi	r19, 0x20	; 32
     550:	30 83       	st	Z, r19
     552:	31 97       	sbiw	r30, 0x01	; 1
     554:	31 e2       	ldi	r19, 0x21	; 33
     556:	30 83       	st	Z, r19
     558:	31 97       	sbiw	r30, 0x01	; 1
     55a:	20 83       	st	Z, r18
     55c:	31 97       	sbiw	r30, 0x01	; 1
     55e:	23 e2       	ldi	r18, 0x23	; 35
     560:	20 83       	st	Z, r18
     562:	31 97       	sbiw	r30, 0x01	; 1
     564:	40 83       	st	Z, r20
     566:	31 97       	sbiw	r30, 0x01	; 1
     568:	50 83       	st	Z, r21
     56a:	31 97       	sbiw	r30, 0x01	; 1
     56c:	26 e2       	ldi	r18, 0x26	; 38
     56e:	20 83       	st	Z, r18
     570:	31 97       	sbiw	r30, 0x01	; 1
     572:	27 e2       	ldi	r18, 0x27	; 39
     574:	20 83       	st	Z, r18
     576:	31 97       	sbiw	r30, 0x01	; 1
     578:	28 e2       	ldi	r18, 0x28	; 40
     57a:	20 83       	st	Z, r18
     57c:	31 97       	sbiw	r30, 0x01	; 1
     57e:	29 e2       	ldi	r18, 0x29	; 41
     580:	20 83       	st	Z, r18
     582:	31 97       	sbiw	r30, 0x01	; 1
     584:	20 e3       	ldi	r18, 0x30	; 48
     586:	20 83       	st	Z, r18
     588:	31 97       	sbiw	r30, 0x01	; 1
     58a:	21 e3       	ldi	r18, 0x31	; 49
     58c:	20 83       	st	Z, r18
     58e:	86 97       	sbiw	r24, 0x26	; 38
     590:	08 95       	ret

00000592 <xPortStartScheduler>:
     592:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     596:	85 ee       	ldi	r24, 0xE5	; 229
     598:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     59c:	8b e0       	ldi	r24, 0x0B	; 11
     59e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     5a2:	ef e6       	ldi	r30, 0x6F	; 111
     5a4:	f0 e0       	ldi	r31, 0x00	; 0
     5a6:	80 81       	ld	r24, Z
     5a8:	82 60       	ori	r24, 0x02	; 2
     5aa:	80 83       	st	Z, r24
     5ac:	a0 91 e8 05 	lds	r26, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     5b0:	b0 91 e9 05 	lds	r27, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     5b4:	cd 91       	ld	r28, X+
     5b6:	cd bf       	out	0x3d, r28	; 61
     5b8:	dd 91       	ld	r29, X+
     5ba:	de bf       	out	0x3e, r29	; 62
     5bc:	ff 91       	pop	r31
     5be:	ef 91       	pop	r30
     5c0:	df 91       	pop	r29
     5c2:	cf 91       	pop	r28
     5c4:	bf 91       	pop	r27
     5c6:	af 91       	pop	r26
     5c8:	9f 91       	pop	r25
     5ca:	8f 91       	pop	r24
     5cc:	7f 91       	pop	r23
     5ce:	6f 91       	pop	r22
     5d0:	5f 91       	pop	r21
     5d2:	4f 91       	pop	r20
     5d4:	3f 91       	pop	r19
     5d6:	2f 91       	pop	r18
     5d8:	1f 91       	pop	r17
     5da:	0f 91       	pop	r16
     5dc:	ff 90       	pop	r15
     5de:	ef 90       	pop	r14
     5e0:	df 90       	pop	r13
     5e2:	cf 90       	pop	r12
     5e4:	bf 90       	pop	r11
     5e6:	af 90       	pop	r10
     5e8:	9f 90       	pop	r9
     5ea:	8f 90       	pop	r8
     5ec:	7f 90       	pop	r7
     5ee:	6f 90       	pop	r6
     5f0:	5f 90       	pop	r5
     5f2:	4f 90       	pop	r4
     5f4:	3f 90       	pop	r3
     5f6:	2f 90       	pop	r2
     5f8:	1f 90       	pop	r1
     5fa:	0f 90       	pop	r0
     5fc:	0f be       	out	0x3f, r0	; 63
     5fe:	0f 90       	pop	r0
     600:	08 95       	ret
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	08 95       	ret

00000606 <vPortYield>:
     606:	0f 92       	push	r0
     608:	0f b6       	in	r0, 0x3f	; 63
     60a:	f8 94       	cli
     60c:	0f 92       	push	r0
     60e:	1f 92       	push	r1
     610:	11 24       	eor	r1, r1
     612:	2f 92       	push	r2
     614:	3f 92       	push	r3
     616:	4f 92       	push	r4
     618:	5f 92       	push	r5
     61a:	6f 92       	push	r6
     61c:	7f 92       	push	r7
     61e:	8f 92       	push	r8
     620:	9f 92       	push	r9
     622:	af 92       	push	r10
     624:	bf 92       	push	r11
     626:	cf 92       	push	r12
     628:	df 92       	push	r13
     62a:	ef 92       	push	r14
     62c:	ff 92       	push	r15
     62e:	0f 93       	push	r16
     630:	1f 93       	push	r17
     632:	2f 93       	push	r18
     634:	3f 93       	push	r19
     636:	4f 93       	push	r20
     638:	5f 93       	push	r21
     63a:	6f 93       	push	r22
     63c:	7f 93       	push	r23
     63e:	8f 93       	push	r24
     640:	9f 93       	push	r25
     642:	af 93       	push	r26
     644:	bf 93       	push	r27
     646:	cf 93       	push	r28
     648:	df 93       	push	r29
     64a:	ef 93       	push	r30
     64c:	ff 93       	push	r31
     64e:	a0 91 e8 05 	lds	r26, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     652:	b0 91 e9 05 	lds	r27, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     656:	0d b6       	in	r0, 0x3d	; 61
     658:	0d 92       	st	X+, r0
     65a:	0e b6       	in	r0, 0x3e	; 62
     65c:	0d 92       	st	X+, r0
     65e:	0e 94 88 09 	call	0x1310	; 0x1310 <vTaskSwitchContext>
     662:	a0 91 e8 05 	lds	r26, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     666:	b0 91 e9 05 	lds	r27, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     66a:	cd 91       	ld	r28, X+
     66c:	cd bf       	out	0x3d, r28	; 61
     66e:	dd 91       	ld	r29, X+
     670:	de bf       	out	0x3e, r29	; 62
     672:	ff 91       	pop	r31
     674:	ef 91       	pop	r30
     676:	df 91       	pop	r29
     678:	cf 91       	pop	r28
     67a:	bf 91       	pop	r27
     67c:	af 91       	pop	r26
     67e:	9f 91       	pop	r25
     680:	8f 91       	pop	r24
     682:	7f 91       	pop	r23
     684:	6f 91       	pop	r22
     686:	5f 91       	pop	r21
     688:	4f 91       	pop	r20
     68a:	3f 91       	pop	r19
     68c:	2f 91       	pop	r18
     68e:	1f 91       	pop	r17
     690:	0f 91       	pop	r16
     692:	ff 90       	pop	r15
     694:	ef 90       	pop	r14
     696:	df 90       	pop	r13
     698:	cf 90       	pop	r12
     69a:	bf 90       	pop	r11
     69c:	af 90       	pop	r10
     69e:	9f 90       	pop	r9
     6a0:	8f 90       	pop	r8
     6a2:	7f 90       	pop	r7
     6a4:	6f 90       	pop	r6
     6a6:	5f 90       	pop	r5
     6a8:	4f 90       	pop	r4
     6aa:	3f 90       	pop	r3
     6ac:	2f 90       	pop	r2
     6ae:	1f 90       	pop	r1
     6b0:	0f 90       	pop	r0
     6b2:	0f be       	out	0x3f, r0	; 63
     6b4:	0f 90       	pop	r0
     6b6:	08 95       	ret

000006b8 <vPortYieldFromTick>:
     6b8:	0f 92       	push	r0
     6ba:	0f b6       	in	r0, 0x3f	; 63
     6bc:	f8 94       	cli
     6be:	0f 92       	push	r0
     6c0:	1f 92       	push	r1
     6c2:	11 24       	eor	r1, r1
     6c4:	2f 92       	push	r2
     6c6:	3f 92       	push	r3
     6c8:	4f 92       	push	r4
     6ca:	5f 92       	push	r5
     6cc:	6f 92       	push	r6
     6ce:	7f 92       	push	r7
     6d0:	8f 92       	push	r8
     6d2:	9f 92       	push	r9
     6d4:	af 92       	push	r10
     6d6:	bf 92       	push	r11
     6d8:	cf 92       	push	r12
     6da:	df 92       	push	r13
     6dc:	ef 92       	push	r14
     6de:	ff 92       	push	r15
     6e0:	0f 93       	push	r16
     6e2:	1f 93       	push	r17
     6e4:	2f 93       	push	r18
     6e6:	3f 93       	push	r19
     6e8:	4f 93       	push	r20
     6ea:	5f 93       	push	r21
     6ec:	6f 93       	push	r22
     6ee:	7f 93       	push	r23
     6f0:	8f 93       	push	r24
     6f2:	9f 93       	push	r25
     6f4:	af 93       	push	r26
     6f6:	bf 93       	push	r27
     6f8:	cf 93       	push	r28
     6fa:	df 93       	push	r29
     6fc:	ef 93       	push	r30
     6fe:	ff 93       	push	r31
     700:	a0 91 e8 05 	lds	r26, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     704:	b0 91 e9 05 	lds	r27, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     708:	0d b6       	in	r0, 0x3d	; 61
     70a:	0d 92       	st	X+, r0
     70c:	0e b6       	in	r0, 0x3e	; 62
     70e:	0d 92       	st	X+, r0
     710:	0e 94 fb 07 	call	0xff6	; 0xff6 <xTaskIncrementTick>
     714:	81 11       	cpse	r24, r1
     716:	0e 94 88 09 	call	0x1310	; 0x1310 <vTaskSwitchContext>
     71a:	a0 91 e8 05 	lds	r26, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     71e:	b0 91 e9 05 	lds	r27, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     722:	cd 91       	ld	r28, X+
     724:	cd bf       	out	0x3d, r28	; 61
     726:	dd 91       	ld	r29, X+
     728:	de bf       	out	0x3e, r29	; 62
     72a:	ff 91       	pop	r31
     72c:	ef 91       	pop	r30
     72e:	df 91       	pop	r29
     730:	cf 91       	pop	r28
     732:	bf 91       	pop	r27
     734:	af 91       	pop	r26
     736:	9f 91       	pop	r25
     738:	8f 91       	pop	r24
     73a:	7f 91       	pop	r23
     73c:	6f 91       	pop	r22
     73e:	5f 91       	pop	r21
     740:	4f 91       	pop	r20
     742:	3f 91       	pop	r19
     744:	2f 91       	pop	r18
     746:	1f 91       	pop	r17
     748:	0f 91       	pop	r16
     74a:	ff 90       	pop	r15
     74c:	ef 90       	pop	r14
     74e:	df 90       	pop	r13
     750:	cf 90       	pop	r12
     752:	bf 90       	pop	r11
     754:	af 90       	pop	r10
     756:	9f 90       	pop	r9
     758:	8f 90       	pop	r8
     75a:	7f 90       	pop	r7
     75c:	6f 90       	pop	r6
     75e:	5f 90       	pop	r5
     760:	4f 90       	pop	r4
     762:	3f 90       	pop	r3
     764:	2f 90       	pop	r2
     766:	1f 90       	pop	r1
     768:	0f 90       	pop	r0
     76a:	0f be       	out	0x3f, r0	; 63
     76c:	0f 90       	pop	r0
     76e:	08 95       	ret

00000770 <__vector_13>:
     770:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <vPortYieldFromTick>
     774:	18 95       	reti

00000776 <pvPortMalloc>:
     776:	cf 93       	push	r28
     778:	df 93       	push	r29
     77a:	ec 01       	movw	r28, r24
     77c:	0e 94 f5 07 	call	0xfea	; 0xfea <vTaskSuspendAll>
     780:	80 91 9d 01 	lds	r24, 0x019D	; 0x80019d <pucAlignedHeap.2084>
     784:	90 91 9e 01 	lds	r25, 0x019E	; 0x80019e <pucAlignedHeap.2084+0x1>
     788:	89 2b       	or	r24, r25
     78a:	31 f4       	brne	.+12     	; 0x798 <pvPortMalloc+0x22>
     78c:	82 ea       	ldi	r24, 0xA2	; 162
     78e:	91 e0       	ldi	r25, 0x01	; 1
     790:	90 93 9e 01 	sts	0x019E, r25	; 0x80019e <pucAlignedHeap.2084+0x1>
     794:	80 93 9d 01 	sts	0x019D, r24	; 0x80019d <pucAlignedHeap.2084>
     798:	20 91 9f 01 	lds	r18, 0x019F	; 0x80019f <xNextFreeByte>
     79c:	30 91 a0 01 	lds	r19, 0x01A0	; 0x8001a0 <xNextFreeByte+0x1>
     7a0:	c9 01       	movw	r24, r18
     7a2:	8c 0f       	add	r24, r28
     7a4:	9d 1f       	adc	r25, r29
     7a6:	87 3e       	cpi	r24, 0xE7	; 231
     7a8:	43 e0       	ldi	r20, 0x03	; 3
     7aa:	94 07       	cpc	r25, r20
     7ac:	70 f4       	brcc	.+28     	; 0x7ca <pvPortMalloc+0x54>
     7ae:	28 17       	cp	r18, r24
     7b0:	39 07       	cpc	r19, r25
     7b2:	70 f4       	brcc	.+28     	; 0x7d0 <pvPortMalloc+0x5a>
     7b4:	c0 91 9d 01 	lds	r28, 0x019D	; 0x80019d <pucAlignedHeap.2084>
     7b8:	d0 91 9e 01 	lds	r29, 0x019E	; 0x80019e <pucAlignedHeap.2084+0x1>
     7bc:	c2 0f       	add	r28, r18
     7be:	d3 1f       	adc	r29, r19
     7c0:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <xNextFreeByte+0x1>
     7c4:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <xNextFreeByte>
     7c8:	05 c0       	rjmp	.+10     	; 0x7d4 <pvPortMalloc+0x5e>
     7ca:	c0 e0       	ldi	r28, 0x00	; 0
     7cc:	d0 e0       	ldi	r29, 0x00	; 0
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <pvPortMalloc+0x5e>
     7d0:	c0 e0       	ldi	r28, 0x00	; 0
     7d2:	d0 e0       	ldi	r29, 0x00	; 0
     7d4:	0e 94 b6 08 	call	0x116c	; 0x116c <xTaskResumeAll>
     7d8:	ce 01       	movw	r24, r28
     7da:	df 91       	pop	r29
     7dc:	cf 91       	pop	r28
     7de:	08 95       	ret

000007e0 <vPortFree>:
     7e0:	08 95       	ret

000007e2 <serial_new_instance>:
     7e2:	4f 92       	push	r4
     7e4:	5f 92       	push	r5
     7e6:	6f 92       	push	r6
     7e8:	7f 92       	push	r7
     7ea:	8f 92       	push	r8
     7ec:	9f 92       	push	r9
     7ee:	af 92       	push	r10
     7f0:	bf 92       	push	r11
     7f2:	cf 92       	push	r12
     7f4:	df 92       	push	r13
     7f6:	ff 92       	push	r15
     7f8:	0f 93       	push	r16
     7fa:	1f 93       	push	r17
     7fc:	cf 93       	push	r28
     7fe:	df 93       	push	r29
     800:	cd b7       	in	r28, 0x3d	; 61
     802:	de b7       	in	r29, 0x3e	; 62
     804:	f8 2e       	mov	r15, r24
     806:	2a 01       	movw	r4, r20
     808:	3b 01       	movw	r6, r22
     80a:	88 e0       	ldi	r24, 0x08	; 8
     80c:	90 e0       	ldi	r25, 0x00	; 0
     80e:	0e 94 a6 0a 	call	0x154c	; 0x154c <malloc>
     812:	8c 01       	movw	r16, r24
     814:	8f 2d       	mov	r24, r15
     816:	90 e0       	ldi	r25, 0x00	; 0
     818:	88 0f       	add	r24, r24
     81a:	99 1f       	adc	r25, r25
     81c:	fc 01       	movw	r30, r24
     81e:	e7 57       	subi	r30, 0x77	; 119
     820:	fa 4f       	sbci	r31, 0xFA	; 250
     822:	11 83       	std	Z+1, r17	; 0x01
     824:	00 83       	st	Z, r16
     826:	fc 01       	movw	r30, r24
     828:	ea 5f       	subi	r30, 0xFA	; 250
     82a:	fe 4f       	sbci	r31, 0xFE	; 254
     82c:	80 81       	ld	r24, Z
     82e:	91 81       	ldd	r25, Z+1	; 0x01
     830:	d8 01       	movw	r26, r16
     832:	11 96       	adiw	r26, 0x01	; 1
     834:	9c 93       	st	X, r25
     836:	8e 93       	st	-X, r24
     838:	13 96       	adiw	r26, 0x03	; 3
     83a:	bc 92       	st	X, r11
     83c:	ae 92       	st	-X, r10
     83e:	12 97       	sbiw	r26, 0x02	; 2
     840:	15 96       	adiw	r26, 0x05	; 5
     842:	dc 92       	st	X, r13
     844:	ce 92       	st	-X, r12
     846:	14 97       	sbiw	r26, 0x04	; 4
     848:	17 96       	adiw	r26, 0x07	; 7
     84a:	9c 92       	st	X, r9
     84c:	8e 92       	st	-X, r8
     84e:	16 97       	sbiw	r26, 0x06	; 6
     850:	ff b6       	in	r15, 0x3f	; 63
     852:	f8 94       	cli
     854:	ed 91       	ld	r30, X+
     856:	fc 91       	ld	r31, X
     858:	11 97       	sbiw	r26, 0x01	; 1
     85a:	36 97       	sbiw	r30, 0x06	; 6
     85c:	80 81       	ld	r24, Z
     85e:	82 60       	ori	r24, 0x02	; 2
     860:	80 83       	st	Z, r24
     862:	cd 90       	ld	r12, X+
     864:	dc 90       	ld	r13, X
     866:	d3 01       	movw	r26, r6
     868:	c2 01       	movw	r24, r4
     86a:	88 0f       	add	r24, r24
     86c:	99 1f       	adc	r25, r25
     86e:	aa 1f       	adc	r26, r26
     870:	bb 1f       	adc	r27, r27
     872:	88 0f       	add	r24, r24
     874:	99 1f       	adc	r25, r25
     876:	aa 1f       	adc	r26, r26
     878:	bb 1f       	adc	r27, r27
     87a:	9c 01       	movw	r18, r24
     87c:	ad 01       	movw	r20, r26
     87e:	22 0f       	add	r18, r18
     880:	33 1f       	adc	r19, r19
     882:	44 1f       	adc	r20, r20
     884:	55 1f       	adc	r21, r21
     886:	60 e0       	ldi	r22, 0x00	; 0
     888:	70 e0       	ldi	r23, 0x00	; 0
     88a:	81 ee       	ldi	r24, 0xE1	; 225
     88c:	90 e0       	ldi	r25, 0x00	; 0
     88e:	0e 94 84 0a 	call	0x1508	; 0x1508 <__udivmodsi4>
     892:	21 50       	subi	r18, 0x01	; 1
     894:	f6 01       	movw	r30, r12
     896:	32 97       	sbiw	r30, 0x02	; 2
     898:	20 83       	st	Z, r18
     89a:	d8 01       	movw	r26, r16
     89c:	ed 91       	ld	r30, X+
     89e:	fc 91       	ld	r31, X
     8a0:	11 97       	sbiw	r26, 0x01	; 1
     8a2:	35 97       	sbiw	r30, 0x05	; 5
     8a4:	88 e9       	ldi	r24, 0x98	; 152
     8a6:	80 83       	st	Z, r24
     8a8:	ed 91       	ld	r30, X+
     8aa:	fc 91       	ld	r31, X
     8ac:	34 97       	sbiw	r30, 0x04	; 4
     8ae:	86 e0       	ldi	r24, 0x06	; 6
     8b0:	80 83       	st	Z, r24
     8b2:	ff be       	out	0x3f, r15	; 63
     8b4:	c8 01       	movw	r24, r16
     8b6:	df 91       	pop	r29
     8b8:	cf 91       	pop	r28
     8ba:	1f 91       	pop	r17
     8bc:	0f 91       	pop	r16
     8be:	ff 90       	pop	r15
     8c0:	df 90       	pop	r13
     8c2:	cf 90       	pop	r12
     8c4:	bf 90       	pop	r11
     8c6:	af 90       	pop	r10
     8c8:	9f 90       	pop	r9
     8ca:	8f 90       	pop	r8
     8cc:	7f 90       	pop	r7
     8ce:	6f 90       	pop	r6
     8d0:	5f 90       	pop	r5
     8d2:	4f 90       	pop	r4
     8d4:	08 95       	ret

000008d6 <serial_send_bytes>:
     8d6:	ef 92       	push	r14
     8d8:	ff 92       	push	r15
     8da:	0f 93       	push	r16
     8dc:	1f 93       	push	r17
     8de:	cf 93       	push	r28
     8e0:	df 93       	push	r29
     8e2:	fc 01       	movw	r30, r24
     8e4:	a2 81       	ldd	r26, Z+2	; 0x02
     8e6:	b3 81       	ldd	r27, Z+3	; 0x03
     8e8:	10 97       	sbiw	r26, 0x00	; 0
     8ea:	79 f0       	breq	.+30     	; 0x90a <__stack+0xb>
     8ec:	e4 2f       	mov	r30, r20
     8ee:	f0 e0       	ldi	r31, 0x00	; 0
     8f0:	92 96       	adiw	r26, 0x22	; 34
     8f2:	5c 91       	ld	r21, X
     8f4:	20 e2       	ldi	r18, 0x20	; 32
     8f6:	30 e0       	ldi	r19, 0x00	; 0
     8f8:	25 1b       	sub	r18, r21
     8fa:	31 09       	sbc	r19, r1
     8fc:	2e 17       	cp	r18, r30
     8fe:	3f 07       	cpc	r19, r31
     900:	1c f1       	brlt	.+70     	; 0x948 <__stack+0x49>
     902:	7c 01       	movw	r14, r24
     904:	41 11       	cpse	r20, r1
     906:	04 c0       	rjmp	.+8      	; 0x910 <__stack+0x11>
     908:	16 c0       	rjmp	.+44     	; 0x936 <__stack+0x37>
     90a:	42 30       	cpi	r20, 0x02	; 2
     90c:	f8 f4       	brcc	.+62     	; 0x94c <__stack+0x4d>
     90e:	f9 cf       	rjmp	.-14     	; 0x902 <__stack+0x3>
     910:	eb 01       	movw	r28, r22
     912:	41 50       	subi	r20, 0x01	; 1
     914:	04 2f       	mov	r16, r20
     916:	10 e0       	ldi	r17, 0x00	; 0
     918:	0f 5f       	subi	r16, 0xFF	; 255
     91a:	1f 4f       	sbci	r17, 0xFF	; 255
     91c:	06 0f       	add	r16, r22
     91e:	17 1f       	adc	r17, r23
     920:	69 91       	ld	r22, Y+
     922:	d7 01       	movw	r26, r14
     924:	12 96       	adiw	r26, 0x02	; 2
     926:	8d 91       	ld	r24, X+
     928:	9c 91       	ld	r25, X
     92a:	13 97       	sbiw	r26, 0x03	; 3
     92c:	0e 94 b6 01 	call	0x36c	; 0x36c <buffer_put_item>
     930:	c0 17       	cp	r28, r16
     932:	d1 07       	cpc	r29, r17
     934:	a9 f7       	brne	.-22     	; 0x920 <__stack+0x21>
     936:	d7 01       	movw	r26, r14
     938:	ed 91       	ld	r30, X+
     93a:	fc 91       	ld	r31, X
     93c:	35 97       	sbiw	r30, 0x05	; 5
     93e:	80 81       	ld	r24, Z
     940:	80 62       	ori	r24, 0x20	; 32
     942:	80 83       	st	Z, r24
     944:	80 e0       	ldi	r24, 0x00	; 0
     946:	03 c0       	rjmp	.+6      	; 0x94e <__stack+0x4f>
     948:	82 e0       	ldi	r24, 0x02	; 2
     94a:	01 c0       	rjmp	.+2      	; 0x94e <__stack+0x4f>
     94c:	82 e0       	ldi	r24, 0x02	; 2
     94e:	df 91       	pop	r29
     950:	cf 91       	pop	r28
     952:	1f 91       	pop	r17
     954:	0f 91       	pop	r16
     956:	ff 90       	pop	r15
     958:	ef 90       	pop	r14
     95a:	08 95       	ret

0000095c <__vector_20>:
     95c:	1f 92       	push	r1
     95e:	0f 92       	push	r0
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	0f 92       	push	r0
     964:	11 24       	eor	r1, r1
     966:	2f 93       	push	r18
     968:	3f 93       	push	r19
     96a:	4f 93       	push	r20
     96c:	5f 93       	push	r21
     96e:	6f 93       	push	r22
     970:	7f 93       	push	r23
     972:	8f 93       	push	r24
     974:	9f 93       	push	r25
     976:	af 93       	push	r26
     978:	bf 93       	push	r27
     97a:	cf 93       	push	r28
     97c:	ef 93       	push	r30
     97e:	ff 93       	push	r31
     980:	e0 91 89 05 	lds	r30, 0x0589	; 0x800589 <_ser_handle>
     984:	f0 91 8a 05 	lds	r31, 0x058A	; 0x80058a <_ser_handle+0x1>
     988:	30 97       	sbiw	r30, 0x00	; 0
     98a:	a1 f0       	breq	.+40     	; 0x9b4 <__vector_20+0x58>
     98c:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     990:	6c 2f       	mov	r22, r28
     992:	84 81       	ldd	r24, Z+4	; 0x04
     994:	95 81       	ldd	r25, Z+5	; 0x05
     996:	0e 94 b6 01 	call	0x36c	; 0x36c <buffer_put_item>
     99a:	80 91 89 05 	lds	r24, 0x0589	; 0x800589 <_ser_handle>
     99e:	90 91 8a 05 	lds	r25, 0x058A	; 0x80058a <_ser_handle+0x1>
     9a2:	dc 01       	movw	r26, r24
     9a4:	16 96       	adiw	r26, 0x06	; 6
     9a6:	ed 91       	ld	r30, X+
     9a8:	fc 91       	ld	r31, X
     9aa:	17 97       	sbiw	r26, 0x07	; 7
     9ac:	30 97       	sbiw	r30, 0x00	; 0
     9ae:	11 f0       	breq	.+4      	; 0x9b4 <__vector_20+0x58>
     9b0:	6c 2f       	mov	r22, r28
     9b2:	09 95       	icall
     9b4:	ff 91       	pop	r31
     9b6:	ef 91       	pop	r30
     9b8:	cf 91       	pop	r28
     9ba:	bf 91       	pop	r27
     9bc:	af 91       	pop	r26
     9be:	9f 91       	pop	r25
     9c0:	8f 91       	pop	r24
     9c2:	7f 91       	pop	r23
     9c4:	6f 91       	pop	r22
     9c6:	5f 91       	pop	r21
     9c8:	4f 91       	pop	r20
     9ca:	3f 91       	pop	r19
     9cc:	2f 91       	pop	r18
     9ce:	0f 90       	pop	r0
     9d0:	0f be       	out	0x3f, r0	; 63
     9d2:	0f 90       	pop	r0
     9d4:	1f 90       	pop	r1
     9d6:	18 95       	reti

000009d8 <__vector_21>:
     9d8:	1f 92       	push	r1
     9da:	0f 92       	push	r0
     9dc:	0f b6       	in	r0, 0x3f	; 63
     9de:	0f 92       	push	r0
     9e0:	11 24       	eor	r1, r1
     9e2:	2f 93       	push	r18
     9e4:	3f 93       	push	r19
     9e6:	4f 93       	push	r20
     9e8:	5f 93       	push	r21
     9ea:	6f 93       	push	r22
     9ec:	7f 93       	push	r23
     9ee:	8f 93       	push	r24
     9f0:	9f 93       	push	r25
     9f2:	af 93       	push	r26
     9f4:	bf 93       	push	r27
     9f6:	ef 93       	push	r30
     9f8:	ff 93       	push	r31
     9fa:	cf 93       	push	r28
     9fc:	df 93       	push	r29
     9fe:	1f 92       	push	r1
     a00:	cd b7       	in	r28, 0x3d	; 61
     a02:	de b7       	in	r29, 0x3e	; 62
     a04:	e0 91 89 05 	lds	r30, 0x0589	; 0x800589 <_ser_handle>
     a08:	f0 91 8a 05 	lds	r31, 0x058A	; 0x80058a <_ser_handle+0x1>
     a0c:	30 97       	sbiw	r30, 0x00	; 0
     a0e:	99 f0       	breq	.+38     	; 0xa36 <__vector_21+0x5e>
     a10:	be 01       	movw	r22, r28
     a12:	6f 5f       	subi	r22, 0xFF	; 255
     a14:	7f 4f       	sbci	r23, 0xFF	; 255
     a16:	82 81       	ldd	r24, Z+2	; 0x02
     a18:	93 81       	ldd	r25, Z+3	; 0x03
     a1a:	0e 94 95 01 	call	0x32a	; 0x32a <buffer_get_item>
     a1e:	81 11       	cpse	r24, r1
     a20:	04 c0       	rjmp	.+8      	; 0xa2a <__vector_21+0x52>
     a22:	89 81       	ldd	r24, Y+1	; 0x01
     a24:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     a28:	0b c0       	rjmp	.+22     	; 0xa40 <__vector_21+0x68>
     a2a:	e1 ec       	ldi	r30, 0xC1	; 193
     a2c:	f0 e0       	ldi	r31, 0x00	; 0
     a2e:	80 81       	ld	r24, Z
     a30:	8f 7d       	andi	r24, 0xDF	; 223
     a32:	80 83       	st	Z, r24
     a34:	05 c0       	rjmp	.+10     	; 0xa40 <__vector_21+0x68>
     a36:	e1 ec       	ldi	r30, 0xC1	; 193
     a38:	f0 e0       	ldi	r31, 0x00	; 0
     a3a:	80 81       	ld	r24, Z
     a3c:	8f 7d       	andi	r24, 0xDF	; 223
     a3e:	80 83       	st	Z, r24
     a40:	0f 90       	pop	r0
     a42:	df 91       	pop	r29
     a44:	cf 91       	pop	r28
     a46:	ff 91       	pop	r31
     a48:	ef 91       	pop	r30
     a4a:	bf 91       	pop	r27
     a4c:	af 91       	pop	r26
     a4e:	9f 91       	pop	r25
     a50:	8f 91       	pop	r24
     a52:	7f 91       	pop	r23
     a54:	6f 91       	pop	r22
     a56:	5f 91       	pop	r21
     a58:	4f 91       	pop	r20
     a5a:	3f 91       	pop	r19
     a5c:	2f 91       	pop	r18
     a5e:	0f 90       	pop	r0
     a60:	0f be       	out	0x3f, r0	; 63
     a62:	0f 90       	pop	r0
     a64:	1f 90       	pop	r1
     a66:	18 95       	reti

00000a68 <__vector_28>:
     a68:	1f 92       	push	r1
     a6a:	0f 92       	push	r0
     a6c:	0f b6       	in	r0, 0x3f	; 63
     a6e:	0f 92       	push	r0
     a70:	11 24       	eor	r1, r1
     a72:	2f 93       	push	r18
     a74:	3f 93       	push	r19
     a76:	4f 93       	push	r20
     a78:	5f 93       	push	r21
     a7a:	6f 93       	push	r22
     a7c:	7f 93       	push	r23
     a7e:	8f 93       	push	r24
     a80:	9f 93       	push	r25
     a82:	af 93       	push	r26
     a84:	bf 93       	push	r27
     a86:	cf 93       	push	r28
     a88:	ef 93       	push	r30
     a8a:	ff 93       	push	r31
     a8c:	e0 91 8b 05 	lds	r30, 0x058B	; 0x80058b <_ser_handle+0x2>
     a90:	f0 91 8c 05 	lds	r31, 0x058C	; 0x80058c <_ser_handle+0x3>
     a94:	30 97       	sbiw	r30, 0x00	; 0
     a96:	a1 f0       	breq	.+40     	; 0xac0 <__vector_28+0x58>
     a98:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     a9c:	6c 2f       	mov	r22, r28
     a9e:	84 81       	ldd	r24, Z+4	; 0x04
     aa0:	95 81       	ldd	r25, Z+5	; 0x05
     aa2:	0e 94 b6 01 	call	0x36c	; 0x36c <buffer_put_item>
     aa6:	80 91 8b 05 	lds	r24, 0x058B	; 0x80058b <_ser_handle+0x2>
     aaa:	90 91 8c 05 	lds	r25, 0x058C	; 0x80058c <_ser_handle+0x3>
     aae:	dc 01       	movw	r26, r24
     ab0:	16 96       	adiw	r26, 0x06	; 6
     ab2:	ed 91       	ld	r30, X+
     ab4:	fc 91       	ld	r31, X
     ab6:	17 97       	sbiw	r26, 0x07	; 7
     ab8:	30 97       	sbiw	r30, 0x00	; 0
     aba:	11 f0       	breq	.+4      	; 0xac0 <__vector_28+0x58>
     abc:	6c 2f       	mov	r22, r28
     abe:	09 95       	icall
     ac0:	ff 91       	pop	r31
     ac2:	ef 91       	pop	r30
     ac4:	cf 91       	pop	r28
     ac6:	bf 91       	pop	r27
     ac8:	af 91       	pop	r26
     aca:	9f 91       	pop	r25
     acc:	8f 91       	pop	r24
     ace:	7f 91       	pop	r23
     ad0:	6f 91       	pop	r22
     ad2:	5f 91       	pop	r21
     ad4:	4f 91       	pop	r20
     ad6:	3f 91       	pop	r19
     ad8:	2f 91       	pop	r18
     ada:	0f 90       	pop	r0
     adc:	0f be       	out	0x3f, r0	; 63
     ade:	0f 90       	pop	r0
     ae0:	1f 90       	pop	r1
     ae2:	18 95       	reti

00000ae4 <__vector_29>:
     ae4:	1f 92       	push	r1
     ae6:	0f 92       	push	r0
     ae8:	0f b6       	in	r0, 0x3f	; 63
     aea:	0f 92       	push	r0
     aec:	11 24       	eor	r1, r1
     aee:	2f 93       	push	r18
     af0:	3f 93       	push	r19
     af2:	4f 93       	push	r20
     af4:	5f 93       	push	r21
     af6:	6f 93       	push	r22
     af8:	7f 93       	push	r23
     afa:	8f 93       	push	r24
     afc:	9f 93       	push	r25
     afe:	af 93       	push	r26
     b00:	bf 93       	push	r27
     b02:	ef 93       	push	r30
     b04:	ff 93       	push	r31
     b06:	cf 93       	push	r28
     b08:	df 93       	push	r29
     b0a:	1f 92       	push	r1
     b0c:	cd b7       	in	r28, 0x3d	; 61
     b0e:	de b7       	in	r29, 0x3e	; 62
     b10:	e0 91 8b 05 	lds	r30, 0x058B	; 0x80058b <_ser_handle+0x2>
     b14:	f0 91 8c 05 	lds	r31, 0x058C	; 0x80058c <_ser_handle+0x3>
     b18:	30 97       	sbiw	r30, 0x00	; 0
     b1a:	99 f0       	breq	.+38     	; 0xb42 <__vector_29+0x5e>
     b1c:	be 01       	movw	r22, r28
     b1e:	6f 5f       	subi	r22, 0xFF	; 255
     b20:	7f 4f       	sbci	r23, 0xFF	; 255
     b22:	82 81       	ldd	r24, Z+2	; 0x02
     b24:	93 81       	ldd	r25, Z+3	; 0x03
     b26:	0e 94 95 01 	call	0x32a	; 0x32a <buffer_get_item>
     b2a:	81 11       	cpse	r24, r1
     b2c:	04 c0       	rjmp	.+8      	; 0xb36 <__vector_29+0x52>
     b2e:	89 81       	ldd	r24, Y+1	; 0x01
     b30:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     b34:	0b c0       	rjmp	.+22     	; 0xb4c <__vector_29+0x68>
     b36:	e9 ec       	ldi	r30, 0xC9	; 201
     b38:	f0 e0       	ldi	r31, 0x00	; 0
     b3a:	80 81       	ld	r24, Z
     b3c:	8f 7d       	andi	r24, 0xDF	; 223
     b3e:	80 83       	st	Z, r24
     b40:	05 c0       	rjmp	.+10     	; 0xb4c <__vector_29+0x68>
     b42:	e9 ec       	ldi	r30, 0xC9	; 201
     b44:	f0 e0       	ldi	r31, 0x00	; 0
     b46:	80 81       	ld	r24, Z
     b48:	8f 7d       	andi	r24, 0xDF	; 223
     b4a:	80 83       	st	Z, r24
     b4c:	0f 90       	pop	r0
     b4e:	df 91       	pop	r29
     b50:	cf 91       	pop	r28
     b52:	ff 91       	pop	r31
     b54:	ef 91       	pop	r30
     b56:	bf 91       	pop	r27
     b58:	af 91       	pop	r26
     b5a:	9f 91       	pop	r25
     b5c:	8f 91       	pop	r24
     b5e:	7f 91       	pop	r23
     b60:	6f 91       	pop	r22
     b62:	5f 91       	pop	r21
     b64:	4f 91       	pop	r20
     b66:	3f 91       	pop	r19
     b68:	2f 91       	pop	r18
     b6a:	0f 90       	pop	r0
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	0f 90       	pop	r0
     b70:	1f 90       	pop	r1
     b72:	18 95       	reti

00000b74 <prvCopyDataToQueue>:
     b74:	0f 93       	push	r16
     b76:	1f 93       	push	r17
     b78:	cf 93       	push	r28
     b7a:	df 93       	push	r29
     b7c:	ec 01       	movw	r28, r24
     b7e:	04 2f       	mov	r16, r20
     b80:	1a 8d       	ldd	r17, Y+26	; 0x1a
     b82:	4c 8d       	ldd	r20, Y+28	; 0x1c
     b84:	41 11       	cpse	r20, r1
     b86:	0c c0       	rjmp	.+24     	; 0xba0 <prvCopyDataToQueue+0x2c>
     b88:	88 81       	ld	r24, Y
     b8a:	99 81       	ldd	r25, Y+1	; 0x01
     b8c:	89 2b       	or	r24, r25
     b8e:	09 f0       	breq	.+2      	; 0xb92 <prvCopyDataToQueue+0x1e>
     b90:	42 c0       	rjmp	.+132    	; 0xc16 <prvCopyDataToQueue+0xa2>
     b92:	8a 81       	ldd	r24, Y+2	; 0x02
     b94:	9b 81       	ldd	r25, Y+3	; 0x03
     b96:	0e 94 44 0a 	call	0x1488	; 0x1488 <xTaskPriorityDisinherit>
     b9a:	1b 82       	std	Y+3, r1	; 0x03
     b9c:	1a 82       	std	Y+2, r1	; 0x02
     b9e:	42 c0       	rjmp	.+132    	; 0xc24 <prvCopyDataToQueue+0xb0>
     ba0:	01 11       	cpse	r16, r1
     ba2:	17 c0       	rjmp	.+46     	; 0xbd2 <prvCopyDataToQueue+0x5e>
     ba4:	50 e0       	ldi	r21, 0x00	; 0
     ba6:	8c 81       	ldd	r24, Y+4	; 0x04
     ba8:	9d 81       	ldd	r25, Y+5	; 0x05
     baa:	0e 94 c7 0b 	call	0x178e	; 0x178e <memcpy>
     bae:	2c 8d       	ldd	r18, Y+28	; 0x1c
     bb0:	8c 81       	ldd	r24, Y+4	; 0x04
     bb2:	9d 81       	ldd	r25, Y+5	; 0x05
     bb4:	82 0f       	add	r24, r18
     bb6:	91 1d       	adc	r25, r1
     bb8:	9d 83       	std	Y+5, r25	; 0x05
     bba:	8c 83       	std	Y+4, r24	; 0x04
     bbc:	2a 81       	ldd	r18, Y+2	; 0x02
     bbe:	3b 81       	ldd	r19, Y+3	; 0x03
     bc0:	82 17       	cp	r24, r18
     bc2:	93 07       	cpc	r25, r19
     bc4:	50 f1       	brcs	.+84     	; 0xc1a <prvCopyDataToQueue+0xa6>
     bc6:	88 81       	ld	r24, Y
     bc8:	99 81       	ldd	r25, Y+1	; 0x01
     bca:	9d 83       	std	Y+5, r25	; 0x05
     bcc:	8c 83       	std	Y+4, r24	; 0x04
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	29 c0       	rjmp	.+82     	; 0xc24 <prvCopyDataToQueue+0xb0>
     bd2:	50 e0       	ldi	r21, 0x00	; 0
     bd4:	8e 81       	ldd	r24, Y+6	; 0x06
     bd6:	9f 81       	ldd	r25, Y+7	; 0x07
     bd8:	0e 94 c7 0b 	call	0x178e	; 0x178e <memcpy>
     bdc:	8c 8d       	ldd	r24, Y+28	; 0x1c
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	91 95       	neg	r25
     be2:	81 95       	neg	r24
     be4:	91 09       	sbc	r25, r1
     be6:	2e 81       	ldd	r18, Y+6	; 0x06
     be8:	3f 81       	ldd	r19, Y+7	; 0x07
     bea:	28 0f       	add	r18, r24
     bec:	39 1f       	adc	r19, r25
     bee:	3f 83       	std	Y+7, r19	; 0x07
     bf0:	2e 83       	std	Y+6, r18	; 0x06
     bf2:	48 81       	ld	r20, Y
     bf4:	59 81       	ldd	r21, Y+1	; 0x01
     bf6:	24 17       	cp	r18, r20
     bf8:	35 07       	cpc	r19, r21
     bfa:	30 f4       	brcc	.+12     	; 0xc08 <prvCopyDataToQueue+0x94>
     bfc:	2a 81       	ldd	r18, Y+2	; 0x02
     bfe:	3b 81       	ldd	r19, Y+3	; 0x03
     c00:	82 0f       	add	r24, r18
     c02:	93 1f       	adc	r25, r19
     c04:	9f 83       	std	Y+7, r25	; 0x07
     c06:	8e 83       	std	Y+6, r24	; 0x06
     c08:	02 30       	cpi	r16, 0x02	; 2
     c0a:	49 f4       	brne	.+18     	; 0xc1e <prvCopyDataToQueue+0xaa>
     c0c:	11 23       	and	r17, r17
     c0e:	49 f0       	breq	.+18     	; 0xc22 <prvCopyDataToQueue+0xae>
     c10:	11 50       	subi	r17, 0x01	; 1
     c12:	80 e0       	ldi	r24, 0x00	; 0
     c14:	07 c0       	rjmp	.+14     	; 0xc24 <prvCopyDataToQueue+0xb0>
     c16:	80 e0       	ldi	r24, 0x00	; 0
     c18:	05 c0       	rjmp	.+10     	; 0xc24 <prvCopyDataToQueue+0xb0>
     c1a:	80 e0       	ldi	r24, 0x00	; 0
     c1c:	03 c0       	rjmp	.+6      	; 0xc24 <prvCopyDataToQueue+0xb0>
     c1e:	80 e0       	ldi	r24, 0x00	; 0
     c20:	01 c0       	rjmp	.+2      	; 0xc24 <prvCopyDataToQueue+0xb0>
     c22:	80 e0       	ldi	r24, 0x00	; 0
     c24:	1f 5f       	subi	r17, 0xFF	; 255
     c26:	1a 8f       	std	Y+26, r17	; 0x1a
     c28:	df 91       	pop	r29
     c2a:	cf 91       	pop	r28
     c2c:	1f 91       	pop	r17
     c2e:	0f 91       	pop	r16
     c30:	08 95       	ret

00000c32 <xQueueGenericSendFromISR>:
     c32:	ef 92       	push	r14
     c34:	ff 92       	push	r15
     c36:	0f 93       	push	r16
     c38:	1f 93       	push	r17
     c3a:	cf 93       	push	r28
     c3c:	df 93       	push	r29
     c3e:	8a 01       	movw	r16, r20
     c40:	fc 01       	movw	r30, r24
     c42:	52 8d       	ldd	r21, Z+26	; 0x1a
     c44:	33 8d       	ldd	r19, Z+27	; 0x1b
     c46:	53 17       	cp	r21, r19
     c48:	10 f0       	brcs	.+4      	; 0xc4e <xQueueGenericSendFromISR+0x1c>
     c4a:	22 30       	cpi	r18, 0x02	; 2
     c4c:	f1 f4       	brne	.+60     	; 0xc8a <xQueueGenericSendFromISR+0x58>
     c4e:	42 2f       	mov	r20, r18
     c50:	78 01       	movw	r14, r16
     c52:	ec 01       	movw	r28, r24
     c54:	1e 8d       	ldd	r17, Y+30	; 0x1e
     c56:	0e 94 ba 05 	call	0xb74	; 0xb74 <prvCopyDataToQueue>
     c5a:	1f 3f       	cpi	r17, 0xFF	; 255
     c5c:	81 f4       	brne	.+32     	; 0xc7e <xQueueGenericSendFromISR+0x4c>
     c5e:	89 89       	ldd	r24, Y+17	; 0x11
     c60:	88 23       	and	r24, r24
     c62:	a9 f0       	breq	.+42     	; 0xc8e <xQueueGenericSendFromISR+0x5c>
     c64:	ce 01       	movw	r24, r28
     c66:	41 96       	adiw	r24, 0x11	; 17
     c68:	0e 94 fc 09 	call	0x13f8	; 0x13f8 <xTaskRemoveFromEventList>
     c6c:	88 23       	and	r24, r24
     c6e:	89 f0       	breq	.+34     	; 0xc92 <xQueueGenericSendFromISR+0x60>
     c70:	e1 14       	cp	r14, r1
     c72:	f1 04       	cpc	r15, r1
     c74:	81 f0       	breq	.+32     	; 0xc96 <xQueueGenericSendFromISR+0x64>
     c76:	81 e0       	ldi	r24, 0x01	; 1
     c78:	f7 01       	movw	r30, r14
     c7a:	80 83       	st	Z, r24
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <xQueueGenericSendFromISR+0x66>
     c7e:	ff 24       	eor	r15, r15
     c80:	f3 94       	inc	r15
     c82:	f1 0e       	add	r15, r17
     c84:	fe 8e       	std	Y+30, r15	; 0x1e
     c86:	81 e0       	ldi	r24, 0x01	; 1
     c88:	07 c0       	rjmp	.+14     	; 0xc98 <xQueueGenericSendFromISR+0x66>
     c8a:	80 e0       	ldi	r24, 0x00	; 0
     c8c:	05 c0       	rjmp	.+10     	; 0xc98 <xQueueGenericSendFromISR+0x66>
     c8e:	81 e0       	ldi	r24, 0x01	; 1
     c90:	03 c0       	rjmp	.+6      	; 0xc98 <xQueueGenericSendFromISR+0x66>
     c92:	81 e0       	ldi	r24, 0x01	; 1
     c94:	01 c0       	rjmp	.+2      	; 0xc98 <xQueueGenericSendFromISR+0x66>
     c96:	81 e0       	ldi	r24, 0x01	; 1
     c98:	df 91       	pop	r29
     c9a:	cf 91       	pop	r28
     c9c:	1f 91       	pop	r17
     c9e:	0f 91       	pop	r16
     ca0:	ff 90       	pop	r15
     ca2:	ef 90       	pop	r14
     ca4:	08 95       	ret

00000ca6 <prvResetNextTaskUnblockTime>:
     ca6:	e0 91 b0 05 	lds	r30, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
     caa:	f0 91 b1 05 	lds	r31, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
     cae:	80 81       	ld	r24, Z
     cb0:	81 11       	cpse	r24, r1
     cb2:	07 c0       	rjmp	.+14     	; 0xcc2 <prvResetNextTaskUnblockTime+0x1c>
     cb4:	8f ef       	ldi	r24, 0xFF	; 255
     cb6:	9f ef       	ldi	r25, 0xFF	; 255
     cb8:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <xNextTaskUnblockTime+0x1>
     cbc:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <xNextTaskUnblockTime>
     cc0:	08 95       	ret
     cc2:	e0 91 b0 05 	lds	r30, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
     cc6:	f0 91 b1 05 	lds	r31, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
     cca:	05 80       	ldd	r0, Z+5	; 0x05
     ccc:	f6 81       	ldd	r31, Z+6	; 0x06
     cce:	e0 2d       	mov	r30, r0
     cd0:	06 80       	ldd	r0, Z+6	; 0x06
     cd2:	f7 81       	ldd	r31, Z+7	; 0x07
     cd4:	e0 2d       	mov	r30, r0
     cd6:	82 81       	ldd	r24, Z+2	; 0x02
     cd8:	93 81       	ldd	r25, Z+3	; 0x03
     cda:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <xNextTaskUnblockTime+0x1>
     cde:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <xNextTaskUnblockTime>
     ce2:	08 95       	ret

00000ce4 <prvAddCurrentTaskToDelayedList>:
     ce4:	0f 93       	push	r16
     ce6:	1f 93       	push	r17
     ce8:	cf 93       	push	r28
     cea:	df 93       	push	r29
     cec:	ec 01       	movw	r28, r24
     cee:	00 91 98 05 	lds	r16, 0x0598	; 0x800598 <xTickCount>
     cf2:	10 91 99 05 	lds	r17, 0x0599	; 0x800599 <xTickCount+0x1>
     cf6:	80 91 e8 05 	lds	r24, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     cfa:	90 91 e9 05 	lds	r25, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     cfe:	02 96       	adiw	r24, 0x02	; 2
     d00:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
     d04:	c0 0f       	add	r28, r16
     d06:	d1 1f       	adc	r29, r17
     d08:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     d0c:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     d10:	d3 83       	std	Z+3, r29	; 0x03
     d12:	c2 83       	std	Z+2, r28	; 0x02
     d14:	c0 17       	cp	r28, r16
     d16:	d1 07       	cpc	r29, r17
     d18:	68 f4       	brcc	.+26     	; 0xd34 <prvAddCurrentTaskToDelayedList+0x50>
     d1a:	60 91 e8 05 	lds	r22, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     d1e:	70 91 e9 05 	lds	r23, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     d22:	80 91 ae 05 	lds	r24, 0x05AE	; 0x8005ae <pxOverflowDelayedTaskList>
     d26:	90 91 af 05 	lds	r25, 0x05AF	; 0x8005af <pxOverflowDelayedTaskList+0x1>
     d2a:	6e 5f       	subi	r22, 0xFE	; 254
     d2c:	7f 4f       	sbci	r23, 0xFF	; 255
     d2e:	0e 94 06 02 	call	0x40c	; 0x40c <vListInsert>
     d32:	17 c0       	rjmp	.+46     	; 0xd62 <prvAddCurrentTaskToDelayedList+0x7e>
     d34:	60 91 e8 05 	lds	r22, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     d38:	70 91 e9 05 	lds	r23, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     d3c:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
     d40:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
     d44:	6e 5f       	subi	r22, 0xFE	; 254
     d46:	7f 4f       	sbci	r23, 0xFF	; 255
     d48:	0e 94 06 02 	call	0x40c	; 0x40c <vListInsert>
     d4c:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <xNextTaskUnblockTime>
     d50:	90 91 91 05 	lds	r25, 0x0591	; 0x800591 <xNextTaskUnblockTime+0x1>
     d54:	c8 17       	cp	r28, r24
     d56:	d9 07       	cpc	r29, r25
     d58:	20 f4       	brcc	.+8      	; 0xd62 <prvAddCurrentTaskToDelayedList+0x7e>
     d5a:	d0 93 91 05 	sts	0x0591, r29	; 0x800591 <xNextTaskUnblockTime+0x1>
     d5e:	c0 93 90 05 	sts	0x0590, r28	; 0x800590 <xNextTaskUnblockTime>
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	08 95       	ret

00000d6c <xTaskCreate>:
     d6c:	4f 92       	push	r4
     d6e:	5f 92       	push	r5
     d70:	6f 92       	push	r6
     d72:	7f 92       	push	r7
     d74:	8f 92       	push	r8
     d76:	9f 92       	push	r9
     d78:	af 92       	push	r10
     d7a:	bf 92       	push	r11
     d7c:	cf 92       	push	r12
     d7e:	df 92       	push	r13
     d80:	ef 92       	push	r14
     d82:	ff 92       	push	r15
     d84:	0f 93       	push	r16
     d86:	cf 93       	push	r28
     d88:	df 93       	push	r29
     d8a:	4c 01       	movw	r8, r24
     d8c:	6b 01       	movw	r12, r22
     d8e:	5a 01       	movw	r10, r20
     d90:	29 01       	movw	r4, r18
     d92:	ca 01       	movw	r24, r20
     d94:	0e 94 bb 03 	call	0x776	; 0x776 <pvPortMalloc>
     d98:	3c 01       	movw	r6, r24
     d9a:	89 2b       	or	r24, r25
     d9c:	09 f4       	brne	.+2      	; 0xda0 <xTaskCreate+0x34>
     d9e:	ea c0       	rjmp	.+468    	; 0xf74 <xTaskCreate+0x208>
     da0:	8c e2       	ldi	r24, 0x2C	; 44
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 bb 03 	call	0x776	; 0x776 <pvPortMalloc>
     da8:	ec 01       	movw	r28, r24
     daa:	89 2b       	or	r24, r25
     dac:	b1 f0       	breq	.+44     	; 0xdda <xTaskCreate+0x6e>
     dae:	78 8e       	std	Y+24, r7	; 0x18
     db0:	6f 8a       	std	Y+23, r6	; 0x17
     db2:	a5 01       	movw	r20, r10
     db4:	65 ea       	ldi	r22, 0xA5	; 165
     db6:	70 e0       	ldi	r23, 0x00	; 0
     db8:	c3 01       	movw	r24, r6
     dba:	0e 94 d0 0b 	call	0x17a0	; 0x17a0 <memset>
     dbe:	81 e0       	ldi	r24, 0x01	; 1
     dc0:	a8 1a       	sub	r10, r24
     dc2:	b1 08       	sbc	r11, r1
     dc4:	8f 89       	ldd	r24, Y+23	; 0x17
     dc6:	98 8d       	ldd	r25, Y+24	; 0x18
     dc8:	a8 0e       	add	r10, r24
     dca:	b9 1e       	adc	r11, r25
     dcc:	d6 01       	movw	r26, r12
     dce:	8c 91       	ld	r24, X
     dd0:	89 8f       	std	Y+25, r24	; 0x19
     dd2:	8c 91       	ld	r24, X
     dd4:	81 11       	cpse	r24, r1
     dd6:	05 c0       	rjmp	.+10     	; 0xde2 <xTaskCreate+0x76>
     dd8:	18 c0       	rjmp	.+48     	; 0xe0a <xTaskCreate+0x9e>
     dda:	c3 01       	movw	r24, r6
     ddc:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <vPortFree>
     de0:	c9 c0       	rjmp	.+402    	; 0xf74 <xTaskCreate+0x208>
     de2:	ae 01       	movw	r20, r28
     de4:	46 5e       	subi	r20, 0xE6	; 230
     de6:	5f 4f       	sbci	r21, 0xFF	; 255
     de8:	f6 01       	movw	r30, r12
     dea:	31 96       	adiw	r30, 0x01	; 1
     dec:	b8 e0       	ldi	r27, 0x08	; 8
     dee:	cb 0e       	add	r12, r27
     df0:	d1 1c       	adc	r13, r1
     df2:	cf 01       	movw	r24, r30
     df4:	21 91       	ld	r18, Z+
     df6:	da 01       	movw	r26, r20
     df8:	2d 93       	st	X+, r18
     dfa:	ad 01       	movw	r20, r26
     dfc:	dc 01       	movw	r26, r24
     dfe:	8c 91       	ld	r24, X
     e00:	88 23       	and	r24, r24
     e02:	19 f0       	breq	.+6      	; 0xe0a <xTaskCreate+0x9e>
     e04:	ec 15       	cp	r30, r12
     e06:	fd 05       	cpc	r31, r13
     e08:	a1 f7       	brne	.-24     	; 0xdf2 <xTaskCreate+0x86>
     e0a:	18 a2       	std	Y+32, r1	; 0x20
     e0c:	04 30       	cpi	r16, 0x04	; 4
     e0e:	08 f0       	brcs	.+2      	; 0xe12 <xTaskCreate+0xa6>
     e10:	03 e0       	ldi	r16, 0x03	; 3
     e12:	0e 8b       	std	Y+22, r16	; 0x16
     e14:	0b a3       	std	Y+35, r16	; 0x23
     e16:	1c a2       	std	Y+36, r1	; 0x24
     e18:	6e 01       	movw	r12, r28
     e1a:	b2 e0       	ldi	r27, 0x02	; 2
     e1c:	cb 0e       	add	r12, r27
     e1e:	d1 1c       	adc	r13, r1
     e20:	c6 01       	movw	r24, r12
     e22:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <vListInitialiseItem>
     e26:	ce 01       	movw	r24, r28
     e28:	0c 96       	adiw	r24, 0x0c	; 12
     e2a:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <vListInitialiseItem>
     e2e:	d9 87       	std	Y+9, r29	; 0x09
     e30:	c8 87       	std	Y+8, r28	; 0x08
     e32:	84 e0       	ldi	r24, 0x04	; 4
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	80 1b       	sub	r24, r16
     e38:	91 09       	sbc	r25, r1
     e3a:	9d 87       	std	Y+13, r25	; 0x0d
     e3c:	8c 87       	std	Y+12, r24	; 0x0c
     e3e:	db 8b       	std	Y+19, r29	; 0x13
     e40:	ca 8b       	std	Y+18, r28	; 0x12
     e42:	1e a2       	std	Y+38, r1	; 0x26
     e44:	1d a2       	std	Y+37, r1	; 0x25
     e46:	1f a2       	std	Y+39, r1	; 0x27
     e48:	18 a6       	std	Y+40, r1	; 0x28
     e4a:	19 a6       	std	Y+41, r1	; 0x29
     e4c:	1a a6       	std	Y+42, r1	; 0x2a
     e4e:	1b a6       	std	Y+43, r1	; 0x2b
     e50:	a2 01       	movw	r20, r4
     e52:	b4 01       	movw	r22, r8
     e54:	c5 01       	movw	r24, r10
     e56:	0e 94 5d 02 	call	0x4ba	; 0x4ba <pxPortInitialiseStack>
     e5a:	99 83       	std	Y+1, r25	; 0x01
     e5c:	88 83       	st	Y, r24
     e5e:	e1 14       	cp	r14, r1
     e60:	f1 04       	cpc	r15, r1
     e62:	19 f0       	breq	.+6      	; 0xe6a <xTaskCreate+0xfe>
     e64:	f7 01       	movw	r30, r14
     e66:	d1 83       	std	Z+1, r29	; 0x01
     e68:	c0 83       	st	Z, r28
     e6a:	0f b6       	in	r0, 0x3f	; 63
     e6c:	f8 94       	cli
     e6e:	0f 92       	push	r0
     e70:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <uxCurrentNumberOfTasks>
     e74:	8f 5f       	subi	r24, 0xFF	; 255
     e76:	80 93 9a 05 	sts	0x059A, r24	; 0x80059a <uxCurrentNumberOfTasks>
     e7a:	80 91 e8 05 	lds	r24, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     e7e:	90 91 e9 05 	lds	r25, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     e82:	89 2b       	or	r24, r25
     e84:	a9 f5       	brne	.+106    	; 0xef0 <xTaskCreate+0x184>
     e86:	d0 93 e9 05 	sts	0x05E9, r29	; 0x8005e9 <pxCurrentTCB+0x1>
     e8a:	c0 93 e8 05 	sts	0x05E8, r28	; 0x8005e8 <pxCurrentTCB>
     e8e:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <uxCurrentNumberOfTasks>
     e92:	81 30       	cpi	r24, 0x01	; 1
     e94:	e9 f5       	brne	.+122    	; 0xf10 <xTaskCreate+0x1a4>
     e96:	84 ec       	ldi	r24, 0xC4	; 196
     e98:	95 e0       	ldi	r25, 0x05	; 5
     e9a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     e9e:	8d ec       	ldi	r24, 0xCD	; 205
     ea0:	95 e0       	ldi	r25, 0x05	; 5
     ea2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     ea6:	86 ed       	ldi	r24, 0xD6	; 214
     ea8:	95 e0       	ldi	r25, 0x05	; 5
     eaa:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     eae:	8f ed       	ldi	r24, 0xDF	; 223
     eb0:	95 e0       	ldi	r25, 0x05	; 5
     eb2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     eb6:	8b eb       	ldi	r24, 0xBB	; 187
     eb8:	95 e0       	ldi	r25, 0x05	; 5
     eba:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     ebe:	82 eb       	ldi	r24, 0xB2	; 178
     ec0:	95 e0       	ldi	r25, 0x05	; 5
     ec2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     ec6:	85 ea       	ldi	r24, 0xA5	; 165
     ec8:	95 e0       	ldi	r25, 0x05	; 5
     eca:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     ece:	8c e9       	ldi	r24, 0x9C	; 156
     ed0:	95 e0       	ldi	r25, 0x05	; 5
     ed2:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <vListInitialise>
     ed6:	8b eb       	ldi	r24, 0xBB	; 187
     ed8:	95 e0       	ldi	r25, 0x05	; 5
     eda:	90 93 b1 05 	sts	0x05B1, r25	; 0x8005b1 <pxDelayedTaskList+0x1>
     ede:	80 93 b0 05 	sts	0x05B0, r24	; 0x8005b0 <pxDelayedTaskList>
     ee2:	82 eb       	ldi	r24, 0xB2	; 178
     ee4:	95 e0       	ldi	r25, 0x05	; 5
     ee6:	90 93 af 05 	sts	0x05AF, r25	; 0x8005af <pxOverflowDelayedTaskList+0x1>
     eea:	80 93 ae 05 	sts	0x05AE, r24	; 0x8005ae <pxOverflowDelayedTaskList>
     eee:	10 c0       	rjmp	.+32     	; 0xf10 <xTaskCreate+0x1a4>
     ef0:	80 91 96 05 	lds	r24, 0x0596	; 0x800596 <xSchedulerRunning>
     ef4:	81 11       	cpse	r24, r1
     ef6:	0c c0       	rjmp	.+24     	; 0xf10 <xTaskCreate+0x1a4>
     ef8:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     efc:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     f00:	96 89       	ldd	r25, Z+22	; 0x16
     f02:	8e 89       	ldd	r24, Y+22	; 0x16
     f04:	89 17       	cp	r24, r25
     f06:	20 f0       	brcs	.+8      	; 0xf10 <xTaskCreate+0x1a4>
     f08:	d0 93 e9 05 	sts	0x05E9, r29	; 0x8005e9 <pxCurrentTCB+0x1>
     f0c:	c0 93 e8 05 	sts	0x05E8, r28	; 0x8005e8 <pxCurrentTCB>
     f10:	80 91 92 05 	lds	r24, 0x0592	; 0x800592 <uxTaskNumber>
     f14:	8f 5f       	subi	r24, 0xFF	; 255
     f16:	80 93 92 05 	sts	0x0592, r24	; 0x800592 <uxTaskNumber>
     f1a:	89 a3       	std	Y+33, r24	; 0x21
     f1c:	8e 89       	ldd	r24, Y+22	; 0x16
     f1e:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <uxTopReadyPriority>
     f22:	98 17       	cp	r25, r24
     f24:	10 f4       	brcc	.+4      	; 0xf2a <xTaskCreate+0x1be>
     f26:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <uxTopReadyPriority>
     f2a:	90 e0       	ldi	r25, 0x00	; 0
     f2c:	9c 01       	movw	r18, r24
     f2e:	22 0f       	add	r18, r18
     f30:	33 1f       	adc	r19, r19
     f32:	22 0f       	add	r18, r18
     f34:	33 1f       	adc	r19, r19
     f36:	22 0f       	add	r18, r18
     f38:	33 1f       	adc	r19, r19
     f3a:	82 0f       	add	r24, r18
     f3c:	93 1f       	adc	r25, r19
     f3e:	b6 01       	movw	r22, r12
     f40:	8c 53       	subi	r24, 0x3C	; 60
     f42:	9a 4f       	sbci	r25, 0xFA	; 250
     f44:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
     f48:	0f 90       	pop	r0
     f4a:	0f be       	out	0x3f, r0	; 63
     f4c:	80 91 96 05 	lds	r24, 0x0596	; 0x800596 <xSchedulerRunning>
     f50:	88 23       	and	r24, r24
     f52:	61 f0       	breq	.+24     	; 0xf6c <xTaskCreate+0x200>
     f54:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
     f58:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
     f5c:	96 89       	ldd	r25, Z+22	; 0x16
     f5e:	8e 89       	ldd	r24, Y+22	; 0x16
     f60:	98 17       	cp	r25, r24
     f62:	30 f4       	brcc	.+12     	; 0xf70 <xTaskCreate+0x204>
     f64:	0e 94 03 03 	call	0x606	; 0x606 <vPortYield>
     f68:	81 e0       	ldi	r24, 0x01	; 1
     f6a:	05 c0       	rjmp	.+10     	; 0xf76 <xTaskCreate+0x20a>
     f6c:	81 e0       	ldi	r24, 0x01	; 1
     f6e:	03 c0       	rjmp	.+6      	; 0xf76 <xTaskCreate+0x20a>
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	01 c0       	rjmp	.+2      	; 0xf76 <xTaskCreate+0x20a>
     f74:	8f ef       	ldi	r24, 0xFF	; 255
     f76:	df 91       	pop	r29
     f78:	cf 91       	pop	r28
     f7a:	0f 91       	pop	r16
     f7c:	ff 90       	pop	r15
     f7e:	ef 90       	pop	r14
     f80:	df 90       	pop	r13
     f82:	cf 90       	pop	r12
     f84:	bf 90       	pop	r11
     f86:	af 90       	pop	r10
     f88:	9f 90       	pop	r9
     f8a:	8f 90       	pop	r8
     f8c:	7f 90       	pop	r7
     f8e:	6f 90       	pop	r6
     f90:	5f 90       	pop	r5
     f92:	4f 90       	pop	r4
     f94:	08 95       	ret

00000f96 <vTaskStartScheduler>:
     f96:	ef 92       	push	r14
     f98:	ff 92       	push	r15
     f9a:	0f 93       	push	r16
     f9c:	0f 2e       	mov	r0, r31
     f9e:	fe e8       	ldi	r31, 0x8E	; 142
     fa0:	ef 2e       	mov	r14, r31
     fa2:	f5 e0       	ldi	r31, 0x05	; 5
     fa4:	ff 2e       	mov	r15, r31
     fa6:	f0 2d       	mov	r31, r0
     fa8:	00 e0       	ldi	r16, 0x00	; 0
     faa:	20 e0       	ldi	r18, 0x00	; 0
     fac:	30 e0       	ldi	r19, 0x00	; 0
     fae:	45 e5       	ldi	r20, 0x55	; 85
     fb0:	50 e0       	ldi	r21, 0x00	; 0
     fb2:	6b e4       	ldi	r22, 0x4B	; 75
     fb4:	71 e0       	ldi	r23, 0x01	; 1
     fb6:	89 e4       	ldi	r24, 0x49	; 73
     fb8:	99 e0       	ldi	r25, 0x09	; 9
     fba:	0e 94 b6 06 	call	0xd6c	; 0xd6c <xTaskCreate>
     fbe:	81 30       	cpi	r24, 0x01	; 1
     fc0:	81 f4       	brne	.+32     	; 0xfe2 <vTaskStartScheduler+0x4c>
     fc2:	f8 94       	cli
     fc4:	8f ef       	ldi	r24, 0xFF	; 255
     fc6:	9f ef       	ldi	r25, 0xFF	; 255
     fc8:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <xNextTaskUnblockTime+0x1>
     fcc:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <xNextTaskUnblockTime>
     fd0:	81 e0       	ldi	r24, 0x01	; 1
     fd2:	80 93 96 05 	sts	0x0596, r24	; 0x800596 <xSchedulerRunning>
     fd6:	10 92 99 05 	sts	0x0599, r1	; 0x800599 <xTickCount+0x1>
     fda:	10 92 98 05 	sts	0x0598, r1	; 0x800598 <xTickCount>
     fde:	0e 94 c9 02 	call	0x592	; 0x592 <xPortStartScheduler>
     fe2:	0f 91       	pop	r16
     fe4:	ff 90       	pop	r15
     fe6:	ef 90       	pop	r14
     fe8:	08 95       	ret

00000fea <vTaskSuspendAll>:
     fea:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
     fee:	8f 5f       	subi	r24, 0xFF	; 255
     ff0:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <uxSchedulerSuspended>
     ff4:	08 95       	ret

00000ff6 <xTaskIncrementTick>:
     ff6:	cf 92       	push	r12
     ff8:	df 92       	push	r13
     ffa:	ef 92       	push	r14
     ffc:	ff 92       	push	r15
     ffe:	0f 93       	push	r16
    1000:	1f 93       	push	r17
    1002:	cf 93       	push	r28
    1004:	df 93       	push	r29
    1006:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
    100a:	81 11       	cpse	r24, r1
    100c:	99 c0       	rjmp	.+306    	; 0x1140 <xTaskIncrementTick+0x14a>
    100e:	e0 90 98 05 	lds	r14, 0x0598	; 0x800598 <xTickCount>
    1012:	f0 90 99 05 	lds	r15, 0x0599	; 0x800599 <xTickCount+0x1>
    1016:	8f ef       	ldi	r24, 0xFF	; 255
    1018:	e8 1a       	sub	r14, r24
    101a:	f8 0a       	sbc	r15, r24
    101c:	f0 92 99 05 	sts	0x0599, r15	; 0x800599 <xTickCount+0x1>
    1020:	e0 92 98 05 	sts	0x0598, r14	; 0x800598 <xTickCount>
    1024:	e1 14       	cp	r14, r1
    1026:	f1 04       	cpc	r15, r1
    1028:	b9 f4       	brne	.+46     	; 0x1058 <xTaskIncrementTick+0x62>
    102a:	80 91 b0 05 	lds	r24, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
    102e:	90 91 b1 05 	lds	r25, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
    1032:	20 91 ae 05 	lds	r18, 0x05AE	; 0x8005ae <pxOverflowDelayedTaskList>
    1036:	30 91 af 05 	lds	r19, 0x05AF	; 0x8005af <pxOverflowDelayedTaskList+0x1>
    103a:	30 93 b1 05 	sts	0x05B1, r19	; 0x8005b1 <pxDelayedTaskList+0x1>
    103e:	20 93 b0 05 	sts	0x05B0, r18	; 0x8005b0 <pxDelayedTaskList>
    1042:	90 93 af 05 	sts	0x05AF, r25	; 0x8005af <pxOverflowDelayedTaskList+0x1>
    1046:	80 93 ae 05 	sts	0x05AE, r24	; 0x8005ae <pxOverflowDelayedTaskList>
    104a:	80 91 93 05 	lds	r24, 0x0593	; 0x800593 <xNumOfOverflows>
    104e:	8f 5f       	subi	r24, 0xFF	; 255
    1050:	80 93 93 05 	sts	0x0593, r24	; 0x800593 <xNumOfOverflows>
    1054:	0e 94 53 06 	call	0xca6	; 0xca6 <prvResetNextTaskUnblockTime>
    1058:	80 91 90 05 	lds	r24, 0x0590	; 0x800590 <xNextTaskUnblockTime>
    105c:	90 91 91 05 	lds	r25, 0x0591	; 0x800591 <xNextTaskUnblockTime+0x1>
    1060:	e8 16       	cp	r14, r24
    1062:	f9 06       	cpc	r15, r25
    1064:	10 f4       	brcc	.+4      	; 0x106a <xTaskIncrementTick+0x74>
    1066:	d1 2c       	mov	r13, r1
    1068:	53 c0       	rjmp	.+166    	; 0x1110 <xTaskIncrementTick+0x11a>
    106a:	d1 2c       	mov	r13, r1
    106c:	cc 24       	eor	r12, r12
    106e:	c3 94       	inc	r12
    1070:	e0 91 b0 05 	lds	r30, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
    1074:	f0 91 b1 05 	lds	r31, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
    1078:	80 81       	ld	r24, Z
    107a:	81 11       	cpse	r24, r1
    107c:	07 c0       	rjmp	.+14     	; 0x108c <xTaskIncrementTick+0x96>
    107e:	8f ef       	ldi	r24, 0xFF	; 255
    1080:	9f ef       	ldi	r25, 0xFF	; 255
    1082:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <xNextTaskUnblockTime+0x1>
    1086:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <xNextTaskUnblockTime>
    108a:	42 c0       	rjmp	.+132    	; 0x1110 <xTaskIncrementTick+0x11a>
    108c:	e0 91 b0 05 	lds	r30, 0x05B0	; 0x8005b0 <pxDelayedTaskList>
    1090:	f0 91 b1 05 	lds	r31, 0x05B1	; 0x8005b1 <pxDelayedTaskList+0x1>
    1094:	05 80       	ldd	r0, Z+5	; 0x05
    1096:	f6 81       	ldd	r31, Z+6	; 0x06
    1098:	e0 2d       	mov	r30, r0
    109a:	c6 81       	ldd	r28, Z+6	; 0x06
    109c:	d7 81       	ldd	r29, Z+7	; 0x07
    109e:	8a 81       	ldd	r24, Y+2	; 0x02
    10a0:	9b 81       	ldd	r25, Y+3	; 0x03
    10a2:	e8 16       	cp	r14, r24
    10a4:	f9 06       	cpc	r15, r25
    10a6:	28 f4       	brcc	.+10     	; 0x10b2 <xTaskIncrementTick+0xbc>
    10a8:	90 93 91 05 	sts	0x0591, r25	; 0x800591 <xNextTaskUnblockTime+0x1>
    10ac:	80 93 90 05 	sts	0x0590, r24	; 0x800590 <xNextTaskUnblockTime>
    10b0:	2f c0       	rjmp	.+94     	; 0x1110 <xTaskIncrementTick+0x11a>
    10b2:	8e 01       	movw	r16, r28
    10b4:	0e 5f       	subi	r16, 0xFE	; 254
    10b6:	1f 4f       	sbci	r17, 0xFF	; 255
    10b8:	c8 01       	movw	r24, r16
    10ba:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    10be:	8c 89       	ldd	r24, Y+20	; 0x14
    10c0:	9d 89       	ldd	r25, Y+21	; 0x15
    10c2:	89 2b       	or	r24, r25
    10c4:	21 f0       	breq	.+8      	; 0x10ce <xTaskIncrementTick+0xd8>
    10c6:	ce 01       	movw	r24, r28
    10c8:	0c 96       	adiw	r24, 0x0c	; 12
    10ca:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    10ce:	8e 89       	ldd	r24, Y+22	; 0x16
    10d0:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <uxTopReadyPriority>
    10d4:	98 17       	cp	r25, r24
    10d6:	10 f4       	brcc	.+4      	; 0x10dc <xTaskIncrementTick+0xe6>
    10d8:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <uxTopReadyPriority>
    10dc:	90 e0       	ldi	r25, 0x00	; 0
    10de:	9c 01       	movw	r18, r24
    10e0:	22 0f       	add	r18, r18
    10e2:	33 1f       	adc	r19, r19
    10e4:	22 0f       	add	r18, r18
    10e6:	33 1f       	adc	r19, r19
    10e8:	22 0f       	add	r18, r18
    10ea:	33 1f       	adc	r19, r19
    10ec:	82 0f       	add	r24, r18
    10ee:	93 1f       	adc	r25, r19
    10f0:	b8 01       	movw	r22, r16
    10f2:	8c 53       	subi	r24, 0x3C	; 60
    10f4:	9a 4f       	sbci	r25, 0xFA	; 250
    10f6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
    10fa:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    10fe:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    1102:	9e 89       	ldd	r25, Y+22	; 0x16
    1104:	86 89       	ldd	r24, Z+22	; 0x16
    1106:	98 17       	cp	r25, r24
    1108:	08 f4       	brcc	.+2      	; 0x110c <xTaskIncrementTick+0x116>
    110a:	b2 cf       	rjmp	.-156    	; 0x1070 <xTaskIncrementTick+0x7a>
    110c:	dc 2c       	mov	r13, r12
    110e:	b0 cf       	rjmp	.-160    	; 0x1070 <xTaskIncrementTick+0x7a>
    1110:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    1114:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    1118:	86 89       	ldd	r24, Z+22	; 0x16
    111a:	90 e0       	ldi	r25, 0x00	; 0
    111c:	fc 01       	movw	r30, r24
    111e:	ee 0f       	add	r30, r30
    1120:	ff 1f       	adc	r31, r31
    1122:	ee 0f       	add	r30, r30
    1124:	ff 1f       	adc	r31, r31
    1126:	ee 0f       	add	r30, r30
    1128:	ff 1f       	adc	r31, r31
    112a:	8e 0f       	add	r24, r30
    112c:	9f 1f       	adc	r25, r31
    112e:	fc 01       	movw	r30, r24
    1130:	ec 53       	subi	r30, 0x3C	; 60
    1132:	fa 4f       	sbci	r31, 0xFA	; 250
    1134:	80 81       	ld	r24, Z
    1136:	82 30       	cpi	r24, 0x02	; 2
    1138:	48 f0       	brcs	.+18     	; 0x114c <xTaskIncrementTick+0x156>
    113a:	dd 24       	eor	r13, r13
    113c:	d3 94       	inc	r13
    113e:	06 c0       	rjmp	.+12     	; 0x114c <xTaskIncrementTick+0x156>
    1140:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxPendedTicks>
    1144:	8f 5f       	subi	r24, 0xFF	; 255
    1146:	80 93 95 05 	sts	0x0595, r24	; 0x800595 <uxPendedTicks>
    114a:	d1 2c       	mov	r13, r1
    114c:	80 91 94 05 	lds	r24, 0x0594	; 0x800594 <xYieldPending>
    1150:	88 23       	and	r24, r24
    1152:	11 f0       	breq	.+4      	; 0x1158 <xTaskIncrementTick+0x162>
    1154:	dd 24       	eor	r13, r13
    1156:	d3 94       	inc	r13
    1158:	8d 2d       	mov	r24, r13
    115a:	df 91       	pop	r29
    115c:	cf 91       	pop	r28
    115e:	1f 91       	pop	r17
    1160:	0f 91       	pop	r16
    1162:	ff 90       	pop	r15
    1164:	ef 90       	pop	r14
    1166:	df 90       	pop	r13
    1168:	cf 90       	pop	r12
    116a:	08 95       	ret

0000116c <xTaskResumeAll>:
    116c:	df 92       	push	r13
    116e:	ef 92       	push	r14
    1170:	ff 92       	push	r15
    1172:	0f 93       	push	r16
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	f8 94       	cli
    117e:	0f 92       	push	r0
    1180:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
    1184:	81 50       	subi	r24, 0x01	; 1
    1186:	80 93 8d 05 	sts	0x058D, r24	; 0x80058d <uxSchedulerSuspended>
    118a:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
    118e:	81 11       	cpse	r24, r1
    1190:	5f c0       	rjmp	.+190    	; 0x1250 <xTaskResumeAll+0xe4>
    1192:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <uxCurrentNumberOfTasks>
    1196:	81 11       	cpse	r24, r1
    1198:	33 c0       	rjmp	.+102    	; 0x1200 <xTaskResumeAll+0x94>
    119a:	5d c0       	rjmp	.+186    	; 0x1256 <xTaskResumeAll+0xea>
    119c:	d7 01       	movw	r26, r14
    119e:	15 96       	adiw	r26, 0x05	; 5
    11a0:	ed 91       	ld	r30, X+
    11a2:	fc 91       	ld	r31, X
    11a4:	16 97       	sbiw	r26, 0x06	; 6
    11a6:	c6 81       	ldd	r28, Z+6	; 0x06
    11a8:	d7 81       	ldd	r29, Z+7	; 0x07
    11aa:	ce 01       	movw	r24, r28
    11ac:	0c 96       	adiw	r24, 0x0c	; 12
    11ae:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    11b2:	8e 01       	movw	r16, r28
    11b4:	0e 5f       	subi	r16, 0xFE	; 254
    11b6:	1f 4f       	sbci	r17, 0xFF	; 255
    11b8:	c8 01       	movw	r24, r16
    11ba:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    11be:	8e 89       	ldd	r24, Y+22	; 0x16
    11c0:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <uxTopReadyPriority>
    11c4:	98 17       	cp	r25, r24
    11c6:	10 f4       	brcc	.+4      	; 0x11cc <xTaskResumeAll+0x60>
    11c8:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <uxTopReadyPriority>
    11cc:	90 e0       	ldi	r25, 0x00	; 0
    11ce:	9c 01       	movw	r18, r24
    11d0:	22 0f       	add	r18, r18
    11d2:	33 1f       	adc	r19, r19
    11d4:	22 0f       	add	r18, r18
    11d6:	33 1f       	adc	r19, r19
    11d8:	22 0f       	add	r18, r18
    11da:	33 1f       	adc	r19, r19
    11dc:	82 0f       	add	r24, r18
    11de:	93 1f       	adc	r25, r19
    11e0:	b8 01       	movw	r22, r16
    11e2:	8c 53       	subi	r24, 0x3C	; 60
    11e4:	9a 4f       	sbci	r25, 0xFA	; 250
    11e6:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
    11ea:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    11ee:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    11f2:	9e 89       	ldd	r25, Y+22	; 0x16
    11f4:	86 89       	ldd	r24, Z+22	; 0x16
    11f6:	98 17       	cp	r25, r24
    11f8:	68 f0       	brcs	.+26     	; 0x1214 <xTaskResumeAll+0xa8>
    11fa:	d0 92 94 05 	sts	0x0594, r13	; 0x800594 <xYieldPending>
    11fe:	0a c0       	rjmp	.+20     	; 0x1214 <xTaskResumeAll+0xa8>
    1200:	c0 e0       	ldi	r28, 0x00	; 0
    1202:	d0 e0       	ldi	r29, 0x00	; 0
    1204:	0f 2e       	mov	r0, r31
    1206:	f5 ea       	ldi	r31, 0xA5	; 165
    1208:	ef 2e       	mov	r14, r31
    120a:	f5 e0       	ldi	r31, 0x05	; 5
    120c:	ff 2e       	mov	r15, r31
    120e:	f0 2d       	mov	r31, r0
    1210:	dd 24       	eor	r13, r13
    1212:	d3 94       	inc	r13
    1214:	f7 01       	movw	r30, r14
    1216:	80 81       	ld	r24, Z
    1218:	81 11       	cpse	r24, r1
    121a:	c0 cf       	rjmp	.-128    	; 0x119c <xTaskResumeAll+0x30>
    121c:	cd 2b       	or	r28, r29
    121e:	11 f0       	breq	.+4      	; 0x1224 <xTaskResumeAll+0xb8>
    1220:	0e 94 53 06 	call	0xca6	; 0xca6 <prvResetNextTaskUnblockTime>
    1224:	c0 91 95 05 	lds	r28, 0x0595	; 0x800595 <uxPendedTicks>
    1228:	cc 23       	and	r28, r28
    122a:	51 f0       	breq	.+20     	; 0x1240 <xTaskResumeAll+0xd4>
    122c:	d1 e0       	ldi	r29, 0x01	; 1
    122e:	0e 94 fb 07 	call	0xff6	; 0xff6 <xTaskIncrementTick>
    1232:	81 11       	cpse	r24, r1
    1234:	d0 93 94 05 	sts	0x0594, r29	; 0x800594 <xYieldPending>
    1238:	c1 50       	subi	r28, 0x01	; 1
    123a:	c9 f7       	brne	.-14     	; 0x122e <xTaskResumeAll+0xc2>
    123c:	10 92 95 05 	sts	0x0595, r1	; 0x800595 <uxPendedTicks>
    1240:	80 91 94 05 	lds	r24, 0x0594	; 0x800594 <xYieldPending>
    1244:	88 23       	and	r24, r24
    1246:	31 f0       	breq	.+12     	; 0x1254 <xTaskResumeAll+0xe8>
    1248:	0e 94 03 03 	call	0x606	; 0x606 <vPortYield>
    124c:	81 e0       	ldi	r24, 0x01	; 1
    124e:	03 c0       	rjmp	.+6      	; 0x1256 <xTaskResumeAll+0xea>
    1250:	80 e0       	ldi	r24, 0x00	; 0
    1252:	01 c0       	rjmp	.+2      	; 0x1256 <xTaskResumeAll+0xea>
    1254:	80 e0       	ldi	r24, 0x00	; 0
    1256:	0f 90       	pop	r0
    1258:	0f be       	out	0x3f, r0	; 63
    125a:	df 91       	pop	r29
    125c:	cf 91       	pop	r28
    125e:	1f 91       	pop	r17
    1260:	0f 91       	pop	r16
    1262:	ff 90       	pop	r15
    1264:	ef 90       	pop	r14
    1266:	df 90       	pop	r13
    1268:	08 95       	ret

0000126a <vTaskDelay>:
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	ec 01       	movw	r28, r24
    1270:	89 2b       	or	r24, r25
    1272:	51 f0       	breq	.+20     	; 0x1288 <vTaskDelay+0x1e>
    1274:	0e 94 f5 07 	call	0xfea	; 0xfea <vTaskSuspendAll>
    1278:	60 e0       	ldi	r22, 0x00	; 0
    127a:	ce 01       	movw	r24, r28
    127c:	0e 94 72 06 	call	0xce4	; 0xce4 <prvAddCurrentTaskToDelayedList>
    1280:	0e 94 b6 08 	call	0x116c	; 0x116c <xTaskResumeAll>
    1284:	81 11       	cpse	r24, r1
    1286:	02 c0       	rjmp	.+4      	; 0x128c <vTaskDelay+0x22>
    1288:	0e 94 03 03 	call	0x606	; 0x606 <vPortYield>
    128c:	df 91       	pop	r29
    128e:	cf 91       	pop	r28
    1290:	08 95       	ret

00001292 <prvIdleTask>:
    1292:	0c e9       	ldi	r16, 0x9C	; 156
    1294:	15 e0       	ldi	r17, 0x05	; 5
    1296:	0f 2e       	mov	r0, r31
    1298:	f4 ec       	ldi	r31, 0xC4	; 196
    129a:	ef 2e       	mov	r14, r31
    129c:	f5 e0       	ldi	r31, 0x05	; 5
    129e:	ff 2e       	mov	r15, r31
    12a0:	f0 2d       	mov	r31, r0
    12a2:	29 c0       	rjmp	.+82     	; 0x12f6 <prvIdleTask+0x64>
    12a4:	0e 94 f5 07 	call	0xfea	; 0xfea <vTaskSuspendAll>
    12a8:	d8 01       	movw	r26, r16
    12aa:	cc 91       	ld	r28, X
    12ac:	0e 94 b6 08 	call	0x116c	; 0x116c <xTaskResumeAll>
    12b0:	cc 23       	and	r28, r28
    12b2:	09 f1       	breq	.+66     	; 0x12f6 <prvIdleTask+0x64>
    12b4:	0f b6       	in	r0, 0x3f	; 63
    12b6:	f8 94       	cli
    12b8:	0f 92       	push	r0
    12ba:	d8 01       	movw	r26, r16
    12bc:	15 96       	adiw	r26, 0x05	; 5
    12be:	ed 91       	ld	r30, X+
    12c0:	fc 91       	ld	r31, X
    12c2:	16 97       	sbiw	r26, 0x06	; 6
    12c4:	c6 81       	ldd	r28, Z+6	; 0x06
    12c6:	d7 81       	ldd	r29, Z+7	; 0x07
    12c8:	ce 01       	movw	r24, r28
    12ca:	02 96       	adiw	r24, 0x02	; 2
    12cc:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    12d0:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <uxCurrentNumberOfTasks>
    12d4:	81 50       	subi	r24, 0x01	; 1
    12d6:	80 93 9a 05 	sts	0x059A, r24	; 0x80059a <uxCurrentNumberOfTasks>
    12da:	80 91 9b 05 	lds	r24, 0x059B	; 0x80059b <uxDeletedTasksWaitingCleanUp>
    12de:	81 50       	subi	r24, 0x01	; 1
    12e0:	80 93 9b 05 	sts	0x059B, r24	; 0x80059b <uxDeletedTasksWaitingCleanUp>
    12e4:	0f 90       	pop	r0
    12e6:	0f be       	out	0x3f, r0	; 63
    12e8:	8f 89       	ldd	r24, Y+23	; 0x17
    12ea:	98 8d       	ldd	r25, Y+24	; 0x18
    12ec:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <vPortFree>
    12f0:	ce 01       	movw	r24, r28
    12f2:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <vPortFree>
    12f6:	80 91 9b 05 	lds	r24, 0x059B	; 0x80059b <uxDeletedTasksWaitingCleanUp>
    12fa:	81 11       	cpse	r24, r1
    12fc:	d3 cf       	rjmp	.-90     	; 0x12a4 <prvIdleTask+0x12>
    12fe:	f7 01       	movw	r30, r14
    1300:	80 81       	ld	r24, Z
    1302:	82 30       	cpi	r24, 0x02	; 2
    1304:	10 f0       	brcs	.+4      	; 0x130a <prvIdleTask+0x78>
    1306:	0e 94 03 03 	call	0x606	; 0x606 <vPortYield>
    130a:	0e 94 bb 00 	call	0x176	; 0x176 <vApplicationIdleHook>
    130e:	f3 cf       	rjmp	.-26     	; 0x12f6 <prvIdleTask+0x64>

00001310 <vTaskSwitchContext>:
    1310:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
    1314:	88 23       	and	r24, r24
    1316:	21 f0       	breq	.+8      	; 0x1320 <vTaskSwitchContext+0x10>
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	80 93 94 05 	sts	0x0594, r24	; 0x800594 <xYieldPending>
    131e:	08 95       	ret
    1320:	10 92 94 05 	sts	0x0594, r1	; 0x800594 <xYieldPending>
    1324:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    1328:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    132c:	85 a1       	ldd	r24, Z+37	; 0x25
    132e:	0e 94 8c 01 	call	0x318	; 0x318 <switch_out>
    1332:	20 91 97 05 	lds	r18, 0x0597	; 0x800597 <uxTopReadyPriority>
    1336:	82 2f       	mov	r24, r18
    1338:	90 e0       	ldi	r25, 0x00	; 0
    133a:	fc 01       	movw	r30, r24
    133c:	ee 0f       	add	r30, r30
    133e:	ff 1f       	adc	r31, r31
    1340:	ee 0f       	add	r30, r30
    1342:	ff 1f       	adc	r31, r31
    1344:	ee 0f       	add	r30, r30
    1346:	ff 1f       	adc	r31, r31
    1348:	e8 0f       	add	r30, r24
    134a:	f9 1f       	adc	r31, r25
    134c:	ec 53       	subi	r30, 0x3C	; 60
    134e:	fa 4f       	sbci	r31, 0xFA	; 250
    1350:	30 81       	ld	r19, Z
    1352:	31 11       	cpse	r19, r1
    1354:	11 c0       	rjmp	.+34     	; 0x1378 <vTaskSwitchContext+0x68>
    1356:	21 50       	subi	r18, 0x01	; 1
    1358:	82 2f       	mov	r24, r18
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	fc 01       	movw	r30, r24
    135e:	ee 0f       	add	r30, r30
    1360:	ff 1f       	adc	r31, r31
    1362:	ee 0f       	add	r30, r30
    1364:	ff 1f       	adc	r31, r31
    1366:	ee 0f       	add	r30, r30
    1368:	ff 1f       	adc	r31, r31
    136a:	e8 0f       	add	r30, r24
    136c:	f9 1f       	adc	r31, r25
    136e:	ec 53       	subi	r30, 0x3C	; 60
    1370:	fa 4f       	sbci	r31, 0xFA	; 250
    1372:	30 81       	ld	r19, Z
    1374:	33 23       	and	r19, r19
    1376:	79 f3       	breq	.-34     	; 0x1356 <vTaskSwitchContext+0x46>
    1378:	ac 01       	movw	r20, r24
    137a:	44 0f       	add	r20, r20
    137c:	55 1f       	adc	r21, r21
    137e:	44 0f       	add	r20, r20
    1380:	55 1f       	adc	r21, r21
    1382:	44 0f       	add	r20, r20
    1384:	55 1f       	adc	r21, r21
    1386:	48 0f       	add	r20, r24
    1388:	59 1f       	adc	r21, r25
    138a:	da 01       	movw	r26, r20
    138c:	ac 53       	subi	r26, 0x3C	; 60
    138e:	ba 4f       	sbci	r27, 0xFA	; 250
    1390:	11 96       	adiw	r26, 0x01	; 1
    1392:	ed 91       	ld	r30, X+
    1394:	fc 91       	ld	r31, X
    1396:	12 97       	sbiw	r26, 0x02	; 2
    1398:	02 80       	ldd	r0, Z+2	; 0x02
    139a:	f3 81       	ldd	r31, Z+3	; 0x03
    139c:	e0 2d       	mov	r30, r0
    139e:	12 96       	adiw	r26, 0x02	; 2
    13a0:	fc 93       	st	X, r31
    13a2:	ee 93       	st	-X, r30
    13a4:	11 97       	sbiw	r26, 0x01	; 1
    13a6:	49 53       	subi	r20, 0x39	; 57
    13a8:	5a 4f       	sbci	r21, 0xFA	; 250
    13aa:	e4 17       	cp	r30, r20
    13ac:	f5 07       	cpc	r31, r21
    13ae:	29 f4       	brne	.+10     	; 0x13ba <vTaskSwitchContext+0xaa>
    13b0:	42 81       	ldd	r20, Z+2	; 0x02
    13b2:	53 81       	ldd	r21, Z+3	; 0x03
    13b4:	fd 01       	movw	r30, r26
    13b6:	52 83       	std	Z+2, r21	; 0x02
    13b8:	41 83       	std	Z+1, r20	; 0x01
    13ba:	fc 01       	movw	r30, r24
    13bc:	ee 0f       	add	r30, r30
    13be:	ff 1f       	adc	r31, r31
    13c0:	ee 0f       	add	r30, r30
    13c2:	ff 1f       	adc	r31, r31
    13c4:	ee 0f       	add	r30, r30
    13c6:	ff 1f       	adc	r31, r31
    13c8:	8e 0f       	add	r24, r30
    13ca:	9f 1f       	adc	r25, r31
    13cc:	fc 01       	movw	r30, r24
    13ce:	ec 53       	subi	r30, 0x3C	; 60
    13d0:	fa 4f       	sbci	r31, 0xFA	; 250
    13d2:	01 80       	ldd	r0, Z+1	; 0x01
    13d4:	f2 81       	ldd	r31, Z+2	; 0x02
    13d6:	e0 2d       	mov	r30, r0
    13d8:	86 81       	ldd	r24, Z+6	; 0x06
    13da:	97 81       	ldd	r25, Z+7	; 0x07
    13dc:	90 93 e9 05 	sts	0x05E9, r25	; 0x8005e9 <pxCurrentTCB+0x1>
    13e0:	80 93 e8 05 	sts	0x05E8, r24	; 0x8005e8 <pxCurrentTCB>
    13e4:	20 93 97 05 	sts	0x0597, r18	; 0x800597 <uxTopReadyPriority>
    13e8:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    13ec:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    13f0:	85 a1       	ldd	r24, Z+37	; 0x25
    13f2:	0e 94 81 01 	call	0x302	; 0x302 <switch_in>
    13f6:	08 95       	ret

000013f8 <xTaskRemoveFromEventList>:
    13f8:	0f 93       	push	r16
    13fa:	1f 93       	push	r17
    13fc:	cf 93       	push	r28
    13fe:	df 93       	push	r29
    1400:	dc 01       	movw	r26, r24
    1402:	15 96       	adiw	r26, 0x05	; 5
    1404:	ed 91       	ld	r30, X+
    1406:	fc 91       	ld	r31, X
    1408:	16 97       	sbiw	r26, 0x06	; 6
    140a:	c6 81       	ldd	r28, Z+6	; 0x06
    140c:	d7 81       	ldd	r29, Z+7	; 0x07
    140e:	8e 01       	movw	r16, r28
    1410:	04 5f       	subi	r16, 0xF4	; 244
    1412:	1f 4f       	sbci	r17, 0xFF	; 255
    1414:	c8 01       	movw	r24, r16
    1416:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    141a:	80 91 8d 05 	lds	r24, 0x058D	; 0x80058d <uxSchedulerSuspended>
    141e:	81 11       	cpse	r24, r1
    1420:	1c c0       	rjmp	.+56     	; 0x145a <xTaskRemoveFromEventList+0x62>
    1422:	0a 50       	subi	r16, 0x0A	; 10
    1424:	11 09       	sbc	r17, r1
    1426:	c8 01       	movw	r24, r16
    1428:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    142c:	8e 89       	ldd	r24, Y+22	; 0x16
    142e:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <uxTopReadyPriority>
    1432:	98 17       	cp	r25, r24
    1434:	10 f4       	brcc	.+4      	; 0x143a <xTaskRemoveFromEventList+0x42>
    1436:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <uxTopReadyPriority>
    143a:	90 e0       	ldi	r25, 0x00	; 0
    143c:	9c 01       	movw	r18, r24
    143e:	22 0f       	add	r18, r18
    1440:	33 1f       	adc	r19, r19
    1442:	22 0f       	add	r18, r18
    1444:	33 1f       	adc	r19, r19
    1446:	22 0f       	add	r18, r18
    1448:	33 1f       	adc	r19, r19
    144a:	82 0f       	add	r24, r18
    144c:	93 1f       	adc	r25, r19
    144e:	b8 01       	movw	r22, r16
    1450:	8c 53       	subi	r24, 0x3C	; 60
    1452:	9a 4f       	sbci	r25, 0xFA	; 250
    1454:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
    1458:	05 c0       	rjmp	.+10     	; 0x1464 <xTaskRemoveFromEventList+0x6c>
    145a:	b8 01       	movw	r22, r16
    145c:	85 ea       	ldi	r24, 0xA5	; 165
    145e:	95 e0       	ldi	r25, 0x05	; 5
    1460:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
    1464:	e0 91 e8 05 	lds	r30, 0x05E8	; 0x8005e8 <pxCurrentTCB>
    1468:	f0 91 e9 05 	lds	r31, 0x05E9	; 0x8005e9 <pxCurrentTCB+0x1>
    146c:	9e 89       	ldd	r25, Y+22	; 0x16
    146e:	86 89       	ldd	r24, Z+22	; 0x16
    1470:	89 17       	cp	r24, r25
    1472:	20 f4       	brcc	.+8      	; 0x147c <xTaskRemoveFromEventList+0x84>
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	80 93 94 05 	sts	0x0594, r24	; 0x800594 <xYieldPending>
    147a:	01 c0       	rjmp	.+2      	; 0x147e <xTaskRemoveFromEventList+0x86>
    147c:	80 e0       	ldi	r24, 0x00	; 0
    147e:	df 91       	pop	r29
    1480:	cf 91       	pop	r28
    1482:	1f 91       	pop	r17
    1484:	0f 91       	pop	r16
    1486:	08 95       	ret

00001488 <xTaskPriorityDisinherit>:
    1488:	0f 93       	push	r16
    148a:	1f 93       	push	r17
    148c:	cf 93       	push	r28
    148e:	df 93       	push	r29
    1490:	fc 01       	movw	r30, r24
    1492:	89 2b       	or	r24, r25
    1494:	79 f1       	breq	.+94     	; 0x14f4 <xTaskPriorityDisinherit+0x6c>
    1496:	84 a1       	ldd	r24, Z+36	; 0x24
    1498:	81 50       	subi	r24, 0x01	; 1
    149a:	84 a3       	std	Z+36, r24	; 0x24
    149c:	26 89       	ldd	r18, Z+22	; 0x16
    149e:	93 a1       	ldd	r25, Z+35	; 0x23
    14a0:	29 17       	cp	r18, r25
    14a2:	51 f1       	breq	.+84     	; 0x14f8 <xTaskPriorityDisinherit+0x70>
    14a4:	81 11       	cpse	r24, r1
    14a6:	2a c0       	rjmp	.+84     	; 0x14fc <xTaskPriorityDisinherit+0x74>
    14a8:	ef 01       	movw	r28, r30
    14aa:	8f 01       	movw	r16, r30
    14ac:	0e 5f       	subi	r16, 0xFE	; 254
    14ae:	1f 4f       	sbci	r17, 0xFF	; 255
    14b0:	c8 01       	movw	r24, r16
    14b2:	0e 94 37 02 	call	0x46e	; 0x46e <uxListRemove>
    14b6:	8b a1       	ldd	r24, Y+35	; 0x23
    14b8:	8e 8b       	std	Y+22, r24	; 0x16
    14ba:	24 e0       	ldi	r18, 0x04	; 4
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	28 1b       	sub	r18, r24
    14c0:	31 09       	sbc	r19, r1
    14c2:	3d 87       	std	Y+13, r19	; 0x0d
    14c4:	2c 87       	std	Y+12, r18	; 0x0c
    14c6:	90 91 97 05 	lds	r25, 0x0597	; 0x800597 <uxTopReadyPriority>
    14ca:	98 17       	cp	r25, r24
    14cc:	10 f4       	brcc	.+4      	; 0x14d2 <xTaskPriorityDisinherit+0x4a>
    14ce:	80 93 97 05 	sts	0x0597, r24	; 0x800597 <uxTopReadyPriority>
    14d2:	90 e0       	ldi	r25, 0x00	; 0
    14d4:	9c 01       	movw	r18, r24
    14d6:	22 0f       	add	r18, r18
    14d8:	33 1f       	adc	r19, r19
    14da:	22 0f       	add	r18, r18
    14dc:	33 1f       	adc	r19, r19
    14de:	22 0f       	add	r18, r18
    14e0:	33 1f       	adc	r19, r19
    14e2:	82 0f       	add	r24, r18
    14e4:	93 1f       	adc	r25, r19
    14e6:	b8 01       	movw	r22, r16
    14e8:	8c 53       	subi	r24, 0x3C	; 60
    14ea:	9a 4f       	sbci	r25, 0xFA	; 250
    14ec:	0e 94 e5 01 	call	0x3ca	; 0x3ca <vListInsertEnd>
    14f0:	81 e0       	ldi	r24, 0x01	; 1
    14f2:	05 c0       	rjmp	.+10     	; 0x14fe <xTaskPriorityDisinherit+0x76>
    14f4:	80 e0       	ldi	r24, 0x00	; 0
    14f6:	03 c0       	rjmp	.+6      	; 0x14fe <xTaskPriorityDisinherit+0x76>
    14f8:	80 e0       	ldi	r24, 0x00	; 0
    14fa:	01 c0       	rjmp	.+2      	; 0x14fe <xTaskPriorityDisinherit+0x76>
    14fc:	80 e0       	ldi	r24, 0x00	; 0
    14fe:	df 91       	pop	r29
    1500:	cf 91       	pop	r28
    1502:	1f 91       	pop	r17
    1504:	0f 91       	pop	r16
    1506:	08 95       	ret

00001508 <__udivmodsi4>:
    1508:	a1 e2       	ldi	r26, 0x21	; 33
    150a:	1a 2e       	mov	r1, r26
    150c:	aa 1b       	sub	r26, r26
    150e:	bb 1b       	sub	r27, r27
    1510:	fd 01       	movw	r30, r26
    1512:	0d c0       	rjmp	.+26     	; 0x152e <__udivmodsi4_ep>

00001514 <__udivmodsi4_loop>:
    1514:	aa 1f       	adc	r26, r26
    1516:	bb 1f       	adc	r27, r27
    1518:	ee 1f       	adc	r30, r30
    151a:	ff 1f       	adc	r31, r31
    151c:	a2 17       	cp	r26, r18
    151e:	b3 07       	cpc	r27, r19
    1520:	e4 07       	cpc	r30, r20
    1522:	f5 07       	cpc	r31, r21
    1524:	20 f0       	brcs	.+8      	; 0x152e <__udivmodsi4_ep>
    1526:	a2 1b       	sub	r26, r18
    1528:	b3 0b       	sbc	r27, r19
    152a:	e4 0b       	sbc	r30, r20
    152c:	f5 0b       	sbc	r31, r21

0000152e <__udivmodsi4_ep>:
    152e:	66 1f       	adc	r22, r22
    1530:	77 1f       	adc	r23, r23
    1532:	88 1f       	adc	r24, r24
    1534:	99 1f       	adc	r25, r25
    1536:	1a 94       	dec	r1
    1538:	69 f7       	brne	.-38     	; 0x1514 <__udivmodsi4_loop>
    153a:	60 95       	com	r22
    153c:	70 95       	com	r23
    153e:	80 95       	com	r24
    1540:	90 95       	com	r25
    1542:	9b 01       	movw	r18, r22
    1544:	ac 01       	movw	r20, r24
    1546:	bd 01       	movw	r22, r26
    1548:	cf 01       	movw	r24, r30
    154a:	08 95       	ret

0000154c <malloc>:
    154c:	0f 93       	push	r16
    154e:	1f 93       	push	r17
    1550:	cf 93       	push	r28
    1552:	df 93       	push	r29
    1554:	82 30       	cpi	r24, 0x02	; 2
    1556:	91 05       	cpc	r25, r1
    1558:	10 f4       	brcc	.+4      	; 0x155e <malloc+0x12>
    155a:	82 e0       	ldi	r24, 0x02	; 2
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	e0 91 ec 05 	lds	r30, 0x05EC	; 0x8005ec <__flp>
    1562:	f0 91 ed 05 	lds	r31, 0x05ED	; 0x8005ed <__flp+0x1>
    1566:	20 e0       	ldi	r18, 0x00	; 0
    1568:	30 e0       	ldi	r19, 0x00	; 0
    156a:	a0 e0       	ldi	r26, 0x00	; 0
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	30 97       	sbiw	r30, 0x00	; 0
    1570:	19 f1       	breq	.+70     	; 0x15b8 <malloc+0x6c>
    1572:	40 81       	ld	r20, Z
    1574:	51 81       	ldd	r21, Z+1	; 0x01
    1576:	02 81       	ldd	r16, Z+2	; 0x02
    1578:	13 81       	ldd	r17, Z+3	; 0x03
    157a:	48 17       	cp	r20, r24
    157c:	59 07       	cpc	r21, r25
    157e:	c8 f0       	brcs	.+50     	; 0x15b2 <malloc+0x66>
    1580:	84 17       	cp	r24, r20
    1582:	95 07       	cpc	r25, r21
    1584:	69 f4       	brne	.+26     	; 0x15a0 <malloc+0x54>
    1586:	10 97       	sbiw	r26, 0x00	; 0
    1588:	31 f0       	breq	.+12     	; 0x1596 <malloc+0x4a>
    158a:	12 96       	adiw	r26, 0x02	; 2
    158c:	0c 93       	st	X, r16
    158e:	12 97       	sbiw	r26, 0x02	; 2
    1590:	13 96       	adiw	r26, 0x03	; 3
    1592:	1c 93       	st	X, r17
    1594:	27 c0       	rjmp	.+78     	; 0x15e4 <malloc+0x98>
    1596:	00 93 ec 05 	sts	0x05EC, r16	; 0x8005ec <__flp>
    159a:	10 93 ed 05 	sts	0x05ED, r17	; 0x8005ed <__flp+0x1>
    159e:	22 c0       	rjmp	.+68     	; 0x15e4 <malloc+0x98>
    15a0:	21 15       	cp	r18, r1
    15a2:	31 05       	cpc	r19, r1
    15a4:	19 f0       	breq	.+6      	; 0x15ac <malloc+0x60>
    15a6:	42 17       	cp	r20, r18
    15a8:	53 07       	cpc	r21, r19
    15aa:	18 f4       	brcc	.+6      	; 0x15b2 <malloc+0x66>
    15ac:	9a 01       	movw	r18, r20
    15ae:	bd 01       	movw	r22, r26
    15b0:	ef 01       	movw	r28, r30
    15b2:	df 01       	movw	r26, r30
    15b4:	f8 01       	movw	r30, r16
    15b6:	db cf       	rjmp	.-74     	; 0x156e <malloc+0x22>
    15b8:	21 15       	cp	r18, r1
    15ba:	31 05       	cpc	r19, r1
    15bc:	f9 f0       	breq	.+62     	; 0x15fc <malloc+0xb0>
    15be:	28 1b       	sub	r18, r24
    15c0:	39 0b       	sbc	r19, r25
    15c2:	24 30       	cpi	r18, 0x04	; 4
    15c4:	31 05       	cpc	r19, r1
    15c6:	80 f4       	brcc	.+32     	; 0x15e8 <malloc+0x9c>
    15c8:	8a 81       	ldd	r24, Y+2	; 0x02
    15ca:	9b 81       	ldd	r25, Y+3	; 0x03
    15cc:	61 15       	cp	r22, r1
    15ce:	71 05       	cpc	r23, r1
    15d0:	21 f0       	breq	.+8      	; 0x15da <malloc+0x8e>
    15d2:	fb 01       	movw	r30, r22
    15d4:	93 83       	std	Z+3, r25	; 0x03
    15d6:	82 83       	std	Z+2, r24	; 0x02
    15d8:	04 c0       	rjmp	.+8      	; 0x15e2 <malloc+0x96>
    15da:	90 93 ed 05 	sts	0x05ED, r25	; 0x8005ed <__flp+0x1>
    15de:	80 93 ec 05 	sts	0x05EC, r24	; 0x8005ec <__flp>
    15e2:	fe 01       	movw	r30, r28
    15e4:	32 96       	adiw	r30, 0x02	; 2
    15e6:	44 c0       	rjmp	.+136    	; 0x1670 <malloc+0x124>
    15e8:	fe 01       	movw	r30, r28
    15ea:	e2 0f       	add	r30, r18
    15ec:	f3 1f       	adc	r31, r19
    15ee:	81 93       	st	Z+, r24
    15f0:	91 93       	st	Z+, r25
    15f2:	22 50       	subi	r18, 0x02	; 2
    15f4:	31 09       	sbc	r19, r1
    15f6:	39 83       	std	Y+1, r19	; 0x01
    15f8:	28 83       	st	Y, r18
    15fa:	3a c0       	rjmp	.+116    	; 0x1670 <malloc+0x124>
    15fc:	20 91 ea 05 	lds	r18, 0x05EA	; 0x8005ea <__brkval>
    1600:	30 91 eb 05 	lds	r19, 0x05EB	; 0x8005eb <__brkval+0x1>
    1604:	23 2b       	or	r18, r19
    1606:	41 f4       	brne	.+16     	; 0x1618 <malloc+0xcc>
    1608:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    160c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1610:	30 93 eb 05 	sts	0x05EB, r19	; 0x8005eb <__brkval+0x1>
    1614:	20 93 ea 05 	sts	0x05EA, r18	; 0x8005ea <__brkval>
    1618:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    161c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1620:	21 15       	cp	r18, r1
    1622:	31 05       	cpc	r19, r1
    1624:	41 f4       	brne	.+16     	; 0x1636 <malloc+0xea>
    1626:	2d b7       	in	r18, 0x3d	; 61
    1628:	3e b7       	in	r19, 0x3e	; 62
    162a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    162e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1632:	24 1b       	sub	r18, r20
    1634:	35 0b       	sbc	r19, r21
    1636:	e0 91 ea 05 	lds	r30, 0x05EA	; 0x8005ea <__brkval>
    163a:	f0 91 eb 05 	lds	r31, 0x05EB	; 0x8005eb <__brkval+0x1>
    163e:	e2 17       	cp	r30, r18
    1640:	f3 07       	cpc	r31, r19
    1642:	a0 f4       	brcc	.+40     	; 0x166c <malloc+0x120>
    1644:	2e 1b       	sub	r18, r30
    1646:	3f 0b       	sbc	r19, r31
    1648:	28 17       	cp	r18, r24
    164a:	39 07       	cpc	r19, r25
    164c:	78 f0       	brcs	.+30     	; 0x166c <malloc+0x120>
    164e:	ac 01       	movw	r20, r24
    1650:	4e 5f       	subi	r20, 0xFE	; 254
    1652:	5f 4f       	sbci	r21, 0xFF	; 255
    1654:	24 17       	cp	r18, r20
    1656:	35 07       	cpc	r19, r21
    1658:	48 f0       	brcs	.+18     	; 0x166c <malloc+0x120>
    165a:	4e 0f       	add	r20, r30
    165c:	5f 1f       	adc	r21, r31
    165e:	50 93 eb 05 	sts	0x05EB, r21	; 0x8005eb <__brkval+0x1>
    1662:	40 93 ea 05 	sts	0x05EA, r20	; 0x8005ea <__brkval>
    1666:	81 93       	st	Z+, r24
    1668:	91 93       	st	Z+, r25
    166a:	02 c0       	rjmp	.+4      	; 0x1670 <malloc+0x124>
    166c:	e0 e0       	ldi	r30, 0x00	; 0
    166e:	f0 e0       	ldi	r31, 0x00	; 0
    1670:	cf 01       	movw	r24, r30
    1672:	df 91       	pop	r29
    1674:	cf 91       	pop	r28
    1676:	1f 91       	pop	r17
    1678:	0f 91       	pop	r16
    167a:	08 95       	ret

0000167c <free>:
    167c:	cf 93       	push	r28
    167e:	df 93       	push	r29
    1680:	00 97       	sbiw	r24, 0x00	; 0
    1682:	09 f4       	brne	.+2      	; 0x1686 <free+0xa>
    1684:	81 c0       	rjmp	.+258    	; 0x1788 <free+0x10c>
    1686:	fc 01       	movw	r30, r24
    1688:	32 97       	sbiw	r30, 0x02	; 2
    168a:	13 82       	std	Z+3, r1	; 0x03
    168c:	12 82       	std	Z+2, r1	; 0x02
    168e:	a0 91 ec 05 	lds	r26, 0x05EC	; 0x8005ec <__flp>
    1692:	b0 91 ed 05 	lds	r27, 0x05ED	; 0x8005ed <__flp+0x1>
    1696:	10 97       	sbiw	r26, 0x00	; 0
    1698:	81 f4       	brne	.+32     	; 0x16ba <free+0x3e>
    169a:	20 81       	ld	r18, Z
    169c:	31 81       	ldd	r19, Z+1	; 0x01
    169e:	82 0f       	add	r24, r18
    16a0:	93 1f       	adc	r25, r19
    16a2:	20 91 ea 05 	lds	r18, 0x05EA	; 0x8005ea <__brkval>
    16a6:	30 91 eb 05 	lds	r19, 0x05EB	; 0x8005eb <__brkval+0x1>
    16aa:	28 17       	cp	r18, r24
    16ac:	39 07       	cpc	r19, r25
    16ae:	51 f5       	brne	.+84     	; 0x1704 <free+0x88>
    16b0:	f0 93 eb 05 	sts	0x05EB, r31	; 0x8005eb <__brkval+0x1>
    16b4:	e0 93 ea 05 	sts	0x05EA, r30	; 0x8005ea <__brkval>
    16b8:	67 c0       	rjmp	.+206    	; 0x1788 <free+0x10c>
    16ba:	ed 01       	movw	r28, r26
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	ce 17       	cp	r28, r30
    16c2:	df 07       	cpc	r29, r31
    16c4:	40 f4       	brcc	.+16     	; 0x16d6 <free+0x5a>
    16c6:	4a 81       	ldd	r20, Y+2	; 0x02
    16c8:	5b 81       	ldd	r21, Y+3	; 0x03
    16ca:	9e 01       	movw	r18, r28
    16cc:	41 15       	cp	r20, r1
    16ce:	51 05       	cpc	r21, r1
    16d0:	f1 f0       	breq	.+60     	; 0x170e <free+0x92>
    16d2:	ea 01       	movw	r28, r20
    16d4:	f5 cf       	rjmp	.-22     	; 0x16c0 <free+0x44>
    16d6:	d3 83       	std	Z+3, r29	; 0x03
    16d8:	c2 83       	std	Z+2, r28	; 0x02
    16da:	40 81       	ld	r20, Z
    16dc:	51 81       	ldd	r21, Z+1	; 0x01
    16de:	84 0f       	add	r24, r20
    16e0:	95 1f       	adc	r25, r21
    16e2:	c8 17       	cp	r28, r24
    16e4:	d9 07       	cpc	r29, r25
    16e6:	59 f4       	brne	.+22     	; 0x16fe <free+0x82>
    16e8:	88 81       	ld	r24, Y
    16ea:	99 81       	ldd	r25, Y+1	; 0x01
    16ec:	84 0f       	add	r24, r20
    16ee:	95 1f       	adc	r25, r21
    16f0:	02 96       	adiw	r24, 0x02	; 2
    16f2:	91 83       	std	Z+1, r25	; 0x01
    16f4:	80 83       	st	Z, r24
    16f6:	8a 81       	ldd	r24, Y+2	; 0x02
    16f8:	9b 81       	ldd	r25, Y+3	; 0x03
    16fa:	93 83       	std	Z+3, r25	; 0x03
    16fc:	82 83       	std	Z+2, r24	; 0x02
    16fe:	21 15       	cp	r18, r1
    1700:	31 05       	cpc	r19, r1
    1702:	29 f4       	brne	.+10     	; 0x170e <free+0x92>
    1704:	f0 93 ed 05 	sts	0x05ED, r31	; 0x8005ed <__flp+0x1>
    1708:	e0 93 ec 05 	sts	0x05EC, r30	; 0x8005ec <__flp>
    170c:	3d c0       	rjmp	.+122    	; 0x1788 <free+0x10c>
    170e:	e9 01       	movw	r28, r18
    1710:	fb 83       	std	Y+3, r31	; 0x03
    1712:	ea 83       	std	Y+2, r30	; 0x02
    1714:	49 91       	ld	r20, Y+
    1716:	59 91       	ld	r21, Y+
    1718:	c4 0f       	add	r28, r20
    171a:	d5 1f       	adc	r29, r21
    171c:	ec 17       	cp	r30, r28
    171e:	fd 07       	cpc	r31, r29
    1720:	61 f4       	brne	.+24     	; 0x173a <free+0xbe>
    1722:	80 81       	ld	r24, Z
    1724:	91 81       	ldd	r25, Z+1	; 0x01
    1726:	84 0f       	add	r24, r20
    1728:	95 1f       	adc	r25, r21
    172a:	02 96       	adiw	r24, 0x02	; 2
    172c:	e9 01       	movw	r28, r18
    172e:	99 83       	std	Y+1, r25	; 0x01
    1730:	88 83       	st	Y, r24
    1732:	82 81       	ldd	r24, Z+2	; 0x02
    1734:	93 81       	ldd	r25, Z+3	; 0x03
    1736:	9b 83       	std	Y+3, r25	; 0x03
    1738:	8a 83       	std	Y+2, r24	; 0x02
    173a:	e0 e0       	ldi	r30, 0x00	; 0
    173c:	f0 e0       	ldi	r31, 0x00	; 0
    173e:	12 96       	adiw	r26, 0x02	; 2
    1740:	8d 91       	ld	r24, X+
    1742:	9c 91       	ld	r25, X
    1744:	13 97       	sbiw	r26, 0x03	; 3
    1746:	00 97       	sbiw	r24, 0x00	; 0
    1748:	19 f0       	breq	.+6      	; 0x1750 <free+0xd4>
    174a:	fd 01       	movw	r30, r26
    174c:	dc 01       	movw	r26, r24
    174e:	f7 cf       	rjmp	.-18     	; 0x173e <free+0xc2>
    1750:	8d 91       	ld	r24, X+
    1752:	9c 91       	ld	r25, X
    1754:	11 97       	sbiw	r26, 0x01	; 1
    1756:	9d 01       	movw	r18, r26
    1758:	2e 5f       	subi	r18, 0xFE	; 254
    175a:	3f 4f       	sbci	r19, 0xFF	; 255
    175c:	82 0f       	add	r24, r18
    175e:	93 1f       	adc	r25, r19
    1760:	20 91 ea 05 	lds	r18, 0x05EA	; 0x8005ea <__brkval>
    1764:	30 91 eb 05 	lds	r19, 0x05EB	; 0x8005eb <__brkval+0x1>
    1768:	28 17       	cp	r18, r24
    176a:	39 07       	cpc	r19, r25
    176c:	69 f4       	brne	.+26     	; 0x1788 <free+0x10c>
    176e:	30 97       	sbiw	r30, 0x00	; 0
    1770:	29 f4       	brne	.+10     	; 0x177c <free+0x100>
    1772:	10 92 ed 05 	sts	0x05ED, r1	; 0x8005ed <__flp+0x1>
    1776:	10 92 ec 05 	sts	0x05EC, r1	; 0x8005ec <__flp>
    177a:	02 c0       	rjmp	.+4      	; 0x1780 <free+0x104>
    177c:	13 82       	std	Z+3, r1	; 0x03
    177e:	12 82       	std	Z+2, r1	; 0x02
    1780:	b0 93 eb 05 	sts	0x05EB, r27	; 0x8005eb <__brkval+0x1>
    1784:	a0 93 ea 05 	sts	0x05EA, r26	; 0x8005ea <__brkval>
    1788:	df 91       	pop	r29
    178a:	cf 91       	pop	r28
    178c:	08 95       	ret

0000178e <memcpy>:
    178e:	fb 01       	movw	r30, r22
    1790:	dc 01       	movw	r26, r24
    1792:	02 c0       	rjmp	.+4      	; 0x1798 <memcpy+0xa>
    1794:	01 90       	ld	r0, Z+
    1796:	0d 92       	st	X+, r0
    1798:	41 50       	subi	r20, 0x01	; 1
    179a:	50 40       	sbci	r21, 0x00	; 0
    179c:	d8 f7       	brcc	.-10     	; 0x1794 <memcpy+0x6>
    179e:	08 95       	ret

000017a0 <memset>:
    17a0:	dc 01       	movw	r26, r24
    17a2:	01 c0       	rjmp	.+2      	; 0x17a6 <memset+0x6>
    17a4:	6d 93       	st	X+, r22
    17a6:	41 50       	subi	r20, 0x01	; 1
    17a8:	50 40       	sbci	r21, 0x00	; 0
    17aa:	e0 f7       	brcc	.-8      	; 0x17a4 <memset+0x4>
    17ac:	08 95       	ret

000017ae <_exit>:
    17ae:	f8 94       	cli

000017b0 <__stop_program>:
    17b0:	ff cf       	rjmp	.-2      	; 0x17b0 <__stop_program>
