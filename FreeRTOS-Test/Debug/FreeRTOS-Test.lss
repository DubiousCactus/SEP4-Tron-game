
FreeRTOS-Test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000058  00800100  000016b2  00001746  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000016b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000049e  00800158  00800158  0000179e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000179e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017d0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000468  00000000  00000000  00001810  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000056c2  00000000  00000000  00001c78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001689  00000000  00000000  0000733a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002e22  00000000  00000000  000089c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000e60  00000000  00000000  0000b7e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001c41  00000000  00000000  0000c648  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000559c  00000000  00000000  0000e289  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000004c8  00000000  00000000  00013825  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
       4:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       8:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
       c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      10:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      14:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      18:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      1c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      20:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      24:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      28:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      2c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      30:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      34:	0c 94 90 03 	jmp	0x720	; 0x720 <__vector_13>
      38:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      3c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      40:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__vector_16>
      44:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      48:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      4c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      50:	0c 94 86 04 	jmp	0x90c	; 0x90c <__vector_20>
      54:	0c 94 c4 04 	jmp	0x988	; 0x988 <__vector_21>
      58:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      5c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      60:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      64:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      68:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      6c:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>
      70:	0c 94 0c 05 	jmp	0xa18	; 0xa18 <__vector_28>
      74:	0c 94 4a 05 	jmp	0xa94	; 0xa94 <__vector_29>
      78:	0c 94 5b 00 	jmp	0xb6	; 0xb6 <__bad_interrupt>

0000007c <__ctors_end>:
      7c:	11 24       	eor	r1, r1
      7e:	1f be       	out	0x3f, r1	; 63
      80:	cf ef       	ldi	r28, 0xFF	; 255
      82:	d8 e0       	ldi	r29, 0x08	; 8
      84:	de bf       	out	0x3e, r29	; 62
      86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
      88:	11 e0       	ldi	r17, 0x01	; 1
      8a:	a0 e0       	ldi	r26, 0x00	; 0
      8c:	b1 e0       	ldi	r27, 0x01	; 1
      8e:	e2 eb       	ldi	r30, 0xB2	; 178
      90:	f6 e1       	ldi	r31, 0x16	; 22
      92:	02 c0       	rjmp	.+4      	; 0x98 <__do_copy_data+0x10>
      94:	05 90       	lpm	r0, Z+
      96:	0d 92       	st	X+, r0
      98:	a8 35       	cpi	r26, 0x58	; 88
      9a:	b1 07       	cpc	r27, r17
      9c:	d9 f7       	brne	.-10     	; 0x94 <__do_copy_data+0xc>

0000009e <__do_clear_bss>:
      9e:	25 e0       	ldi	r18, 0x05	; 5
      a0:	a8 e5       	ldi	r26, 0x58	; 88
      a2:	b1 e0       	ldi	r27, 0x01	; 1
      a4:	01 c0       	rjmp	.+2      	; 0xa8 <.do_clear_bss_start>

000000a6 <.do_clear_bss_loop>:
      a6:	1d 92       	st	X+, r1

000000a8 <.do_clear_bss_start>:
      a8:	a6 3f       	cpi	r26, 0xF6	; 246
      aa:	b2 07       	cpc	r27, r18
      ac:	e1 f7       	brne	.-8      	; 0xa6 <.do_clear_bss_loop>
      ae:	0e 94 c5 00 	call	0x18a	; 0x18a <main>
      b2:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <_exit>

000000b6 <__bad_interrupt>:
      b6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ba <read_joystick>:
	_received_chars_queue = xQueueCreate(_COM_RX_QUEUE_LENGTH, (unsigned portBASE_TYPE) sizeof (uint8_t));
	init_com(_received_chars_queue);	

	while (1) {
		//Check data sent from pc
		if (xQueueReceive(_received_chars_queue, &data, (TickType_t) 10)) {
      ba:	96 b1       	in	r25, 0x06	; 6
      bc:	36 b1       	in	r19, 0x06	; 6
      be:	26 b1       	in	r18, 0x06	; 6
      c0:	86 b1       	in	r24, 0x06	; 6
      c2:	49 b1       	in	r20, 0x09	; 9
      c4:	80 fd       	sbrc	r24, 0
      c6:	06 c0       	rjmp	.+12     	; 0xd4 <read_joystick+0x1a>
      c8:	65 e0       	ldi	r22, 0x05	; 5
      ca:	8a e0       	ldi	r24, 0x0A	; 10
      cc:	91 e0       	ldi	r25, 0x01	; 1
      ce:	0e 94 37 01 	call	0x26e	; 0x26e <com_send_bytes>
      d2:	f3 cf       	rjmp	.-26     	; 0xba <read_joystick>
      d4:	91 fd       	sbrc	r25, 1
      d6:	06 c0       	rjmp	.+12     	; 0xe4 <read_joystick+0x2a>
      d8:	66 e0       	ldi	r22, 0x06	; 6
      da:	80 e1       	ldi	r24, 0x10	; 16
      dc:	91 e0       	ldi	r25, 0x01	; 1
      de:	0e 94 37 01 	call	0x26e	; 0x26e <com_send_bytes>
      e2:	eb cf       	rjmp	.-42     	; 0xba <read_joystick>
      e4:	26 fd       	sbrc	r18, 6
      e6:	06 c0       	rjmp	.+12     	; 0xf4 <read_joystick+0x3a>
      e8:	63 e0       	ldi	r22, 0x03	; 3
      ea:	87 e1       	ldi	r24, 0x17	; 23
      ec:	91 e0       	ldi	r25, 0x01	; 1
      ee:	0e 94 37 01 	call	0x26e	; 0x26e <com_send_bytes>
      f2:	e3 cf       	rjmp	.-58     	; 0xba <read_joystick>
      f4:	33 23       	and	r19, r19
      f6:	34 f0       	brlt	.+12     	; 0x104 <read_joystick+0x4a>
      f8:	65 e0       	ldi	r22, 0x05	; 5
      fa:	8b e1       	ldi	r24, 0x1B	; 27
      fc:	91 e0       	ldi	r25, 0x01	; 1
      fe:	0e 94 37 01 	call	0x26e	; 0x26e <com_send_bytes>
     102:	db cf       	rjmp	.-74     	; 0xba <read_joystick>
     104:	43 fd       	sbrc	r20, 3
     106:	d9 cf       	rjmp	.-78     	; 0xba <read_joystick>
     108:	66 e0       	ldi	r22, 0x06	; 6
     10a:	81 e2       	ldi	r24, 0x21	; 33
     10c:	91 e0       	ldi	r25, 0x01	; 1
     10e:	0e 94 37 01 	call	0x26e	; 0x26e <com_send_bytes>
     112:	d3 cf       	rjmp	.-90     	; 0xba <read_joystick>

00000114 <prepare_shiftregister>:

// Prepare shift register setting SER = 1
void prepare_shiftregister()
{
	// Set SER to 1
	PORTD |= _BV(PORTD2);
     114:	5a 9a       	sbi	0x0b, 2	; 11
     116:	08 95       	ret

00000118 <clock_shift_register_and_prepare_for_next_col>:

// clock shift-register
void clock_shift_register_and_prepare_for_next_col()
{
	// one SCK pulse
	PORTD |= _BV(PORTD5);
     118:	5d 9a       	sbi	0x0b, 5	; 11
	PORTD &= ~_BV(PORTD5);
     11a:	5d 98       	cbi	0x0b, 5	; 11
	
	// one RCK pulse
	PORTD |= _BV(PORTD4);
     11c:	5c 9a       	sbi	0x0b, 4	; 11
	PORTD &= ~_BV(PORTD4);
     11e:	5c 98       	cbi	0x0b, 4	; 11
	
	// Set SER to 0 - for next column
	PORTD &= ~_BV(PORTD2);
     120:	5a 98       	cbi	0x0b, 2	; 11
     122:	08 95       	ret

00000124 <load_col_value>:
}

// Load column value for column to show
void load_col_value(uint16_t col_value)
{
	PORTA = ~(col_value & 0xFF);
     124:	80 95       	com	r24
     126:	82 b9       	out	0x02, r24	; 2
	
	// Manipulate only with PB0 and PB1
	PORTB |= 0x03;
     128:	85 b1       	in	r24, 0x05	; 5
     12a:	83 60       	ori	r24, 0x03	; 3
     12c:	85 b9       	out	0x05, r24	; 5
	PORTB &= ~((col_value >> 8) & 0x03);
     12e:	85 b1       	in	r24, 0x05	; 5
     130:	93 70       	andi	r25, 0x03	; 3
     132:	90 95       	com	r25
     134:	89 23       	and	r24, r25
     136:	85 b9       	out	0x05, r24	; 5
     138:	08 95       	ret

0000013a <handle_display>:
}

//-----------------------------------------
void handle_display(void)
{
     13a:	cf 93       	push	r28
	static uint8_t col = 0;
	
	if (col == 0)
     13c:	c0 91 58 01 	lds	r28, 0x0158	; 0x800158 <__data_end>
     140:	c1 11       	cpse	r28, r1
     142:	0c c0       	rjmp	.+24     	; 0x15c <handle_display+0x22>
		prepare_shiftregister();
     144:	0e 94 8a 00 	call	0x114	; 0x114 <prepare_shiftregister>
	
	load_col_value(frame_buffer[col]);
     148:	80 e0       	ldi	r24, 0x00	; 0
     14a:	90 e0       	ldi	r25, 0x00	; 0
     14c:	0e 94 92 00 	call	0x124	; 0x124 <load_col_value>
	
	clock_shift_register_and_prepare_for_next_col();
     150:	0e 94 8c 00 	call	0x118	; 0x118 <clock_shift_register_and_prepare_for_next_col>
	
	// count column up - prepare for next
	if (col++ > 13)
     154:	81 e0       	ldi	r24, 0x01	; 1
     156:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <__data_end>
     15a:	14 c0       	rjmp	.+40     	; 0x184 <handle_display+0x4a>
	static uint8_t col = 0;
	
	if (col == 0)
		prepare_shiftregister();
	
	load_col_value(frame_buffer[col]);
     15c:	ec 2f       	mov	r30, r28
     15e:	f0 e0       	ldi	r31, 0x00	; 0
     160:	ee 0f       	add	r30, r30
     162:	ff 1f       	adc	r31, r31
     164:	ea 5c       	subi	r30, 0xCA	; 202
     166:	fe 4f       	sbci	r31, 0xFE	; 254
     168:	80 81       	ld	r24, Z
     16a:	91 81       	ldd	r25, Z+1	; 0x01
     16c:	0e 94 92 00 	call	0x124	; 0x124 <load_col_value>
	
	clock_shift_register_and_prepare_for_next_col();
     170:	0e 94 8c 00 	call	0x118	; 0x118 <clock_shift_register_and_prepare_for_next_col>
	
	// count column up - prepare for next
	if (col++ > 13)
     174:	ce 30       	cpi	r28, 0x0E	; 14
     176:	20 f4       	brcc	.+8      	; 0x180 <handle_display+0x46>
     178:	cf 5f       	subi	r28, 0xFF	; 255
     17a:	c0 93 58 01 	sts	0x0158, r28	; 0x800158 <__data_end>
     17e:	02 c0       	rjmp	.+4      	; 0x184 <handle_display+0x4a>
		col = 0;
     180:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <__data_end>
}
     184:	cf 91       	pop	r28
     186:	08 95       	ret

00000188 <vApplicationIdleHook>:

//-----------------------------------------
void vApplicationIdleHook( void )
{
     188:	08 95       	ret

0000018a <main>:

//-----------------------------------------
int main(void)
{
	
	init_board();
     18a:	0e 94 40 01 	call	0x280	; 0x280 <init_board>
	
	// Shift register Enable output (G=0)
	PORTD &= ~_BV(PORTD6);
     18e:	5e 98       	cbi	0x0b, 6	; 11

	xTaskCreate(read_joystick, (const char*)"Read joystick", configMINIMAL_STACK_SIZE, (void *)NULL, tskIDLE_PRIORITY, NULL);
     190:	e1 2c       	mov	r14, r1
     192:	f1 2c       	mov	r15, r1
     194:	00 e0       	ldi	r16, 0x00	; 0
     196:	20 e0       	ldi	r18, 0x00	; 0
     198:	30 e0       	ldi	r19, 0x00	; 0
     19a:	45 e5       	ldi	r20, 0x55	; 85
     19c:	50 e0       	ldi	r21, 0x00	; 0
     19e:	68 e2       	ldi	r22, 0x28	; 40
     1a0:	71 e0       	ldi	r23, 0x01	; 1
     1a2:	8d e5       	ldi	r24, 0x5D	; 93
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	0e 94 4a 06 	call	0xc94	; 0xc94 <xTaskCreate>
	
	// Start the display handler timer
	init_display_timer(handle_display);
     1aa:	8d e9       	ldi	r24, 0x9D	; 157
     1ac:	90 e0       	ldi	r25, 0x00	; 0
     1ae:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <init_display_timer>
	
	sei();
     1b2:	78 94       	sei
	
	//Start the scheduler
	vTaskStartScheduler();
     1b4:	0e 94 5f 07 	call	0xebe	; 0xebe <vTaskStartScheduler>
     1b8:	ff cf       	rjmp	.-2      	; 0x1b8 <main+0x2e>

000001ba <_com_call_back>:
     1ba:	cf 93       	push	r28
     1bc:	df 93       	push	r29
     1be:	00 d0       	rcall	.+0      	; 0x1c0 <_com_call_back+0x6>
     1c0:	cd b7       	in	r28, 0x3d	; 61
     1c2:	de b7       	in	r29, 0x3e	; 62
     1c4:	6a 83       	std	Y+2, r22	; 0x02
     1c6:	80 91 a1 01 	lds	r24, 0x01A1	; 0x8001a1 <_x_rx_com_queue>
     1ca:	90 91 a2 01 	lds	r25, 0x01A2	; 0x8001a2 <_x_rx_com_queue+0x1>
     1ce:	00 97       	sbiw	r24, 0x00	; 0
     1d0:	71 f0       	breq	.+28     	; 0x1ee <_com_call_back+0x34>
     1d2:	19 82       	std	Y+1, r1	; 0x01
     1d4:	20 e0       	ldi	r18, 0x00	; 0
     1d6:	ae 01       	movw	r20, r28
     1d8:	4f 5f       	subi	r20, 0xFF	; 255
     1da:	5f 4f       	sbci	r21, 0xFF	; 255
     1dc:	be 01       	movw	r22, r28
     1de:	6e 5f       	subi	r22, 0xFE	; 254
     1e0:	7f 4f       	sbci	r23, 0xFF	; 255
     1e2:	0e 94 f1 05 	call	0xbe2	; 0xbe2 <xQueueGenericSendFromISR>
     1e6:	89 81       	ldd	r24, Y+1	; 0x01
     1e8:	81 11       	cpse	r24, r1
     1ea:	0e 94 db 02 	call	0x5b6	; 0x5b6 <vPortYield>
     1ee:	0f 90       	pop	r0
     1f0:	0f 90       	pop	r0
     1f2:	df 91       	pop	r29
     1f4:	cf 91       	pop	r28
     1f6:	08 95       	ret

000001f8 <init_display_timer>:
     1f8:	90 93 a0 01 	sts	0x01A0, r25	; 0x8001a0 <cb_ptr+0x1>
     1fc:	80 93 9f 01 	sts	0x019F, r24	; 0x80019f <cb_ptr>
     200:	8a e0       	ldi	r24, 0x0A	; 10
     202:	87 bd       	out	0x27, r24	; 39
     204:	84 b5       	in	r24, 0x24	; 36
     206:	82 60       	ori	r24, 0x02	; 2
     208:	84 bd       	out	0x24, r24	; 36
     20a:	ee e6       	ldi	r30, 0x6E	; 110
     20c:	f0 e0       	ldi	r31, 0x00	; 0
     20e:	80 81       	ld	r24, Z
     210:	82 60       	ori	r24, 0x02	; 2
     212:	80 83       	st	Z, r24
     214:	85 b5       	in	r24, 0x25	; 37
     216:	85 60       	ori	r24, 0x05	; 5
     218:	85 bd       	out	0x25, r24	; 37
     21a:	08 95       	ret

0000021c <__vector_16>:
     21c:	1f 92       	push	r1
     21e:	0f 92       	push	r0
     220:	0f b6       	in	r0, 0x3f	; 63
     222:	0f 92       	push	r0
     224:	11 24       	eor	r1, r1
     226:	2f 93       	push	r18
     228:	3f 93       	push	r19
     22a:	4f 93       	push	r20
     22c:	5f 93       	push	r21
     22e:	6f 93       	push	r22
     230:	7f 93       	push	r23
     232:	8f 93       	push	r24
     234:	9f 93       	push	r25
     236:	af 93       	push	r26
     238:	bf 93       	push	r27
     23a:	ef 93       	push	r30
     23c:	ff 93       	push	r31
     23e:	e0 91 9f 01 	lds	r30, 0x019F	; 0x80019f <cb_ptr>
     242:	f0 91 a0 01 	lds	r31, 0x01A0	; 0x8001a0 <cb_ptr+0x1>
     246:	30 97       	sbiw	r30, 0x00	; 0
     248:	09 f0       	breq	.+2      	; 0x24c <__vector_16+0x30>
     24a:	09 95       	icall
     24c:	ff 91       	pop	r31
     24e:	ef 91       	pop	r30
     250:	bf 91       	pop	r27
     252:	af 91       	pop	r26
     254:	9f 91       	pop	r25
     256:	8f 91       	pop	r24
     258:	7f 91       	pop	r23
     25a:	6f 91       	pop	r22
     25c:	5f 91       	pop	r21
     25e:	4f 91       	pop	r20
     260:	3f 91       	pop	r19
     262:	2f 91       	pop	r18
     264:	0f 90       	pop	r0
     266:	0f be       	out	0x3f, r0	; 63
     268:	0f 90       	pop	r0
     26a:	1f 90       	pop	r1
     26c:	18 95       	reti

0000026e <com_send_bytes>:
     26e:	46 2f       	mov	r20, r22
     270:	bc 01       	movw	r22, r24
     272:	80 91 a3 01 	lds	r24, 0x01A3	; 0x8001a3 <_com_serial_instance>
     276:	90 91 a4 01 	lds	r25, 0x01A4	; 0x8001a4 <_com_serial_instance+0x1>
     27a:	0e 94 43 04 	call	0x886	; 0x886 <serial_send_bytes>
     27e:	08 95       	ret

00000280 <init_board>:
     280:	8f 92       	push	r8
     282:	9f 92       	push	r9
     284:	af 92       	push	r10
     286:	bf 92       	push	r11
     288:	cf 92       	push	r12
     28a:	df 92       	push	r13
     28c:	ef 92       	push	r14
     28e:	0f 93       	push	r16
     290:	8c e7       	ldi	r24, 0x7C	; 124
     292:	91 e0       	ldi	r25, 0x01	; 1
     294:	0e 94 99 01 	call	0x332	; 0x332 <buffer_init>
     298:	89 e5       	ldi	r24, 0x59	; 89
     29a:	91 e0       	ldi	r25, 0x01	; 1
     29c:	0e 94 99 01 	call	0x332	; 0x332 <buffer_init>
     2a0:	0f 2e       	mov	r0, r31
     2a2:	fd ed       	ldi	r31, 0xDD	; 221
     2a4:	8f 2e       	mov	r8, r31
     2a6:	f0 e0       	ldi	r31, 0x00	; 0
     2a8:	9f 2e       	mov	r9, r31
     2aa:	f0 2d       	mov	r31, r0
     2ac:	0f 2e       	mov	r0, r31
     2ae:	f9 e5       	ldi	r31, 0x59	; 89
     2b0:	af 2e       	mov	r10, r31
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	bf 2e       	mov	r11, r31
     2b6:	f0 2d       	mov	r31, r0
     2b8:	0f 2e       	mov	r0, r31
     2ba:	fc e7       	ldi	r31, 0x7C	; 124
     2bc:	cf 2e       	mov	r12, r31
     2be:	f1 e0       	ldi	r31, 0x01	; 1
     2c0:	df 2e       	mov	r13, r31
     2c2:	f0 2d       	mov	r31, r0
     2c4:	e1 2c       	mov	r14, r1
     2c6:	00 e0       	ldi	r16, 0x00	; 0
     2c8:	23 e0       	ldi	r18, 0x03	; 3
     2ca:	40 e0       	ldi	r20, 0x00	; 0
     2cc:	52 ec       	ldi	r21, 0xC2	; 194
     2ce:	61 e0       	ldi	r22, 0x01	; 1
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	80 e0       	ldi	r24, 0x00	; 0
     2d4:	0e 94 c9 03 	call	0x792	; 0x792 <serial_new_instance>
     2d8:	90 93 a4 01 	sts	0x01A4, r25	; 0x8001a4 <_com_serial_instance+0x1>
     2dc:	80 93 a3 01 	sts	0x01A3, r24	; 0x8001a3 <_com_serial_instance>
     2e0:	88 b1       	in	r24, 0x08	; 8
     2e2:	83 6c       	ori	r24, 0xC3	; 195
     2e4:	88 b9       	out	0x08, r24	; 8
     2e6:	5b 9a       	sbi	0x0b, 3	; 11
     2e8:	8a b1       	in	r24, 0x0a	; 10
     2ea:	84 67       	ori	r24, 0x74	; 116
     2ec:	8a b9       	out	0x0a, r24	; 10
     2ee:	5e 9a       	sbi	0x0b, 6	; 11
     2f0:	81 b1       	in	r24, 0x01	; 1
     2f2:	8f ef       	ldi	r24, 0xFF	; 255
     2f4:	81 b9       	out	0x01, r24	; 1
     2f6:	84 b1       	in	r24, 0x04	; 4
     2f8:	83 60       	ori	r24, 0x03	; 3
     2fa:	84 b9       	out	0x04, r24	; 4
     2fc:	84 b1       	in	r24, 0x04	; 4
     2fe:	8c 63       	ori	r24, 0x3C	; 60
     300:	84 b9       	out	0x04, r24	; 4
     302:	0f 91       	pop	r16
     304:	ef 90       	pop	r14
     306:	df 90       	pop	r13
     308:	cf 90       	pop	r12
     30a:	bf 90       	pop	r11
     30c:	af 90       	pop	r10
     30e:	9f 90       	pop	r9
     310:	8f 90       	pop	r8
     312:	08 95       	ret

00000314 <switch_in>:
     314:	95 b1       	in	r25, 0x05	; 5
     316:	93 7c       	andi	r25, 0xC3	; 195
     318:	95 b9       	out	0x05, r25	; 5
     31a:	25 b1       	in	r18, 0x05	; 5
     31c:	34 e0       	ldi	r19, 0x04	; 4
     31e:	83 9f       	mul	r24, r19
     320:	c0 01       	movw	r24, r0
     322:	11 24       	eor	r1, r1
     324:	82 2b       	or	r24, r18
     326:	85 b9       	out	0x05, r24	; 5
     328:	08 95       	ret

0000032a <switch_out>:
     32a:	85 b1       	in	r24, 0x05	; 5
     32c:	83 7c       	andi	r24, 0xC3	; 195
     32e:	85 b9       	out	0x05, r24	; 5
     330:	08 95       	ret

00000332 <buffer_init>:
     332:	fc 01       	movw	r30, r24
     334:	10 a2       	std	Z+32, r1	; 0x20
     336:	11 a2       	std	Z+33, r1	; 0x21
     338:	12 a2       	std	Z+34, r1	; 0x22
     33a:	08 95       	ret

0000033c <buffer_get_item>:
     33c:	fc 01       	movw	r30, r24
     33e:	82 a1       	ldd	r24, Z+34	; 0x22
     340:	88 23       	and	r24, r24
     342:	d9 f0       	breq	.+54     	; 0x37a <buffer_get_item+0x3e>
     344:	81 a1       	ldd	r24, Z+33	; 0x21
     346:	df 01       	movw	r26, r30
     348:	a8 0f       	add	r26, r24
     34a:	b1 1d       	adc	r27, r1
     34c:	8c 91       	ld	r24, X
     34e:	db 01       	movw	r26, r22
     350:	8c 93       	st	X, r24
     352:	21 a1       	ldd	r18, Z+33	; 0x21
     354:	30 e0       	ldi	r19, 0x00	; 0
     356:	2f 5f       	subi	r18, 0xFF	; 255
     358:	3f 4f       	sbci	r19, 0xFF	; 255
     35a:	2f 71       	andi	r18, 0x1F	; 31
     35c:	30 78       	andi	r19, 0x80	; 128
     35e:	33 23       	and	r19, r19
     360:	34 f4       	brge	.+12     	; 0x36e <buffer_get_item+0x32>
     362:	21 50       	subi	r18, 0x01	; 1
     364:	31 09       	sbc	r19, r1
     366:	20 6e       	ori	r18, 0xE0	; 224
     368:	3f 6f       	ori	r19, 0xFF	; 255
     36a:	2f 5f       	subi	r18, 0xFF	; 255
     36c:	3f 4f       	sbci	r19, 0xFF	; 255
     36e:	21 a3       	std	Z+33, r18	; 0x21
     370:	82 a1       	ldd	r24, Z+34	; 0x22
     372:	81 50       	subi	r24, 0x01	; 1
     374:	82 a3       	std	Z+34, r24	; 0x22
     376:	80 e0       	ldi	r24, 0x00	; 0
     378:	08 95       	ret
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	08 95       	ret

0000037e <buffer_put_item>:
     37e:	fc 01       	movw	r30, r24
     380:	42 a1       	ldd	r20, Z+34	; 0x22
     382:	40 32       	cpi	r20, 0x20	; 32
     384:	b8 f4       	brcc	.+46     	; 0x3b4 <buffer_put_item+0x36>
     386:	20 a1       	ldd	r18, Z+32	; 0x20
     388:	30 e0       	ldi	r19, 0x00	; 0
     38a:	e2 0f       	add	r30, r18
     38c:	f3 1f       	adc	r31, r19
     38e:	60 83       	st	Z, r22
     390:	2f 5f       	subi	r18, 0xFF	; 255
     392:	3f 4f       	sbci	r19, 0xFF	; 255
     394:	2f 71       	andi	r18, 0x1F	; 31
     396:	30 78       	andi	r19, 0x80	; 128
     398:	33 23       	and	r19, r19
     39a:	34 f4       	brge	.+12     	; 0x3a8 <buffer_put_item+0x2a>
     39c:	21 50       	subi	r18, 0x01	; 1
     39e:	31 09       	sbc	r19, r1
     3a0:	20 6e       	ori	r18, 0xE0	; 224
     3a2:	3f 6f       	ori	r19, 0xFF	; 255
     3a4:	2f 5f       	subi	r18, 0xFF	; 255
     3a6:	3f 4f       	sbci	r19, 0xFF	; 255
     3a8:	fc 01       	movw	r30, r24
     3aa:	20 a3       	std	Z+32, r18	; 0x20
     3ac:	4f 5f       	subi	r20, 0xFF	; 255
     3ae:	42 a3       	std	Z+34, r20	; 0x22
     3b0:	80 e0       	ldi	r24, 0x00	; 0
     3b2:	08 95       	ret
     3b4:	82 e0       	ldi	r24, 0x02	; 2
     3b6:	08 95       	ret

000003b8 <vListInitialise>:
     3b8:	fc 01       	movw	r30, r24
     3ba:	03 96       	adiw	r24, 0x03	; 3
     3bc:	92 83       	std	Z+2, r25	; 0x02
     3be:	81 83       	std	Z+1, r24	; 0x01
     3c0:	2f ef       	ldi	r18, 0xFF	; 255
     3c2:	3f ef       	ldi	r19, 0xFF	; 255
     3c4:	34 83       	std	Z+4, r19	; 0x04
     3c6:	23 83       	std	Z+3, r18	; 0x03
     3c8:	96 83       	std	Z+6, r25	; 0x06
     3ca:	85 83       	std	Z+5, r24	; 0x05
     3cc:	90 87       	std	Z+8, r25	; 0x08
     3ce:	87 83       	std	Z+7, r24	; 0x07
     3d0:	10 82       	st	Z, r1
     3d2:	08 95       	ret

000003d4 <vListInitialiseItem>:
     3d4:	fc 01       	movw	r30, r24
     3d6:	11 86       	std	Z+9, r1	; 0x09
     3d8:	10 86       	std	Z+8, r1	; 0x08
     3da:	08 95       	ret

000003dc <vListInsertEnd>:
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	9c 01       	movw	r18, r24
     3e2:	fb 01       	movw	r30, r22
     3e4:	dc 01       	movw	r26, r24
     3e6:	11 96       	adiw	r26, 0x01	; 1
     3e8:	cd 91       	ld	r28, X+
     3ea:	dc 91       	ld	r29, X
     3ec:	12 97       	sbiw	r26, 0x02	; 2
     3ee:	d3 83       	std	Z+3, r29	; 0x03
     3f0:	c2 83       	std	Z+2, r28	; 0x02
     3f2:	8c 81       	ldd	r24, Y+4	; 0x04
     3f4:	9d 81       	ldd	r25, Y+5	; 0x05
     3f6:	95 83       	std	Z+5, r25	; 0x05
     3f8:	84 83       	std	Z+4, r24	; 0x04
     3fa:	8c 81       	ldd	r24, Y+4	; 0x04
     3fc:	9d 81       	ldd	r25, Y+5	; 0x05
     3fe:	dc 01       	movw	r26, r24
     400:	13 96       	adiw	r26, 0x03	; 3
     402:	7c 93       	st	X, r23
     404:	6e 93       	st	-X, r22
     406:	12 97       	sbiw	r26, 0x02	; 2
     408:	7d 83       	std	Y+5, r23	; 0x05
     40a:	6c 83       	std	Y+4, r22	; 0x04
     40c:	31 87       	std	Z+9, r19	; 0x09
     40e:	20 87       	std	Z+8, r18	; 0x08
     410:	f9 01       	movw	r30, r18
     412:	80 81       	ld	r24, Z
     414:	8f 5f       	subi	r24, 0xFF	; 255
     416:	80 83       	st	Z, r24
     418:	df 91       	pop	r29
     41a:	cf 91       	pop	r28
     41c:	08 95       	ret

0000041e <uxListRemove>:
     41e:	cf 93       	push	r28
     420:	df 93       	push	r29
     422:	fc 01       	movw	r30, r24
     424:	a0 85       	ldd	r26, Z+8	; 0x08
     426:	b1 85       	ldd	r27, Z+9	; 0x09
     428:	c2 81       	ldd	r28, Z+2	; 0x02
     42a:	d3 81       	ldd	r29, Z+3	; 0x03
     42c:	84 81       	ldd	r24, Z+4	; 0x04
     42e:	95 81       	ldd	r25, Z+5	; 0x05
     430:	9d 83       	std	Y+5, r25	; 0x05
     432:	8c 83       	std	Y+4, r24	; 0x04
     434:	c4 81       	ldd	r28, Z+4	; 0x04
     436:	d5 81       	ldd	r29, Z+5	; 0x05
     438:	82 81       	ldd	r24, Z+2	; 0x02
     43a:	93 81       	ldd	r25, Z+3	; 0x03
     43c:	9b 83       	std	Y+3, r25	; 0x03
     43e:	8a 83       	std	Y+2, r24	; 0x02
     440:	11 96       	adiw	r26, 0x01	; 1
     442:	8d 91       	ld	r24, X+
     444:	9c 91       	ld	r25, X
     446:	12 97       	sbiw	r26, 0x02	; 2
     448:	e8 17       	cp	r30, r24
     44a:	f9 07       	cpc	r31, r25
     44c:	31 f4       	brne	.+12     	; 0x45a <uxListRemove+0x3c>
     44e:	84 81       	ldd	r24, Z+4	; 0x04
     450:	95 81       	ldd	r25, Z+5	; 0x05
     452:	12 96       	adiw	r26, 0x02	; 2
     454:	9c 93       	st	X, r25
     456:	8e 93       	st	-X, r24
     458:	11 97       	sbiw	r26, 0x01	; 1
     45a:	11 86       	std	Z+9, r1	; 0x09
     45c:	10 86       	std	Z+8, r1	; 0x08
     45e:	8c 91       	ld	r24, X
     460:	81 50       	subi	r24, 0x01	; 1
     462:	8c 93       	st	X, r24
     464:	df 91       	pop	r29
     466:	cf 91       	pop	r28
     468:	08 95       	ret

0000046a <pxPortInitialiseStack>:
     46a:	31 e1       	ldi	r19, 0x11	; 17
     46c:	fc 01       	movw	r30, r24
     46e:	30 83       	st	Z, r19
     470:	31 97       	sbiw	r30, 0x01	; 1
     472:	22 e2       	ldi	r18, 0x22	; 34
     474:	20 83       	st	Z, r18
     476:	31 97       	sbiw	r30, 0x01	; 1
     478:	a3 e3       	ldi	r26, 0x33	; 51
     47a:	a0 83       	st	Z, r26
     47c:	31 97       	sbiw	r30, 0x01	; 1
     47e:	60 83       	st	Z, r22
     480:	31 97       	sbiw	r30, 0x01	; 1
     482:	70 83       	st	Z, r23
     484:	31 97       	sbiw	r30, 0x01	; 1
     486:	10 82       	st	Z, r1
     488:	31 97       	sbiw	r30, 0x01	; 1
     48a:	60 e8       	ldi	r22, 0x80	; 128
     48c:	60 83       	st	Z, r22
     48e:	31 97       	sbiw	r30, 0x01	; 1
     490:	10 82       	st	Z, r1
     492:	31 97       	sbiw	r30, 0x01	; 1
     494:	62 e0       	ldi	r22, 0x02	; 2
     496:	60 83       	st	Z, r22
     498:	31 97       	sbiw	r30, 0x01	; 1
     49a:	63 e0       	ldi	r22, 0x03	; 3
     49c:	60 83       	st	Z, r22
     49e:	31 97       	sbiw	r30, 0x01	; 1
     4a0:	64 e0       	ldi	r22, 0x04	; 4
     4a2:	60 83       	st	Z, r22
     4a4:	31 97       	sbiw	r30, 0x01	; 1
     4a6:	65 e0       	ldi	r22, 0x05	; 5
     4a8:	60 83       	st	Z, r22
     4aa:	31 97       	sbiw	r30, 0x01	; 1
     4ac:	66 e0       	ldi	r22, 0x06	; 6
     4ae:	60 83       	st	Z, r22
     4b0:	31 97       	sbiw	r30, 0x01	; 1
     4b2:	67 e0       	ldi	r22, 0x07	; 7
     4b4:	60 83       	st	Z, r22
     4b6:	31 97       	sbiw	r30, 0x01	; 1
     4b8:	68 e0       	ldi	r22, 0x08	; 8
     4ba:	60 83       	st	Z, r22
     4bc:	31 97       	sbiw	r30, 0x01	; 1
     4be:	69 e0       	ldi	r22, 0x09	; 9
     4c0:	60 83       	st	Z, r22
     4c2:	31 97       	sbiw	r30, 0x01	; 1
     4c4:	60 e1       	ldi	r22, 0x10	; 16
     4c6:	60 83       	st	Z, r22
     4c8:	31 97       	sbiw	r30, 0x01	; 1
     4ca:	30 83       	st	Z, r19
     4cc:	31 97       	sbiw	r30, 0x01	; 1
     4ce:	32 e1       	ldi	r19, 0x12	; 18
     4d0:	30 83       	st	Z, r19
     4d2:	31 97       	sbiw	r30, 0x01	; 1
     4d4:	33 e1       	ldi	r19, 0x13	; 19
     4d6:	30 83       	st	Z, r19
     4d8:	31 97       	sbiw	r30, 0x01	; 1
     4da:	34 e1       	ldi	r19, 0x14	; 20
     4dc:	30 83       	st	Z, r19
     4de:	31 97       	sbiw	r30, 0x01	; 1
     4e0:	35 e1       	ldi	r19, 0x15	; 21
     4e2:	30 83       	st	Z, r19
     4e4:	31 97       	sbiw	r30, 0x01	; 1
     4e6:	36 e1       	ldi	r19, 0x16	; 22
     4e8:	30 83       	st	Z, r19
     4ea:	31 97       	sbiw	r30, 0x01	; 1
     4ec:	37 e1       	ldi	r19, 0x17	; 23
     4ee:	30 83       	st	Z, r19
     4f0:	31 97       	sbiw	r30, 0x01	; 1
     4f2:	38 e1       	ldi	r19, 0x18	; 24
     4f4:	30 83       	st	Z, r19
     4f6:	31 97       	sbiw	r30, 0x01	; 1
     4f8:	39 e1       	ldi	r19, 0x19	; 25
     4fa:	30 83       	st	Z, r19
     4fc:	31 97       	sbiw	r30, 0x01	; 1
     4fe:	30 e2       	ldi	r19, 0x20	; 32
     500:	30 83       	st	Z, r19
     502:	31 97       	sbiw	r30, 0x01	; 1
     504:	31 e2       	ldi	r19, 0x21	; 33
     506:	30 83       	st	Z, r19
     508:	31 97       	sbiw	r30, 0x01	; 1
     50a:	20 83       	st	Z, r18
     50c:	31 97       	sbiw	r30, 0x01	; 1
     50e:	23 e2       	ldi	r18, 0x23	; 35
     510:	20 83       	st	Z, r18
     512:	31 97       	sbiw	r30, 0x01	; 1
     514:	40 83       	st	Z, r20
     516:	31 97       	sbiw	r30, 0x01	; 1
     518:	50 83       	st	Z, r21
     51a:	31 97       	sbiw	r30, 0x01	; 1
     51c:	26 e2       	ldi	r18, 0x26	; 38
     51e:	20 83       	st	Z, r18
     520:	31 97       	sbiw	r30, 0x01	; 1
     522:	27 e2       	ldi	r18, 0x27	; 39
     524:	20 83       	st	Z, r18
     526:	31 97       	sbiw	r30, 0x01	; 1
     528:	28 e2       	ldi	r18, 0x28	; 40
     52a:	20 83       	st	Z, r18
     52c:	31 97       	sbiw	r30, 0x01	; 1
     52e:	29 e2       	ldi	r18, 0x29	; 41
     530:	20 83       	st	Z, r18
     532:	31 97       	sbiw	r30, 0x01	; 1
     534:	20 e3       	ldi	r18, 0x30	; 48
     536:	20 83       	st	Z, r18
     538:	31 97       	sbiw	r30, 0x01	; 1
     53a:	21 e3       	ldi	r18, 0x31	; 49
     53c:	20 83       	st	Z, r18
     53e:	86 97       	sbiw	r24, 0x26	; 38
     540:	08 95       	ret

00000542 <xPortStartScheduler>:
     542:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     546:	85 ee       	ldi	r24, 0xE5	; 229
     548:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     54c:	8b e0       	ldi	r24, 0x0B	; 11
     54e:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     552:	ef e6       	ldi	r30, 0x6F	; 111
     554:	f0 e0       	ldi	r31, 0x00	; 0
     556:	80 81       	ld	r24, Z
     558:	82 60       	ori	r24, 0x02	; 2
     55a:	80 83       	st	Z, r24
     55c:	a0 91 f0 05 	lds	r26, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     560:	b0 91 f1 05 	lds	r27, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     564:	cd 91       	ld	r28, X+
     566:	cd bf       	out	0x3d, r28	; 61
     568:	dd 91       	ld	r29, X+
     56a:	de bf       	out	0x3e, r29	; 62
     56c:	ff 91       	pop	r31
     56e:	ef 91       	pop	r30
     570:	df 91       	pop	r29
     572:	cf 91       	pop	r28
     574:	bf 91       	pop	r27
     576:	af 91       	pop	r26
     578:	9f 91       	pop	r25
     57a:	8f 91       	pop	r24
     57c:	7f 91       	pop	r23
     57e:	6f 91       	pop	r22
     580:	5f 91       	pop	r21
     582:	4f 91       	pop	r20
     584:	3f 91       	pop	r19
     586:	2f 91       	pop	r18
     588:	1f 91       	pop	r17
     58a:	0f 91       	pop	r16
     58c:	ff 90       	pop	r15
     58e:	ef 90       	pop	r14
     590:	df 90       	pop	r13
     592:	cf 90       	pop	r12
     594:	bf 90       	pop	r11
     596:	af 90       	pop	r10
     598:	9f 90       	pop	r9
     59a:	8f 90       	pop	r8
     59c:	7f 90       	pop	r7
     59e:	6f 90       	pop	r6
     5a0:	5f 90       	pop	r5
     5a2:	4f 90       	pop	r4
     5a4:	3f 90       	pop	r3
     5a6:	2f 90       	pop	r2
     5a8:	1f 90       	pop	r1
     5aa:	0f 90       	pop	r0
     5ac:	0f be       	out	0x3f, r0	; 63
     5ae:	0f 90       	pop	r0
     5b0:	08 95       	ret
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	08 95       	ret

000005b6 <vPortYield>:
     5b6:	0f 92       	push	r0
     5b8:	0f b6       	in	r0, 0x3f	; 63
     5ba:	f8 94       	cli
     5bc:	0f 92       	push	r0
     5be:	1f 92       	push	r1
     5c0:	11 24       	eor	r1, r1
     5c2:	2f 92       	push	r2
     5c4:	3f 92       	push	r3
     5c6:	4f 92       	push	r4
     5c8:	5f 92       	push	r5
     5ca:	6f 92       	push	r6
     5cc:	7f 92       	push	r7
     5ce:	8f 92       	push	r8
     5d0:	9f 92       	push	r9
     5d2:	af 92       	push	r10
     5d4:	bf 92       	push	r11
     5d6:	cf 92       	push	r12
     5d8:	df 92       	push	r13
     5da:	ef 92       	push	r14
     5dc:	ff 92       	push	r15
     5de:	0f 93       	push	r16
     5e0:	1f 93       	push	r17
     5e2:	2f 93       	push	r18
     5e4:	3f 93       	push	r19
     5e6:	4f 93       	push	r20
     5e8:	5f 93       	push	r21
     5ea:	6f 93       	push	r22
     5ec:	7f 93       	push	r23
     5ee:	8f 93       	push	r24
     5f0:	9f 93       	push	r25
     5f2:	af 93       	push	r26
     5f4:	bf 93       	push	r27
     5f6:	cf 93       	push	r28
     5f8:	df 93       	push	r29
     5fa:	ef 93       	push	r30
     5fc:	ff 93       	push	r31
     5fe:	a0 91 f0 05 	lds	r26, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     602:	b0 91 f1 05 	lds	r27, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     606:	0d b6       	in	r0, 0x3d	; 61
     608:	0d 92       	st	X+, r0
     60a:	0e b6       	in	r0, 0x3e	; 62
     60c:	0d 92       	st	X+, r0
     60e:	0e 94 08 09 	call	0x1210	; 0x1210 <vTaskSwitchContext>
     612:	a0 91 f0 05 	lds	r26, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     616:	b0 91 f1 05 	lds	r27, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     61a:	cd 91       	ld	r28, X+
     61c:	cd bf       	out	0x3d, r28	; 61
     61e:	dd 91       	ld	r29, X+
     620:	de bf       	out	0x3e, r29	; 62
     622:	ff 91       	pop	r31
     624:	ef 91       	pop	r30
     626:	df 91       	pop	r29
     628:	cf 91       	pop	r28
     62a:	bf 91       	pop	r27
     62c:	af 91       	pop	r26
     62e:	9f 91       	pop	r25
     630:	8f 91       	pop	r24
     632:	7f 91       	pop	r23
     634:	6f 91       	pop	r22
     636:	5f 91       	pop	r21
     638:	4f 91       	pop	r20
     63a:	3f 91       	pop	r19
     63c:	2f 91       	pop	r18
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	df 90       	pop	r13
     648:	cf 90       	pop	r12
     64a:	bf 90       	pop	r11
     64c:	af 90       	pop	r10
     64e:	9f 90       	pop	r9
     650:	8f 90       	pop	r8
     652:	7f 90       	pop	r7
     654:	6f 90       	pop	r6
     656:	5f 90       	pop	r5
     658:	4f 90       	pop	r4
     65a:	3f 90       	pop	r3
     65c:	2f 90       	pop	r2
     65e:	1f 90       	pop	r1
     660:	0f 90       	pop	r0
     662:	0f be       	out	0x3f, r0	; 63
     664:	0f 90       	pop	r0
     666:	08 95       	ret

00000668 <vPortYieldFromTick>:
     668:	0f 92       	push	r0
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	f8 94       	cli
     66e:	0f 92       	push	r0
     670:	1f 92       	push	r1
     672:	11 24       	eor	r1, r1
     674:	2f 92       	push	r2
     676:	3f 92       	push	r3
     678:	4f 92       	push	r4
     67a:	5f 92       	push	r5
     67c:	6f 92       	push	r6
     67e:	7f 92       	push	r7
     680:	8f 92       	push	r8
     682:	9f 92       	push	r9
     684:	af 92       	push	r10
     686:	bf 92       	push	r11
     688:	cf 92       	push	r12
     68a:	df 92       	push	r13
     68c:	ef 92       	push	r14
     68e:	ff 92       	push	r15
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	2f 93       	push	r18
     696:	3f 93       	push	r19
     698:	4f 93       	push	r20
     69a:	5f 93       	push	r21
     69c:	6f 93       	push	r22
     69e:	7f 93       	push	r23
     6a0:	8f 93       	push	r24
     6a2:	9f 93       	push	r25
     6a4:	af 93       	push	r26
     6a6:	bf 93       	push	r27
     6a8:	cf 93       	push	r28
     6aa:	df 93       	push	r29
     6ac:	ef 93       	push	r30
     6ae:	ff 93       	push	r31
     6b0:	a0 91 f0 05 	lds	r26, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     6b4:	b0 91 f1 05 	lds	r27, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     6b8:	0d b6       	in	r0, 0x3d	; 61
     6ba:	0d 92       	st	X+, r0
     6bc:	0e b6       	in	r0, 0x3e	; 62
     6be:	0d 92       	st	X+, r0
     6c0:	0e 94 8f 07 	call	0xf1e	; 0xf1e <xTaskIncrementTick>
     6c4:	81 11       	cpse	r24, r1
     6c6:	0e 94 08 09 	call	0x1210	; 0x1210 <vTaskSwitchContext>
     6ca:	a0 91 f0 05 	lds	r26, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     6ce:	b0 91 f1 05 	lds	r27, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     6d2:	cd 91       	ld	r28, X+
     6d4:	cd bf       	out	0x3d, r28	; 61
     6d6:	dd 91       	ld	r29, X+
     6d8:	de bf       	out	0x3e, r29	; 62
     6da:	ff 91       	pop	r31
     6dc:	ef 91       	pop	r30
     6de:	df 91       	pop	r29
     6e0:	cf 91       	pop	r28
     6e2:	bf 91       	pop	r27
     6e4:	af 91       	pop	r26
     6e6:	9f 91       	pop	r25
     6e8:	8f 91       	pop	r24
     6ea:	7f 91       	pop	r23
     6ec:	6f 91       	pop	r22
     6ee:	5f 91       	pop	r21
     6f0:	4f 91       	pop	r20
     6f2:	3f 91       	pop	r19
     6f4:	2f 91       	pop	r18
     6f6:	1f 91       	pop	r17
     6f8:	0f 91       	pop	r16
     6fa:	ff 90       	pop	r15
     6fc:	ef 90       	pop	r14
     6fe:	df 90       	pop	r13
     700:	cf 90       	pop	r12
     702:	bf 90       	pop	r11
     704:	af 90       	pop	r10
     706:	9f 90       	pop	r9
     708:	8f 90       	pop	r8
     70a:	7f 90       	pop	r7
     70c:	6f 90       	pop	r6
     70e:	5f 90       	pop	r5
     710:	4f 90       	pop	r4
     712:	3f 90       	pop	r3
     714:	2f 90       	pop	r2
     716:	1f 90       	pop	r1
     718:	0f 90       	pop	r0
     71a:	0f be       	out	0x3f, r0	; 63
     71c:	0f 90       	pop	r0
     71e:	08 95       	ret

00000720 <__vector_13>:
     720:	0e 94 34 03 	call	0x668	; 0x668 <vPortYieldFromTick>
     724:	18 95       	reti

00000726 <pvPortMalloc>:
     726:	cf 93       	push	r28
     728:	df 93       	push	r29
     72a:	ec 01       	movw	r28, r24
     72c:	0e 94 89 07 	call	0xf12	; 0xf12 <vTaskSuspendAll>
     730:	80 91 a5 01 	lds	r24, 0x01A5	; 0x8001a5 <pucAlignedHeap.2084>
     734:	90 91 a6 01 	lds	r25, 0x01A6	; 0x8001a6 <pucAlignedHeap.2084+0x1>
     738:	89 2b       	or	r24, r25
     73a:	31 f4       	brne	.+12     	; 0x748 <pvPortMalloc+0x22>
     73c:	8a ea       	ldi	r24, 0xAA	; 170
     73e:	91 e0       	ldi	r25, 0x01	; 1
     740:	90 93 a6 01 	sts	0x01A6, r25	; 0x8001a6 <pucAlignedHeap.2084+0x1>
     744:	80 93 a5 01 	sts	0x01A5, r24	; 0x8001a5 <pucAlignedHeap.2084>
     748:	20 91 a7 01 	lds	r18, 0x01A7	; 0x8001a7 <xNextFreeByte>
     74c:	30 91 a8 01 	lds	r19, 0x01A8	; 0x8001a8 <xNextFreeByte+0x1>
     750:	c9 01       	movw	r24, r18
     752:	8c 0f       	add	r24, r28
     754:	9d 1f       	adc	r25, r29
     756:	87 3e       	cpi	r24, 0xE7	; 231
     758:	43 e0       	ldi	r20, 0x03	; 3
     75a:	94 07       	cpc	r25, r20
     75c:	70 f4       	brcc	.+28     	; 0x77a <pvPortMalloc+0x54>
     75e:	28 17       	cp	r18, r24
     760:	39 07       	cpc	r19, r25
     762:	70 f4       	brcc	.+28     	; 0x780 <pvPortMalloc+0x5a>
     764:	c0 91 a5 01 	lds	r28, 0x01A5	; 0x8001a5 <pucAlignedHeap.2084>
     768:	d0 91 a6 01 	lds	r29, 0x01A6	; 0x8001a6 <pucAlignedHeap.2084+0x1>
     76c:	c2 0f       	add	r28, r18
     76e:	d3 1f       	adc	r29, r19
     770:	90 93 a8 01 	sts	0x01A8, r25	; 0x8001a8 <xNextFreeByte+0x1>
     774:	80 93 a7 01 	sts	0x01A7, r24	; 0x8001a7 <xNextFreeByte>
     778:	05 c0       	rjmp	.+10     	; 0x784 <pvPortMalloc+0x5e>
     77a:	c0 e0       	ldi	r28, 0x00	; 0
     77c:	d0 e0       	ldi	r29, 0x00	; 0
     77e:	02 c0       	rjmp	.+4      	; 0x784 <pvPortMalloc+0x5e>
     780:	c0 e0       	ldi	r28, 0x00	; 0
     782:	d0 e0       	ldi	r29, 0x00	; 0
     784:	0e 94 4a 08 	call	0x1094	; 0x1094 <xTaskResumeAll>
     788:	ce 01       	movw	r24, r28
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	08 95       	ret

00000790 <vPortFree>:
     790:	08 95       	ret

00000792 <serial_new_instance>:
     792:	4f 92       	push	r4
     794:	5f 92       	push	r5
     796:	6f 92       	push	r6
     798:	7f 92       	push	r7
     79a:	8f 92       	push	r8
     79c:	9f 92       	push	r9
     79e:	af 92       	push	r10
     7a0:	bf 92       	push	r11
     7a2:	cf 92       	push	r12
     7a4:	df 92       	push	r13
     7a6:	ff 92       	push	r15
     7a8:	0f 93       	push	r16
     7aa:	1f 93       	push	r17
     7ac:	cf 93       	push	r28
     7ae:	df 93       	push	r29
     7b0:	cd b7       	in	r28, 0x3d	; 61
     7b2:	de b7       	in	r29, 0x3e	; 62
     7b4:	f8 2e       	mov	r15, r24
     7b6:	2a 01       	movw	r4, r20
     7b8:	3b 01       	movw	r6, r22
     7ba:	88 e0       	ldi	r24, 0x08	; 8
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	0e 94 26 0a 	call	0x144c	; 0x144c <malloc>
     7c2:	8c 01       	movw	r16, r24
     7c4:	8f 2d       	mov	r24, r15
     7c6:	90 e0       	ldi	r25, 0x00	; 0
     7c8:	88 0f       	add	r24, r24
     7ca:	99 1f       	adc	r25, r25
     7cc:	fc 01       	movw	r30, r24
     7ce:	ef 56       	subi	r30, 0x6F	; 111
     7d0:	fa 4f       	sbci	r31, 0xFA	; 250
     7d2:	11 83       	std	Z+1, r17	; 0x01
     7d4:	00 83       	st	Z, r16
     7d6:	fc 01       	movw	r30, r24
     7d8:	ea 5f       	subi	r30, 0xFA	; 250
     7da:	fe 4f       	sbci	r31, 0xFE	; 254
     7dc:	80 81       	ld	r24, Z
     7de:	91 81       	ldd	r25, Z+1	; 0x01
     7e0:	d8 01       	movw	r26, r16
     7e2:	11 96       	adiw	r26, 0x01	; 1
     7e4:	9c 93       	st	X, r25
     7e6:	8e 93       	st	-X, r24
     7e8:	13 96       	adiw	r26, 0x03	; 3
     7ea:	bc 92       	st	X, r11
     7ec:	ae 92       	st	-X, r10
     7ee:	12 97       	sbiw	r26, 0x02	; 2
     7f0:	15 96       	adiw	r26, 0x05	; 5
     7f2:	dc 92       	st	X, r13
     7f4:	ce 92       	st	-X, r12
     7f6:	14 97       	sbiw	r26, 0x04	; 4
     7f8:	17 96       	adiw	r26, 0x07	; 7
     7fa:	9c 92       	st	X, r9
     7fc:	8e 92       	st	-X, r8
     7fe:	16 97       	sbiw	r26, 0x06	; 6
     800:	ff b6       	in	r15, 0x3f	; 63
     802:	f8 94       	cli
     804:	ed 91       	ld	r30, X+
     806:	fc 91       	ld	r31, X
     808:	11 97       	sbiw	r26, 0x01	; 1
     80a:	36 97       	sbiw	r30, 0x06	; 6
     80c:	80 81       	ld	r24, Z
     80e:	82 60       	ori	r24, 0x02	; 2
     810:	80 83       	st	Z, r24
     812:	cd 90       	ld	r12, X+
     814:	dc 90       	ld	r13, X
     816:	d3 01       	movw	r26, r6
     818:	c2 01       	movw	r24, r4
     81a:	88 0f       	add	r24, r24
     81c:	99 1f       	adc	r25, r25
     81e:	aa 1f       	adc	r26, r26
     820:	bb 1f       	adc	r27, r27
     822:	88 0f       	add	r24, r24
     824:	99 1f       	adc	r25, r25
     826:	aa 1f       	adc	r26, r26
     828:	bb 1f       	adc	r27, r27
     82a:	9c 01       	movw	r18, r24
     82c:	ad 01       	movw	r20, r26
     82e:	22 0f       	add	r18, r18
     830:	33 1f       	adc	r19, r19
     832:	44 1f       	adc	r20, r20
     834:	55 1f       	adc	r21, r21
     836:	60 e0       	ldi	r22, 0x00	; 0
     838:	70 e0       	ldi	r23, 0x00	; 0
     83a:	81 ee       	ldi	r24, 0xE1	; 225
     83c:	90 e0       	ldi	r25, 0x00	; 0
     83e:	0e 94 04 0a 	call	0x1408	; 0x1408 <__udivmodsi4>
     842:	21 50       	subi	r18, 0x01	; 1
     844:	f6 01       	movw	r30, r12
     846:	32 97       	sbiw	r30, 0x02	; 2
     848:	20 83       	st	Z, r18
     84a:	d8 01       	movw	r26, r16
     84c:	ed 91       	ld	r30, X+
     84e:	fc 91       	ld	r31, X
     850:	11 97       	sbiw	r26, 0x01	; 1
     852:	35 97       	sbiw	r30, 0x05	; 5
     854:	88 e9       	ldi	r24, 0x98	; 152
     856:	80 83       	st	Z, r24
     858:	ed 91       	ld	r30, X+
     85a:	fc 91       	ld	r31, X
     85c:	34 97       	sbiw	r30, 0x04	; 4
     85e:	86 e0       	ldi	r24, 0x06	; 6
     860:	80 83       	st	Z, r24
     862:	ff be       	out	0x3f, r15	; 63
     864:	c8 01       	movw	r24, r16
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	ff 90       	pop	r15
     870:	df 90       	pop	r13
     872:	cf 90       	pop	r12
     874:	bf 90       	pop	r11
     876:	af 90       	pop	r10
     878:	9f 90       	pop	r9
     87a:	8f 90       	pop	r8
     87c:	7f 90       	pop	r7
     87e:	6f 90       	pop	r6
     880:	5f 90       	pop	r5
     882:	4f 90       	pop	r4
     884:	08 95       	ret

00000886 <serial_send_bytes>:
     886:	ef 92       	push	r14
     888:	ff 92       	push	r15
     88a:	0f 93       	push	r16
     88c:	1f 93       	push	r17
     88e:	cf 93       	push	r28
     890:	df 93       	push	r29
     892:	fc 01       	movw	r30, r24
     894:	a2 81       	ldd	r26, Z+2	; 0x02
     896:	b3 81       	ldd	r27, Z+3	; 0x03
     898:	10 97       	sbiw	r26, 0x00	; 0
     89a:	79 f0       	breq	.+30     	; 0x8ba <serial_send_bytes+0x34>
     89c:	e4 2f       	mov	r30, r20
     89e:	f0 e0       	ldi	r31, 0x00	; 0
     8a0:	92 96       	adiw	r26, 0x22	; 34
     8a2:	5c 91       	ld	r21, X
     8a4:	20 e2       	ldi	r18, 0x20	; 32
     8a6:	30 e0       	ldi	r19, 0x00	; 0
     8a8:	25 1b       	sub	r18, r21
     8aa:	31 09       	sbc	r19, r1
     8ac:	2e 17       	cp	r18, r30
     8ae:	3f 07       	cpc	r19, r31
     8b0:	1c f1       	brlt	.+70     	; 0x8f8 <serial_send_bytes+0x72>
     8b2:	7c 01       	movw	r14, r24
     8b4:	41 11       	cpse	r20, r1
     8b6:	04 c0       	rjmp	.+8      	; 0x8c0 <serial_send_bytes+0x3a>
     8b8:	16 c0       	rjmp	.+44     	; 0x8e6 <serial_send_bytes+0x60>
     8ba:	42 30       	cpi	r20, 0x02	; 2
     8bc:	f8 f4       	brcc	.+62     	; 0x8fc <serial_send_bytes+0x76>
     8be:	f9 cf       	rjmp	.-14     	; 0x8b2 <serial_send_bytes+0x2c>
     8c0:	eb 01       	movw	r28, r22
     8c2:	41 50       	subi	r20, 0x01	; 1
     8c4:	04 2f       	mov	r16, r20
     8c6:	10 e0       	ldi	r17, 0x00	; 0
     8c8:	0f 5f       	subi	r16, 0xFF	; 255
     8ca:	1f 4f       	sbci	r17, 0xFF	; 255
     8cc:	06 0f       	add	r16, r22
     8ce:	17 1f       	adc	r17, r23
     8d0:	69 91       	ld	r22, Y+
     8d2:	d7 01       	movw	r26, r14
     8d4:	12 96       	adiw	r26, 0x02	; 2
     8d6:	8d 91       	ld	r24, X+
     8d8:	9c 91       	ld	r25, X
     8da:	13 97       	sbiw	r26, 0x03	; 3
     8dc:	0e 94 bf 01 	call	0x37e	; 0x37e <buffer_put_item>
     8e0:	c0 17       	cp	r28, r16
     8e2:	d1 07       	cpc	r29, r17
     8e4:	a9 f7       	brne	.-22     	; 0x8d0 <serial_send_bytes+0x4a>
     8e6:	d7 01       	movw	r26, r14
     8e8:	ed 91       	ld	r30, X+
     8ea:	fc 91       	ld	r31, X
     8ec:	35 97       	sbiw	r30, 0x05	; 5
     8ee:	80 81       	ld	r24, Z
     8f0:	80 62       	ori	r24, 0x20	; 32
     8f2:	80 83       	st	Z, r24
     8f4:	80 e0       	ldi	r24, 0x00	; 0
     8f6:	03 c0       	rjmp	.+6      	; 0x8fe <serial_send_bytes+0x78>
     8f8:	82 e0       	ldi	r24, 0x02	; 2
     8fa:	01 c0       	rjmp	.+2      	; 0x8fe <serial_send_bytes+0x78>
     8fc:	82 e0       	ldi	r24, 0x02	; 2
     8fe:	df 91       	pop	r29
     900:	cf 91       	pop	r28
     902:	1f 91       	pop	r17
     904:	0f 91       	pop	r16
     906:	ff 90       	pop	r15
     908:	ef 90       	pop	r14
     90a:	08 95       	ret

0000090c <__vector_20>:
     90c:	1f 92       	push	r1
     90e:	0f 92       	push	r0
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	0f 92       	push	r0
     914:	11 24       	eor	r1, r1
     916:	2f 93       	push	r18
     918:	3f 93       	push	r19
     91a:	4f 93       	push	r20
     91c:	5f 93       	push	r21
     91e:	6f 93       	push	r22
     920:	7f 93       	push	r23
     922:	8f 93       	push	r24
     924:	9f 93       	push	r25
     926:	af 93       	push	r26
     928:	bf 93       	push	r27
     92a:	cf 93       	push	r28
     92c:	ef 93       	push	r30
     92e:	ff 93       	push	r31
     930:	e0 91 91 05 	lds	r30, 0x0591	; 0x800591 <_ser_handle>
     934:	f0 91 92 05 	lds	r31, 0x0592	; 0x800592 <_ser_handle+0x1>
     938:	30 97       	sbiw	r30, 0x00	; 0
     93a:	a1 f0       	breq	.+40     	; 0x964 <__vector_20+0x58>
     93c:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     940:	6c 2f       	mov	r22, r28
     942:	84 81       	ldd	r24, Z+4	; 0x04
     944:	95 81       	ldd	r25, Z+5	; 0x05
     946:	0e 94 bf 01 	call	0x37e	; 0x37e <buffer_put_item>
     94a:	80 91 91 05 	lds	r24, 0x0591	; 0x800591 <_ser_handle>
     94e:	90 91 92 05 	lds	r25, 0x0592	; 0x800592 <_ser_handle+0x1>
     952:	dc 01       	movw	r26, r24
     954:	16 96       	adiw	r26, 0x06	; 6
     956:	ed 91       	ld	r30, X+
     958:	fc 91       	ld	r31, X
     95a:	17 97       	sbiw	r26, 0x07	; 7
     95c:	30 97       	sbiw	r30, 0x00	; 0
     95e:	11 f0       	breq	.+4      	; 0x964 <__vector_20+0x58>
     960:	6c 2f       	mov	r22, r28
     962:	09 95       	icall
     964:	ff 91       	pop	r31
     966:	ef 91       	pop	r30
     968:	cf 91       	pop	r28
     96a:	bf 91       	pop	r27
     96c:	af 91       	pop	r26
     96e:	9f 91       	pop	r25
     970:	8f 91       	pop	r24
     972:	7f 91       	pop	r23
     974:	6f 91       	pop	r22
     976:	5f 91       	pop	r21
     978:	4f 91       	pop	r20
     97a:	3f 91       	pop	r19
     97c:	2f 91       	pop	r18
     97e:	0f 90       	pop	r0
     980:	0f be       	out	0x3f, r0	; 63
     982:	0f 90       	pop	r0
     984:	1f 90       	pop	r1
     986:	18 95       	reti

00000988 <__vector_21>:
     988:	1f 92       	push	r1
     98a:	0f 92       	push	r0
     98c:	0f b6       	in	r0, 0x3f	; 63
     98e:	0f 92       	push	r0
     990:	11 24       	eor	r1, r1
     992:	2f 93       	push	r18
     994:	3f 93       	push	r19
     996:	4f 93       	push	r20
     998:	5f 93       	push	r21
     99a:	6f 93       	push	r22
     99c:	7f 93       	push	r23
     99e:	8f 93       	push	r24
     9a0:	9f 93       	push	r25
     9a2:	af 93       	push	r26
     9a4:	bf 93       	push	r27
     9a6:	ef 93       	push	r30
     9a8:	ff 93       	push	r31
     9aa:	cf 93       	push	r28
     9ac:	df 93       	push	r29
     9ae:	1f 92       	push	r1
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
     9b4:	e0 91 91 05 	lds	r30, 0x0591	; 0x800591 <_ser_handle>
     9b8:	f0 91 92 05 	lds	r31, 0x0592	; 0x800592 <_ser_handle+0x1>
     9bc:	30 97       	sbiw	r30, 0x00	; 0
     9be:	99 f0       	breq	.+38     	; 0x9e6 <__vector_21+0x5e>
     9c0:	be 01       	movw	r22, r28
     9c2:	6f 5f       	subi	r22, 0xFF	; 255
     9c4:	7f 4f       	sbci	r23, 0xFF	; 255
     9c6:	82 81       	ldd	r24, Z+2	; 0x02
     9c8:	93 81       	ldd	r25, Z+3	; 0x03
     9ca:	0e 94 9e 01 	call	0x33c	; 0x33c <buffer_get_item>
     9ce:	81 11       	cpse	r24, r1
     9d0:	04 c0       	rjmp	.+8      	; 0x9da <__vector_21+0x52>
     9d2:	89 81       	ldd	r24, Y+1	; 0x01
     9d4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     9d8:	0b c0       	rjmp	.+22     	; 0x9f0 <__vector_21+0x68>
     9da:	e1 ec       	ldi	r30, 0xC1	; 193
     9dc:	f0 e0       	ldi	r31, 0x00	; 0
     9de:	80 81       	ld	r24, Z
     9e0:	8f 7d       	andi	r24, 0xDF	; 223
     9e2:	80 83       	st	Z, r24
     9e4:	05 c0       	rjmp	.+10     	; 0x9f0 <__vector_21+0x68>
     9e6:	e1 ec       	ldi	r30, 0xC1	; 193
     9e8:	f0 e0       	ldi	r31, 0x00	; 0
     9ea:	80 81       	ld	r24, Z
     9ec:	8f 7d       	andi	r24, 0xDF	; 223
     9ee:	80 83       	st	Z, r24
     9f0:	0f 90       	pop	r0
     9f2:	df 91       	pop	r29
     9f4:	cf 91       	pop	r28
     9f6:	ff 91       	pop	r31
     9f8:	ef 91       	pop	r30
     9fa:	bf 91       	pop	r27
     9fc:	af 91       	pop	r26
     9fe:	9f 91       	pop	r25
     a00:	8f 91       	pop	r24
     a02:	7f 91       	pop	r23
     a04:	6f 91       	pop	r22
     a06:	5f 91       	pop	r21
     a08:	4f 91       	pop	r20
     a0a:	3f 91       	pop	r19
     a0c:	2f 91       	pop	r18
     a0e:	0f 90       	pop	r0
     a10:	0f be       	out	0x3f, r0	; 63
     a12:	0f 90       	pop	r0
     a14:	1f 90       	pop	r1
     a16:	18 95       	reti

00000a18 <__vector_28>:
     a18:	1f 92       	push	r1
     a1a:	0f 92       	push	r0
     a1c:	0f b6       	in	r0, 0x3f	; 63
     a1e:	0f 92       	push	r0
     a20:	11 24       	eor	r1, r1
     a22:	2f 93       	push	r18
     a24:	3f 93       	push	r19
     a26:	4f 93       	push	r20
     a28:	5f 93       	push	r21
     a2a:	6f 93       	push	r22
     a2c:	7f 93       	push	r23
     a2e:	8f 93       	push	r24
     a30:	9f 93       	push	r25
     a32:	af 93       	push	r26
     a34:	bf 93       	push	r27
     a36:	cf 93       	push	r28
     a38:	ef 93       	push	r30
     a3a:	ff 93       	push	r31
     a3c:	e0 91 93 05 	lds	r30, 0x0593	; 0x800593 <_ser_handle+0x2>
     a40:	f0 91 94 05 	lds	r31, 0x0594	; 0x800594 <_ser_handle+0x3>
     a44:	30 97       	sbiw	r30, 0x00	; 0
     a46:	a1 f0       	breq	.+40     	; 0xa70 <__vector_28+0x58>
     a48:	c0 91 ce 00 	lds	r28, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     a4c:	6c 2f       	mov	r22, r28
     a4e:	84 81       	ldd	r24, Z+4	; 0x04
     a50:	95 81       	ldd	r25, Z+5	; 0x05
     a52:	0e 94 bf 01 	call	0x37e	; 0x37e <buffer_put_item>
     a56:	80 91 93 05 	lds	r24, 0x0593	; 0x800593 <_ser_handle+0x2>
     a5a:	90 91 94 05 	lds	r25, 0x0594	; 0x800594 <_ser_handle+0x3>
     a5e:	dc 01       	movw	r26, r24
     a60:	16 96       	adiw	r26, 0x06	; 6
     a62:	ed 91       	ld	r30, X+
     a64:	fc 91       	ld	r31, X
     a66:	17 97       	sbiw	r26, 0x07	; 7
     a68:	30 97       	sbiw	r30, 0x00	; 0
     a6a:	11 f0       	breq	.+4      	; 0xa70 <__vector_28+0x58>
     a6c:	6c 2f       	mov	r22, r28
     a6e:	09 95       	icall
     a70:	ff 91       	pop	r31
     a72:	ef 91       	pop	r30
     a74:	cf 91       	pop	r28
     a76:	bf 91       	pop	r27
     a78:	af 91       	pop	r26
     a7a:	9f 91       	pop	r25
     a7c:	8f 91       	pop	r24
     a7e:	7f 91       	pop	r23
     a80:	6f 91       	pop	r22
     a82:	5f 91       	pop	r21
     a84:	4f 91       	pop	r20
     a86:	3f 91       	pop	r19
     a88:	2f 91       	pop	r18
     a8a:	0f 90       	pop	r0
     a8c:	0f be       	out	0x3f, r0	; 63
     a8e:	0f 90       	pop	r0
     a90:	1f 90       	pop	r1
     a92:	18 95       	reti

00000a94 <__vector_29>:
     a94:	1f 92       	push	r1
     a96:	0f 92       	push	r0
     a98:	0f b6       	in	r0, 0x3f	; 63
     a9a:	0f 92       	push	r0
     a9c:	11 24       	eor	r1, r1
     a9e:	2f 93       	push	r18
     aa0:	3f 93       	push	r19
     aa2:	4f 93       	push	r20
     aa4:	5f 93       	push	r21
     aa6:	6f 93       	push	r22
     aa8:	7f 93       	push	r23
     aaa:	8f 93       	push	r24
     aac:	9f 93       	push	r25
     aae:	af 93       	push	r26
     ab0:	bf 93       	push	r27
     ab2:	ef 93       	push	r30
     ab4:	ff 93       	push	r31
     ab6:	cf 93       	push	r28
     ab8:	df 93       	push	r29
     aba:	1f 92       	push	r1
     abc:	cd b7       	in	r28, 0x3d	; 61
     abe:	de b7       	in	r29, 0x3e	; 62
     ac0:	e0 91 93 05 	lds	r30, 0x0593	; 0x800593 <_ser_handle+0x2>
     ac4:	f0 91 94 05 	lds	r31, 0x0594	; 0x800594 <_ser_handle+0x3>
     ac8:	30 97       	sbiw	r30, 0x00	; 0
     aca:	99 f0       	breq	.+38     	; 0xaf2 <__vector_29+0x5e>
     acc:	be 01       	movw	r22, r28
     ace:	6f 5f       	subi	r22, 0xFF	; 255
     ad0:	7f 4f       	sbci	r23, 0xFF	; 255
     ad2:	82 81       	ldd	r24, Z+2	; 0x02
     ad4:	93 81       	ldd	r25, Z+3	; 0x03
     ad6:	0e 94 9e 01 	call	0x33c	; 0x33c <buffer_get_item>
     ada:	81 11       	cpse	r24, r1
     adc:	04 c0       	rjmp	.+8      	; 0xae6 <__vector_29+0x52>
     ade:	89 81       	ldd	r24, Y+1	; 0x01
     ae0:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     ae4:	0b c0       	rjmp	.+22     	; 0xafc <__vector_29+0x68>
     ae6:	e9 ec       	ldi	r30, 0xC9	; 201
     ae8:	f0 e0       	ldi	r31, 0x00	; 0
     aea:	80 81       	ld	r24, Z
     aec:	8f 7d       	andi	r24, 0xDF	; 223
     aee:	80 83       	st	Z, r24
     af0:	05 c0       	rjmp	.+10     	; 0xafc <__vector_29+0x68>
     af2:	e9 ec       	ldi	r30, 0xC9	; 201
     af4:	f0 e0       	ldi	r31, 0x00	; 0
     af6:	80 81       	ld	r24, Z
     af8:	8f 7d       	andi	r24, 0xDF	; 223
     afa:	80 83       	st	Z, r24
     afc:	0f 90       	pop	r0
     afe:	df 91       	pop	r29
     b00:	cf 91       	pop	r28
     b02:	ff 91       	pop	r31
     b04:	ef 91       	pop	r30
     b06:	bf 91       	pop	r27
     b08:	af 91       	pop	r26
     b0a:	9f 91       	pop	r25
     b0c:	8f 91       	pop	r24
     b0e:	7f 91       	pop	r23
     b10:	6f 91       	pop	r22
     b12:	5f 91       	pop	r21
     b14:	4f 91       	pop	r20
     b16:	3f 91       	pop	r19
     b18:	2f 91       	pop	r18
     b1a:	0f 90       	pop	r0
     b1c:	0f be       	out	0x3f, r0	; 63
     b1e:	0f 90       	pop	r0
     b20:	1f 90       	pop	r1
     b22:	18 95       	reti

00000b24 <prvCopyDataToQueue>:
     b24:	0f 93       	push	r16
     b26:	1f 93       	push	r17
     b28:	cf 93       	push	r28
     b2a:	df 93       	push	r29
     b2c:	ec 01       	movw	r28, r24
     b2e:	04 2f       	mov	r16, r20
     b30:	1a 8d       	ldd	r17, Y+26	; 0x1a
     b32:	4c 8d       	ldd	r20, Y+28	; 0x1c
     b34:	41 11       	cpse	r20, r1
     b36:	0c c0       	rjmp	.+24     	; 0xb50 <prvCopyDataToQueue+0x2c>
     b38:	88 81       	ld	r24, Y
     b3a:	99 81       	ldd	r25, Y+1	; 0x01
     b3c:	89 2b       	or	r24, r25
     b3e:	09 f0       	breq	.+2      	; 0xb42 <prvCopyDataToQueue+0x1e>
     b40:	42 c0       	rjmp	.+132    	; 0xbc6 <prvCopyDataToQueue+0xa2>
     b42:	8a 81       	ldd	r24, Y+2	; 0x02
     b44:	9b 81       	ldd	r25, Y+3	; 0x03
     b46:	0e 94 c4 09 	call	0x1388	; 0x1388 <xTaskPriorityDisinherit>
     b4a:	1b 82       	std	Y+3, r1	; 0x03
     b4c:	1a 82       	std	Y+2, r1	; 0x02
     b4e:	42 c0       	rjmp	.+132    	; 0xbd4 <prvCopyDataToQueue+0xb0>
     b50:	01 11       	cpse	r16, r1
     b52:	17 c0       	rjmp	.+46     	; 0xb82 <prvCopyDataToQueue+0x5e>
     b54:	50 e0       	ldi	r21, 0x00	; 0
     b56:	8c 81       	ldd	r24, Y+4	; 0x04
     b58:	9d 81       	ldd	r25, Y+5	; 0x05
     b5a:	0e 94 47 0b 	call	0x168e	; 0x168e <memcpy>
     b5e:	2c 8d       	ldd	r18, Y+28	; 0x1c
     b60:	8c 81       	ldd	r24, Y+4	; 0x04
     b62:	9d 81       	ldd	r25, Y+5	; 0x05
     b64:	82 0f       	add	r24, r18
     b66:	91 1d       	adc	r25, r1
     b68:	9d 83       	std	Y+5, r25	; 0x05
     b6a:	8c 83       	std	Y+4, r24	; 0x04
     b6c:	2a 81       	ldd	r18, Y+2	; 0x02
     b6e:	3b 81       	ldd	r19, Y+3	; 0x03
     b70:	82 17       	cp	r24, r18
     b72:	93 07       	cpc	r25, r19
     b74:	50 f1       	brcs	.+84     	; 0xbca <prvCopyDataToQueue+0xa6>
     b76:	88 81       	ld	r24, Y
     b78:	99 81       	ldd	r25, Y+1	; 0x01
     b7a:	9d 83       	std	Y+5, r25	; 0x05
     b7c:	8c 83       	std	Y+4, r24	; 0x04
     b7e:	80 e0       	ldi	r24, 0x00	; 0
     b80:	29 c0       	rjmp	.+82     	; 0xbd4 <prvCopyDataToQueue+0xb0>
     b82:	50 e0       	ldi	r21, 0x00	; 0
     b84:	8e 81       	ldd	r24, Y+6	; 0x06
     b86:	9f 81       	ldd	r25, Y+7	; 0x07
     b88:	0e 94 47 0b 	call	0x168e	; 0x168e <memcpy>
     b8c:	8c 8d       	ldd	r24, Y+28	; 0x1c
     b8e:	90 e0       	ldi	r25, 0x00	; 0
     b90:	91 95       	neg	r25
     b92:	81 95       	neg	r24
     b94:	91 09       	sbc	r25, r1
     b96:	2e 81       	ldd	r18, Y+6	; 0x06
     b98:	3f 81       	ldd	r19, Y+7	; 0x07
     b9a:	28 0f       	add	r18, r24
     b9c:	39 1f       	adc	r19, r25
     b9e:	3f 83       	std	Y+7, r19	; 0x07
     ba0:	2e 83       	std	Y+6, r18	; 0x06
     ba2:	48 81       	ld	r20, Y
     ba4:	59 81       	ldd	r21, Y+1	; 0x01
     ba6:	24 17       	cp	r18, r20
     ba8:	35 07       	cpc	r19, r21
     baa:	30 f4       	brcc	.+12     	; 0xbb8 <prvCopyDataToQueue+0x94>
     bac:	2a 81       	ldd	r18, Y+2	; 0x02
     bae:	3b 81       	ldd	r19, Y+3	; 0x03
     bb0:	82 0f       	add	r24, r18
     bb2:	93 1f       	adc	r25, r19
     bb4:	9f 83       	std	Y+7, r25	; 0x07
     bb6:	8e 83       	std	Y+6, r24	; 0x06
     bb8:	02 30       	cpi	r16, 0x02	; 2
     bba:	49 f4       	brne	.+18     	; 0xbce <prvCopyDataToQueue+0xaa>
     bbc:	11 23       	and	r17, r17
     bbe:	49 f0       	breq	.+18     	; 0xbd2 <prvCopyDataToQueue+0xae>
     bc0:	11 50       	subi	r17, 0x01	; 1
     bc2:	80 e0       	ldi	r24, 0x00	; 0
     bc4:	07 c0       	rjmp	.+14     	; 0xbd4 <prvCopyDataToQueue+0xb0>
     bc6:	80 e0       	ldi	r24, 0x00	; 0
     bc8:	05 c0       	rjmp	.+10     	; 0xbd4 <prvCopyDataToQueue+0xb0>
     bca:	80 e0       	ldi	r24, 0x00	; 0
     bcc:	03 c0       	rjmp	.+6      	; 0xbd4 <prvCopyDataToQueue+0xb0>
     bce:	80 e0       	ldi	r24, 0x00	; 0
     bd0:	01 c0       	rjmp	.+2      	; 0xbd4 <prvCopyDataToQueue+0xb0>
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	1f 5f       	subi	r17, 0xFF	; 255
     bd6:	1a 8f       	std	Y+26, r17	; 0x1a
     bd8:	df 91       	pop	r29
     bda:	cf 91       	pop	r28
     bdc:	1f 91       	pop	r17
     bde:	0f 91       	pop	r16
     be0:	08 95       	ret

00000be2 <xQueueGenericSendFromISR>:
     be2:	ef 92       	push	r14
     be4:	ff 92       	push	r15
     be6:	0f 93       	push	r16
     be8:	1f 93       	push	r17
     bea:	cf 93       	push	r28
     bec:	df 93       	push	r29
     bee:	8a 01       	movw	r16, r20
     bf0:	fc 01       	movw	r30, r24
     bf2:	52 8d       	ldd	r21, Z+26	; 0x1a
     bf4:	33 8d       	ldd	r19, Z+27	; 0x1b
     bf6:	53 17       	cp	r21, r19
     bf8:	10 f0       	brcs	.+4      	; 0xbfe <xQueueGenericSendFromISR+0x1c>
     bfa:	22 30       	cpi	r18, 0x02	; 2
     bfc:	f1 f4       	brne	.+60     	; 0xc3a <xQueueGenericSendFromISR+0x58>
     bfe:	42 2f       	mov	r20, r18
     c00:	78 01       	movw	r14, r16
     c02:	ec 01       	movw	r28, r24
     c04:	1e 8d       	ldd	r17, Y+30	; 0x1e
     c06:	0e 94 92 05 	call	0xb24	; 0xb24 <prvCopyDataToQueue>
     c0a:	1f 3f       	cpi	r17, 0xFF	; 255
     c0c:	81 f4       	brne	.+32     	; 0xc2e <xQueueGenericSendFromISR+0x4c>
     c0e:	89 89       	ldd	r24, Y+17	; 0x11
     c10:	88 23       	and	r24, r24
     c12:	a9 f0       	breq	.+42     	; 0xc3e <xQueueGenericSendFromISR+0x5c>
     c14:	ce 01       	movw	r24, r28
     c16:	41 96       	adiw	r24, 0x11	; 17
     c18:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <xTaskRemoveFromEventList>
     c1c:	88 23       	and	r24, r24
     c1e:	89 f0       	breq	.+34     	; 0xc42 <xQueueGenericSendFromISR+0x60>
     c20:	e1 14       	cp	r14, r1
     c22:	f1 04       	cpc	r15, r1
     c24:	81 f0       	breq	.+32     	; 0xc46 <xQueueGenericSendFromISR+0x64>
     c26:	81 e0       	ldi	r24, 0x01	; 1
     c28:	f7 01       	movw	r30, r14
     c2a:	80 83       	st	Z, r24
     c2c:	0d c0       	rjmp	.+26     	; 0xc48 <xQueueGenericSendFromISR+0x66>
     c2e:	ff 24       	eor	r15, r15
     c30:	f3 94       	inc	r15
     c32:	f1 0e       	add	r15, r17
     c34:	fe 8e       	std	Y+30, r15	; 0x1e
     c36:	81 e0       	ldi	r24, 0x01	; 1
     c38:	07 c0       	rjmp	.+14     	; 0xc48 <xQueueGenericSendFromISR+0x66>
     c3a:	80 e0       	ldi	r24, 0x00	; 0
     c3c:	05 c0       	rjmp	.+10     	; 0xc48 <xQueueGenericSendFromISR+0x66>
     c3e:	81 e0       	ldi	r24, 0x01	; 1
     c40:	03 c0       	rjmp	.+6      	; 0xc48 <xQueueGenericSendFromISR+0x66>
     c42:	81 e0       	ldi	r24, 0x01	; 1
     c44:	01 c0       	rjmp	.+2      	; 0xc48 <xQueueGenericSendFromISR+0x66>
     c46:	81 e0       	ldi	r24, 0x01	; 1
     c48:	df 91       	pop	r29
     c4a:	cf 91       	pop	r28
     c4c:	1f 91       	pop	r17
     c4e:	0f 91       	pop	r16
     c50:	ff 90       	pop	r15
     c52:	ef 90       	pop	r14
     c54:	08 95       	ret

00000c56 <prvResetNextTaskUnblockTime>:
     c56:	e0 91 b8 05 	lds	r30, 0x05B8	; 0x8005b8 <pxDelayedTaskList>
     c5a:	f0 91 b9 05 	lds	r31, 0x05B9	; 0x8005b9 <pxDelayedTaskList+0x1>
     c5e:	80 81       	ld	r24, Z
     c60:	81 11       	cpse	r24, r1
     c62:	07 c0       	rjmp	.+14     	; 0xc72 <prvResetNextTaskUnblockTime+0x1c>
     c64:	8f ef       	ldi	r24, 0xFF	; 255
     c66:	9f ef       	ldi	r25, 0xFF	; 255
     c68:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <xNextTaskUnblockTime+0x1>
     c6c:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <xNextTaskUnblockTime>
     c70:	08 95       	ret
     c72:	e0 91 b8 05 	lds	r30, 0x05B8	; 0x8005b8 <pxDelayedTaskList>
     c76:	f0 91 b9 05 	lds	r31, 0x05B9	; 0x8005b9 <pxDelayedTaskList+0x1>
     c7a:	05 80       	ldd	r0, Z+5	; 0x05
     c7c:	f6 81       	ldd	r31, Z+6	; 0x06
     c7e:	e0 2d       	mov	r30, r0
     c80:	06 80       	ldd	r0, Z+6	; 0x06
     c82:	f7 81       	ldd	r31, Z+7	; 0x07
     c84:	e0 2d       	mov	r30, r0
     c86:	82 81       	ldd	r24, Z+2	; 0x02
     c88:	93 81       	ldd	r25, Z+3	; 0x03
     c8a:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <xNextTaskUnblockTime+0x1>
     c8e:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <xNextTaskUnblockTime>
     c92:	08 95       	ret

00000c94 <xTaskCreate>:
     c94:	4f 92       	push	r4
     c96:	5f 92       	push	r5
     c98:	6f 92       	push	r6
     c9a:	7f 92       	push	r7
     c9c:	8f 92       	push	r8
     c9e:	9f 92       	push	r9
     ca0:	af 92       	push	r10
     ca2:	bf 92       	push	r11
     ca4:	cf 92       	push	r12
     ca6:	df 92       	push	r13
     ca8:	ef 92       	push	r14
     caa:	ff 92       	push	r15
     cac:	0f 93       	push	r16
     cae:	cf 93       	push	r28
     cb0:	df 93       	push	r29
     cb2:	4c 01       	movw	r8, r24
     cb4:	6b 01       	movw	r12, r22
     cb6:	5a 01       	movw	r10, r20
     cb8:	29 01       	movw	r4, r18
     cba:	ca 01       	movw	r24, r20
     cbc:	0e 94 93 03 	call	0x726	; 0x726 <pvPortMalloc>
     cc0:	3c 01       	movw	r6, r24
     cc2:	89 2b       	or	r24, r25
     cc4:	09 f4       	brne	.+2      	; 0xcc8 <xTaskCreate+0x34>
     cc6:	ea c0       	rjmp	.+468    	; 0xe9c <xTaskCreate+0x208>
     cc8:	8c e2       	ldi	r24, 0x2C	; 44
     cca:	90 e0       	ldi	r25, 0x00	; 0
     ccc:	0e 94 93 03 	call	0x726	; 0x726 <pvPortMalloc>
     cd0:	ec 01       	movw	r28, r24
     cd2:	89 2b       	or	r24, r25
     cd4:	b1 f0       	breq	.+44     	; 0xd02 <xTaskCreate+0x6e>
     cd6:	78 8e       	std	Y+24, r7	; 0x18
     cd8:	6f 8a       	std	Y+23, r6	; 0x17
     cda:	a5 01       	movw	r20, r10
     cdc:	65 ea       	ldi	r22, 0xA5	; 165
     cde:	70 e0       	ldi	r23, 0x00	; 0
     ce0:	c3 01       	movw	r24, r6
     ce2:	0e 94 50 0b 	call	0x16a0	; 0x16a0 <memset>
     ce6:	81 e0       	ldi	r24, 0x01	; 1
     ce8:	a8 1a       	sub	r10, r24
     cea:	b1 08       	sbc	r11, r1
     cec:	8f 89       	ldd	r24, Y+23	; 0x17
     cee:	98 8d       	ldd	r25, Y+24	; 0x18
     cf0:	a8 0e       	add	r10, r24
     cf2:	b9 1e       	adc	r11, r25
     cf4:	d6 01       	movw	r26, r12
     cf6:	8c 91       	ld	r24, X
     cf8:	89 8f       	std	Y+25, r24	; 0x19
     cfa:	8c 91       	ld	r24, X
     cfc:	81 11       	cpse	r24, r1
     cfe:	05 c0       	rjmp	.+10     	; 0xd0a <xTaskCreate+0x76>
     d00:	18 c0       	rjmp	.+48     	; 0xd32 <xTaskCreate+0x9e>
     d02:	c3 01       	movw	r24, r6
     d04:	0e 94 c8 03 	call	0x790	; 0x790 <vPortFree>
     d08:	c9 c0       	rjmp	.+402    	; 0xe9c <xTaskCreate+0x208>
     d0a:	ae 01       	movw	r20, r28
     d0c:	46 5e       	subi	r20, 0xE6	; 230
     d0e:	5f 4f       	sbci	r21, 0xFF	; 255
     d10:	f6 01       	movw	r30, r12
     d12:	31 96       	adiw	r30, 0x01	; 1
     d14:	b8 e0       	ldi	r27, 0x08	; 8
     d16:	cb 0e       	add	r12, r27
     d18:	d1 1c       	adc	r13, r1
     d1a:	cf 01       	movw	r24, r30
     d1c:	21 91       	ld	r18, Z+
     d1e:	da 01       	movw	r26, r20
     d20:	2d 93       	st	X+, r18
     d22:	ad 01       	movw	r20, r26
     d24:	dc 01       	movw	r26, r24
     d26:	8c 91       	ld	r24, X
     d28:	88 23       	and	r24, r24
     d2a:	19 f0       	breq	.+6      	; 0xd32 <xTaskCreate+0x9e>
     d2c:	ec 15       	cp	r30, r12
     d2e:	fd 05       	cpc	r31, r13
     d30:	a1 f7       	brne	.-24     	; 0xd1a <xTaskCreate+0x86>
     d32:	18 a2       	std	Y+32, r1	; 0x20
     d34:	04 30       	cpi	r16, 0x04	; 4
     d36:	08 f0       	brcs	.+2      	; 0xd3a <xTaskCreate+0xa6>
     d38:	03 e0       	ldi	r16, 0x03	; 3
     d3a:	0e 8b       	std	Y+22, r16	; 0x16
     d3c:	0b a3       	std	Y+35, r16	; 0x23
     d3e:	1c a2       	std	Y+36, r1	; 0x24
     d40:	6e 01       	movw	r12, r28
     d42:	b2 e0       	ldi	r27, 0x02	; 2
     d44:	cb 0e       	add	r12, r27
     d46:	d1 1c       	adc	r13, r1
     d48:	c6 01       	movw	r24, r12
     d4a:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <vListInitialiseItem>
     d4e:	ce 01       	movw	r24, r28
     d50:	0c 96       	adiw	r24, 0x0c	; 12
     d52:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <vListInitialiseItem>
     d56:	d9 87       	std	Y+9, r29	; 0x09
     d58:	c8 87       	std	Y+8, r28	; 0x08
     d5a:	84 e0       	ldi	r24, 0x04	; 4
     d5c:	90 e0       	ldi	r25, 0x00	; 0
     d5e:	80 1b       	sub	r24, r16
     d60:	91 09       	sbc	r25, r1
     d62:	9d 87       	std	Y+13, r25	; 0x0d
     d64:	8c 87       	std	Y+12, r24	; 0x0c
     d66:	db 8b       	std	Y+19, r29	; 0x13
     d68:	ca 8b       	std	Y+18, r28	; 0x12
     d6a:	1e a2       	std	Y+38, r1	; 0x26
     d6c:	1d a2       	std	Y+37, r1	; 0x25
     d6e:	1f a2       	std	Y+39, r1	; 0x27
     d70:	18 a6       	std	Y+40, r1	; 0x28
     d72:	19 a6       	std	Y+41, r1	; 0x29
     d74:	1a a6       	std	Y+42, r1	; 0x2a
     d76:	1b a6       	std	Y+43, r1	; 0x2b
     d78:	a2 01       	movw	r20, r4
     d7a:	b4 01       	movw	r22, r8
     d7c:	c5 01       	movw	r24, r10
     d7e:	0e 94 35 02 	call	0x46a	; 0x46a <pxPortInitialiseStack>
     d82:	99 83       	std	Y+1, r25	; 0x01
     d84:	88 83       	st	Y, r24
     d86:	e1 14       	cp	r14, r1
     d88:	f1 04       	cpc	r15, r1
     d8a:	19 f0       	breq	.+6      	; 0xd92 <xTaskCreate+0xfe>
     d8c:	f7 01       	movw	r30, r14
     d8e:	d1 83       	std	Z+1, r29	; 0x01
     d90:	c0 83       	st	Z, r28
     d92:	0f b6       	in	r0, 0x3f	; 63
     d94:	f8 94       	cli
     d96:	0f 92       	push	r0
     d98:	80 91 a2 05 	lds	r24, 0x05A2	; 0x8005a2 <uxCurrentNumberOfTasks>
     d9c:	8f 5f       	subi	r24, 0xFF	; 255
     d9e:	80 93 a2 05 	sts	0x05A2, r24	; 0x8005a2 <uxCurrentNumberOfTasks>
     da2:	80 91 f0 05 	lds	r24, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     da6:	90 91 f1 05 	lds	r25, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     daa:	89 2b       	or	r24, r25
     dac:	a9 f5       	brne	.+106    	; 0xe18 <xTaskCreate+0x184>
     dae:	d0 93 f1 05 	sts	0x05F1, r29	; 0x8005f1 <pxCurrentTCB+0x1>
     db2:	c0 93 f0 05 	sts	0x05F0, r28	; 0x8005f0 <pxCurrentTCB>
     db6:	80 91 a2 05 	lds	r24, 0x05A2	; 0x8005a2 <uxCurrentNumberOfTasks>
     dba:	81 30       	cpi	r24, 0x01	; 1
     dbc:	e9 f5       	brne	.+122    	; 0xe38 <xTaskCreate+0x1a4>
     dbe:	8c ec       	ldi	r24, 0xCC	; 204
     dc0:	95 e0       	ldi	r25, 0x05	; 5
     dc2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dc6:	85 ed       	ldi	r24, 0xD5	; 213
     dc8:	95 e0       	ldi	r25, 0x05	; 5
     dca:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dce:	8e ed       	ldi	r24, 0xDE	; 222
     dd0:	95 e0       	ldi	r25, 0x05	; 5
     dd2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dd6:	87 ee       	ldi	r24, 0xE7	; 231
     dd8:	95 e0       	ldi	r25, 0x05	; 5
     dda:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dde:	83 ec       	ldi	r24, 0xC3	; 195
     de0:	95 e0       	ldi	r25, 0x05	; 5
     de2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     de6:	8a eb       	ldi	r24, 0xBA	; 186
     de8:	95 e0       	ldi	r25, 0x05	; 5
     dea:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dee:	8d ea       	ldi	r24, 0xAD	; 173
     df0:	95 e0       	ldi	r25, 0x05	; 5
     df2:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     df6:	84 ea       	ldi	r24, 0xA4	; 164
     df8:	95 e0       	ldi	r25, 0x05	; 5
     dfa:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <vListInitialise>
     dfe:	83 ec       	ldi	r24, 0xC3	; 195
     e00:	95 e0       	ldi	r25, 0x05	; 5
     e02:	90 93 b9 05 	sts	0x05B9, r25	; 0x8005b9 <pxDelayedTaskList+0x1>
     e06:	80 93 b8 05 	sts	0x05B8, r24	; 0x8005b8 <pxDelayedTaskList>
     e0a:	8a eb       	ldi	r24, 0xBA	; 186
     e0c:	95 e0       	ldi	r25, 0x05	; 5
     e0e:	90 93 b7 05 	sts	0x05B7, r25	; 0x8005b7 <pxOverflowDelayedTaskList+0x1>
     e12:	80 93 b6 05 	sts	0x05B6, r24	; 0x8005b6 <pxOverflowDelayedTaskList>
     e16:	10 c0       	rjmp	.+32     	; 0xe38 <xTaskCreate+0x1a4>
     e18:	80 91 9e 05 	lds	r24, 0x059E	; 0x80059e <xSchedulerRunning>
     e1c:	81 11       	cpse	r24, r1
     e1e:	0c c0       	rjmp	.+24     	; 0xe38 <xTaskCreate+0x1a4>
     e20:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     e24:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     e28:	96 89       	ldd	r25, Z+22	; 0x16
     e2a:	8e 89       	ldd	r24, Y+22	; 0x16
     e2c:	89 17       	cp	r24, r25
     e2e:	20 f0       	brcs	.+8      	; 0xe38 <xTaskCreate+0x1a4>
     e30:	d0 93 f1 05 	sts	0x05F1, r29	; 0x8005f1 <pxCurrentTCB+0x1>
     e34:	c0 93 f0 05 	sts	0x05F0, r28	; 0x8005f0 <pxCurrentTCB>
     e38:	80 91 9a 05 	lds	r24, 0x059A	; 0x80059a <uxTaskNumber>
     e3c:	8f 5f       	subi	r24, 0xFF	; 255
     e3e:	80 93 9a 05 	sts	0x059A, r24	; 0x80059a <uxTaskNumber>
     e42:	89 a3       	std	Y+33, r24	; 0x21
     e44:	8e 89       	ldd	r24, Y+22	; 0x16
     e46:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <uxTopReadyPriority>
     e4a:	98 17       	cp	r25, r24
     e4c:	10 f4       	brcc	.+4      	; 0xe52 <xTaskCreate+0x1be>
     e4e:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <uxTopReadyPriority>
     e52:	90 e0       	ldi	r25, 0x00	; 0
     e54:	9c 01       	movw	r18, r24
     e56:	22 0f       	add	r18, r18
     e58:	33 1f       	adc	r19, r19
     e5a:	22 0f       	add	r18, r18
     e5c:	33 1f       	adc	r19, r19
     e5e:	22 0f       	add	r18, r18
     e60:	33 1f       	adc	r19, r19
     e62:	82 0f       	add	r24, r18
     e64:	93 1f       	adc	r25, r19
     e66:	b6 01       	movw	r22, r12
     e68:	84 53       	subi	r24, 0x34	; 52
     e6a:	9a 4f       	sbci	r25, 0xFA	; 250
     e6c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
     e70:	0f 90       	pop	r0
     e72:	0f be       	out	0x3f, r0	; 63
     e74:	80 91 9e 05 	lds	r24, 0x059E	; 0x80059e <xSchedulerRunning>
     e78:	88 23       	and	r24, r24
     e7a:	61 f0       	breq	.+24     	; 0xe94 <xTaskCreate+0x200>
     e7c:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
     e80:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
     e84:	96 89       	ldd	r25, Z+22	; 0x16
     e86:	8e 89       	ldd	r24, Y+22	; 0x16
     e88:	98 17       	cp	r25, r24
     e8a:	30 f4       	brcc	.+12     	; 0xe98 <xTaskCreate+0x204>
     e8c:	0e 94 db 02 	call	0x5b6	; 0x5b6 <vPortYield>
     e90:	81 e0       	ldi	r24, 0x01	; 1
     e92:	05 c0       	rjmp	.+10     	; 0xe9e <xTaskCreate+0x20a>
     e94:	81 e0       	ldi	r24, 0x01	; 1
     e96:	03 c0       	rjmp	.+6      	; 0xe9e <xTaskCreate+0x20a>
     e98:	81 e0       	ldi	r24, 0x01	; 1
     e9a:	01 c0       	rjmp	.+2      	; 0xe9e <xTaskCreate+0x20a>
     e9c:	8f ef       	ldi	r24, 0xFF	; 255
     e9e:	df 91       	pop	r29
     ea0:	cf 91       	pop	r28
     ea2:	0f 91       	pop	r16
     ea4:	ff 90       	pop	r15
     ea6:	ef 90       	pop	r14
     ea8:	df 90       	pop	r13
     eaa:	cf 90       	pop	r12
     eac:	bf 90       	pop	r11
     eae:	af 90       	pop	r10
     eb0:	9f 90       	pop	r9
     eb2:	8f 90       	pop	r8
     eb4:	7f 90       	pop	r7
     eb6:	6f 90       	pop	r6
     eb8:	5f 90       	pop	r5
     eba:	4f 90       	pop	r4
     ebc:	08 95       	ret

00000ebe <vTaskStartScheduler>:
     ebe:	ef 92       	push	r14
     ec0:	ff 92       	push	r15
     ec2:	0f 93       	push	r16
     ec4:	0f 2e       	mov	r0, r31
     ec6:	f6 e9       	ldi	r31, 0x96	; 150
     ec8:	ef 2e       	mov	r14, r31
     eca:	f5 e0       	ldi	r31, 0x05	; 5
     ecc:	ff 2e       	mov	r15, r31
     ece:	f0 2d       	mov	r31, r0
     ed0:	00 e0       	ldi	r16, 0x00	; 0
     ed2:	20 e0       	ldi	r18, 0x00	; 0
     ed4:	30 e0       	ldi	r19, 0x00	; 0
     ed6:	45 e5       	ldi	r20, 0x55	; 85
     ed8:	50 e0       	ldi	r21, 0x00	; 0
     eda:	62 e5       	ldi	r22, 0x52	; 82
     edc:	71 e0       	ldi	r23, 0x01	; 1
     ede:	89 ec       	ldi	r24, 0xC9	; 201
     ee0:	98 e0       	ldi	r25, 0x08	; 8
     ee2:	0e 94 4a 06 	call	0xc94	; 0xc94 <xTaskCreate>
     ee6:	81 30       	cpi	r24, 0x01	; 1
     ee8:	81 f4       	brne	.+32     	; 0xf0a <vTaskStartScheduler+0x4c>
     eea:	f8 94       	cli
     eec:	8f ef       	ldi	r24, 0xFF	; 255
     eee:	9f ef       	ldi	r25, 0xFF	; 255
     ef0:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <xNextTaskUnblockTime+0x1>
     ef4:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <xNextTaskUnblockTime>
     ef8:	81 e0       	ldi	r24, 0x01	; 1
     efa:	80 93 9e 05 	sts	0x059E, r24	; 0x80059e <xSchedulerRunning>
     efe:	10 92 a1 05 	sts	0x05A1, r1	; 0x8005a1 <xTickCount+0x1>
     f02:	10 92 a0 05 	sts	0x05A0, r1	; 0x8005a0 <xTickCount>
     f06:	0e 94 a1 02 	call	0x542	; 0x542 <xPortStartScheduler>
     f0a:	0f 91       	pop	r16
     f0c:	ff 90       	pop	r15
     f0e:	ef 90       	pop	r14
     f10:	08 95       	ret

00000f12 <vTaskSuspendAll>:
     f12:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
     f16:	8f 5f       	subi	r24, 0xFF	; 255
     f18:	80 93 95 05 	sts	0x0595, r24	; 0x800595 <uxSchedulerSuspended>
     f1c:	08 95       	ret

00000f1e <xTaskIncrementTick>:
     f1e:	cf 92       	push	r12
     f20:	df 92       	push	r13
     f22:	ef 92       	push	r14
     f24:	ff 92       	push	r15
     f26:	0f 93       	push	r16
     f28:	1f 93       	push	r17
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
     f32:	81 11       	cpse	r24, r1
     f34:	99 c0       	rjmp	.+306    	; 0x1068 <xTaskIncrementTick+0x14a>
     f36:	e0 90 a0 05 	lds	r14, 0x05A0	; 0x8005a0 <xTickCount>
     f3a:	f0 90 a1 05 	lds	r15, 0x05A1	; 0x8005a1 <xTickCount+0x1>
     f3e:	8f ef       	ldi	r24, 0xFF	; 255
     f40:	e8 1a       	sub	r14, r24
     f42:	f8 0a       	sbc	r15, r24
     f44:	f0 92 a1 05 	sts	0x05A1, r15	; 0x8005a1 <xTickCount+0x1>
     f48:	e0 92 a0 05 	sts	0x05A0, r14	; 0x8005a0 <xTickCount>
     f4c:	e1 14       	cp	r14, r1
     f4e:	f1 04       	cpc	r15, r1
     f50:	b9 f4       	brne	.+46     	; 0xf80 <xTaskIncrementTick+0x62>
     f52:	80 91 b8 05 	lds	r24, 0x05B8	; 0x8005b8 <pxDelayedTaskList>
     f56:	90 91 b9 05 	lds	r25, 0x05B9	; 0x8005b9 <pxDelayedTaskList+0x1>
     f5a:	20 91 b6 05 	lds	r18, 0x05B6	; 0x8005b6 <pxOverflowDelayedTaskList>
     f5e:	30 91 b7 05 	lds	r19, 0x05B7	; 0x8005b7 <pxOverflowDelayedTaskList+0x1>
     f62:	30 93 b9 05 	sts	0x05B9, r19	; 0x8005b9 <pxDelayedTaskList+0x1>
     f66:	20 93 b8 05 	sts	0x05B8, r18	; 0x8005b8 <pxDelayedTaskList>
     f6a:	90 93 b7 05 	sts	0x05B7, r25	; 0x8005b7 <pxOverflowDelayedTaskList+0x1>
     f6e:	80 93 b6 05 	sts	0x05B6, r24	; 0x8005b6 <pxOverflowDelayedTaskList>
     f72:	80 91 9b 05 	lds	r24, 0x059B	; 0x80059b <xNumOfOverflows>
     f76:	8f 5f       	subi	r24, 0xFF	; 255
     f78:	80 93 9b 05 	sts	0x059B, r24	; 0x80059b <xNumOfOverflows>
     f7c:	0e 94 2b 06 	call	0xc56	; 0xc56 <prvResetNextTaskUnblockTime>
     f80:	80 91 98 05 	lds	r24, 0x0598	; 0x800598 <xNextTaskUnblockTime>
     f84:	90 91 99 05 	lds	r25, 0x0599	; 0x800599 <xNextTaskUnblockTime+0x1>
     f88:	e8 16       	cp	r14, r24
     f8a:	f9 06       	cpc	r15, r25
     f8c:	10 f4       	brcc	.+4      	; 0xf92 <xTaskIncrementTick+0x74>
     f8e:	d1 2c       	mov	r13, r1
     f90:	53 c0       	rjmp	.+166    	; 0x1038 <xTaskIncrementTick+0x11a>
     f92:	d1 2c       	mov	r13, r1
     f94:	cc 24       	eor	r12, r12
     f96:	c3 94       	inc	r12
     f98:	e0 91 b8 05 	lds	r30, 0x05B8	; 0x8005b8 <pxDelayedTaskList>
     f9c:	f0 91 b9 05 	lds	r31, 0x05B9	; 0x8005b9 <pxDelayedTaskList+0x1>
     fa0:	80 81       	ld	r24, Z
     fa2:	81 11       	cpse	r24, r1
     fa4:	07 c0       	rjmp	.+14     	; 0xfb4 <xTaskIncrementTick+0x96>
     fa6:	8f ef       	ldi	r24, 0xFF	; 255
     fa8:	9f ef       	ldi	r25, 0xFF	; 255
     faa:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <xNextTaskUnblockTime+0x1>
     fae:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <xNextTaskUnblockTime>
     fb2:	42 c0       	rjmp	.+132    	; 0x1038 <xTaskIncrementTick+0x11a>
     fb4:	e0 91 b8 05 	lds	r30, 0x05B8	; 0x8005b8 <pxDelayedTaskList>
     fb8:	f0 91 b9 05 	lds	r31, 0x05B9	; 0x8005b9 <pxDelayedTaskList+0x1>
     fbc:	05 80       	ldd	r0, Z+5	; 0x05
     fbe:	f6 81       	ldd	r31, Z+6	; 0x06
     fc0:	e0 2d       	mov	r30, r0
     fc2:	c6 81       	ldd	r28, Z+6	; 0x06
     fc4:	d7 81       	ldd	r29, Z+7	; 0x07
     fc6:	8a 81       	ldd	r24, Y+2	; 0x02
     fc8:	9b 81       	ldd	r25, Y+3	; 0x03
     fca:	e8 16       	cp	r14, r24
     fcc:	f9 06       	cpc	r15, r25
     fce:	28 f4       	brcc	.+10     	; 0xfda <xTaskIncrementTick+0xbc>
     fd0:	90 93 99 05 	sts	0x0599, r25	; 0x800599 <xNextTaskUnblockTime+0x1>
     fd4:	80 93 98 05 	sts	0x0598, r24	; 0x800598 <xNextTaskUnblockTime>
     fd8:	2f c0       	rjmp	.+94     	; 0x1038 <xTaskIncrementTick+0x11a>
     fda:	8e 01       	movw	r16, r28
     fdc:	0e 5f       	subi	r16, 0xFE	; 254
     fde:	1f 4f       	sbci	r17, 0xFF	; 255
     fe0:	c8 01       	movw	r24, r16
     fe2:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
     fe6:	8c 89       	ldd	r24, Y+20	; 0x14
     fe8:	9d 89       	ldd	r25, Y+21	; 0x15
     fea:	89 2b       	or	r24, r25
     fec:	21 f0       	breq	.+8      	; 0xff6 <xTaskIncrementTick+0xd8>
     fee:	ce 01       	movw	r24, r28
     ff0:	0c 96       	adiw	r24, 0x0c	; 12
     ff2:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
     ff6:	8e 89       	ldd	r24, Y+22	; 0x16
     ff8:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <uxTopReadyPriority>
     ffc:	98 17       	cp	r25, r24
     ffe:	10 f4       	brcc	.+4      	; 0x1004 <xTaskIncrementTick+0xe6>
    1000:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <uxTopReadyPriority>
    1004:	90 e0       	ldi	r25, 0x00	; 0
    1006:	9c 01       	movw	r18, r24
    1008:	22 0f       	add	r18, r18
    100a:	33 1f       	adc	r19, r19
    100c:	22 0f       	add	r18, r18
    100e:	33 1f       	adc	r19, r19
    1010:	22 0f       	add	r18, r18
    1012:	33 1f       	adc	r19, r19
    1014:	82 0f       	add	r24, r18
    1016:	93 1f       	adc	r25, r19
    1018:	b8 01       	movw	r22, r16
    101a:	84 53       	subi	r24, 0x34	; 52
    101c:	9a 4f       	sbci	r25, 0xFA	; 250
    101e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
    1022:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    1026:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    102a:	9e 89       	ldd	r25, Y+22	; 0x16
    102c:	86 89       	ldd	r24, Z+22	; 0x16
    102e:	98 17       	cp	r25, r24
    1030:	08 f4       	brcc	.+2      	; 0x1034 <xTaskIncrementTick+0x116>
    1032:	b2 cf       	rjmp	.-156    	; 0xf98 <xTaskIncrementTick+0x7a>
    1034:	dc 2c       	mov	r13, r12
    1036:	b0 cf       	rjmp	.-160    	; 0xf98 <xTaskIncrementTick+0x7a>
    1038:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    103c:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    1040:	86 89       	ldd	r24, Z+22	; 0x16
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	fc 01       	movw	r30, r24
    1046:	ee 0f       	add	r30, r30
    1048:	ff 1f       	adc	r31, r31
    104a:	ee 0f       	add	r30, r30
    104c:	ff 1f       	adc	r31, r31
    104e:	ee 0f       	add	r30, r30
    1050:	ff 1f       	adc	r31, r31
    1052:	8e 0f       	add	r24, r30
    1054:	9f 1f       	adc	r25, r31
    1056:	fc 01       	movw	r30, r24
    1058:	e4 53       	subi	r30, 0x34	; 52
    105a:	fa 4f       	sbci	r31, 0xFA	; 250
    105c:	80 81       	ld	r24, Z
    105e:	82 30       	cpi	r24, 0x02	; 2
    1060:	48 f0       	brcs	.+18     	; 0x1074 <xTaskIncrementTick+0x156>
    1062:	dd 24       	eor	r13, r13
    1064:	d3 94       	inc	r13
    1066:	06 c0       	rjmp	.+12     	; 0x1074 <xTaskIncrementTick+0x156>
    1068:	80 91 9d 05 	lds	r24, 0x059D	; 0x80059d <uxPendedTicks>
    106c:	8f 5f       	subi	r24, 0xFF	; 255
    106e:	80 93 9d 05 	sts	0x059D, r24	; 0x80059d <uxPendedTicks>
    1072:	d1 2c       	mov	r13, r1
    1074:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <xYieldPending>
    1078:	88 23       	and	r24, r24
    107a:	11 f0       	breq	.+4      	; 0x1080 <xTaskIncrementTick+0x162>
    107c:	dd 24       	eor	r13, r13
    107e:	d3 94       	inc	r13
    1080:	8d 2d       	mov	r24, r13
    1082:	df 91       	pop	r29
    1084:	cf 91       	pop	r28
    1086:	1f 91       	pop	r17
    1088:	0f 91       	pop	r16
    108a:	ff 90       	pop	r15
    108c:	ef 90       	pop	r14
    108e:	df 90       	pop	r13
    1090:	cf 90       	pop	r12
    1092:	08 95       	ret

00001094 <xTaskResumeAll>:
    1094:	df 92       	push	r13
    1096:	ef 92       	push	r14
    1098:	ff 92       	push	r15
    109a:	0f 93       	push	r16
    109c:	1f 93       	push	r17
    109e:	cf 93       	push	r28
    10a0:	df 93       	push	r29
    10a2:	0f b6       	in	r0, 0x3f	; 63
    10a4:	f8 94       	cli
    10a6:	0f 92       	push	r0
    10a8:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
    10ac:	81 50       	subi	r24, 0x01	; 1
    10ae:	80 93 95 05 	sts	0x0595, r24	; 0x800595 <uxSchedulerSuspended>
    10b2:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
    10b6:	81 11       	cpse	r24, r1
    10b8:	5f c0       	rjmp	.+190    	; 0x1178 <xTaskResumeAll+0xe4>
    10ba:	80 91 a2 05 	lds	r24, 0x05A2	; 0x8005a2 <uxCurrentNumberOfTasks>
    10be:	81 11       	cpse	r24, r1
    10c0:	33 c0       	rjmp	.+102    	; 0x1128 <xTaskResumeAll+0x94>
    10c2:	5d c0       	rjmp	.+186    	; 0x117e <xTaskResumeAll+0xea>
    10c4:	d7 01       	movw	r26, r14
    10c6:	15 96       	adiw	r26, 0x05	; 5
    10c8:	ed 91       	ld	r30, X+
    10ca:	fc 91       	ld	r31, X
    10cc:	16 97       	sbiw	r26, 0x06	; 6
    10ce:	c6 81       	ldd	r28, Z+6	; 0x06
    10d0:	d7 81       	ldd	r29, Z+7	; 0x07
    10d2:	ce 01       	movw	r24, r28
    10d4:	0c 96       	adiw	r24, 0x0c	; 12
    10d6:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    10da:	8e 01       	movw	r16, r28
    10dc:	0e 5f       	subi	r16, 0xFE	; 254
    10de:	1f 4f       	sbci	r17, 0xFF	; 255
    10e0:	c8 01       	movw	r24, r16
    10e2:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    10e6:	8e 89       	ldd	r24, Y+22	; 0x16
    10e8:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <uxTopReadyPriority>
    10ec:	98 17       	cp	r25, r24
    10ee:	10 f4       	brcc	.+4      	; 0x10f4 <xTaskResumeAll+0x60>
    10f0:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <uxTopReadyPriority>
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	9c 01       	movw	r18, r24
    10f8:	22 0f       	add	r18, r18
    10fa:	33 1f       	adc	r19, r19
    10fc:	22 0f       	add	r18, r18
    10fe:	33 1f       	adc	r19, r19
    1100:	22 0f       	add	r18, r18
    1102:	33 1f       	adc	r19, r19
    1104:	82 0f       	add	r24, r18
    1106:	93 1f       	adc	r25, r19
    1108:	b8 01       	movw	r22, r16
    110a:	84 53       	subi	r24, 0x34	; 52
    110c:	9a 4f       	sbci	r25, 0xFA	; 250
    110e:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
    1112:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    1116:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    111a:	9e 89       	ldd	r25, Y+22	; 0x16
    111c:	86 89       	ldd	r24, Z+22	; 0x16
    111e:	98 17       	cp	r25, r24
    1120:	68 f0       	brcs	.+26     	; 0x113c <xTaskResumeAll+0xa8>
    1122:	d0 92 9c 05 	sts	0x059C, r13	; 0x80059c <xYieldPending>
    1126:	0a c0       	rjmp	.+20     	; 0x113c <xTaskResumeAll+0xa8>
    1128:	c0 e0       	ldi	r28, 0x00	; 0
    112a:	d0 e0       	ldi	r29, 0x00	; 0
    112c:	0f 2e       	mov	r0, r31
    112e:	fd ea       	ldi	r31, 0xAD	; 173
    1130:	ef 2e       	mov	r14, r31
    1132:	f5 e0       	ldi	r31, 0x05	; 5
    1134:	ff 2e       	mov	r15, r31
    1136:	f0 2d       	mov	r31, r0
    1138:	dd 24       	eor	r13, r13
    113a:	d3 94       	inc	r13
    113c:	f7 01       	movw	r30, r14
    113e:	80 81       	ld	r24, Z
    1140:	81 11       	cpse	r24, r1
    1142:	c0 cf       	rjmp	.-128    	; 0x10c4 <xTaskResumeAll+0x30>
    1144:	cd 2b       	or	r28, r29
    1146:	11 f0       	breq	.+4      	; 0x114c <xTaskResumeAll+0xb8>
    1148:	0e 94 2b 06 	call	0xc56	; 0xc56 <prvResetNextTaskUnblockTime>
    114c:	c0 91 9d 05 	lds	r28, 0x059D	; 0x80059d <uxPendedTicks>
    1150:	cc 23       	and	r28, r28
    1152:	51 f0       	breq	.+20     	; 0x1168 <xTaskResumeAll+0xd4>
    1154:	d1 e0       	ldi	r29, 0x01	; 1
    1156:	0e 94 8f 07 	call	0xf1e	; 0xf1e <xTaskIncrementTick>
    115a:	81 11       	cpse	r24, r1
    115c:	d0 93 9c 05 	sts	0x059C, r29	; 0x80059c <xYieldPending>
    1160:	c1 50       	subi	r28, 0x01	; 1
    1162:	c9 f7       	brne	.-14     	; 0x1156 <xTaskResumeAll+0xc2>
    1164:	10 92 9d 05 	sts	0x059D, r1	; 0x80059d <uxPendedTicks>
    1168:	80 91 9c 05 	lds	r24, 0x059C	; 0x80059c <xYieldPending>
    116c:	88 23       	and	r24, r24
    116e:	31 f0       	breq	.+12     	; 0x117c <xTaskResumeAll+0xe8>
    1170:	0e 94 db 02 	call	0x5b6	; 0x5b6 <vPortYield>
    1174:	81 e0       	ldi	r24, 0x01	; 1
    1176:	03 c0       	rjmp	.+6      	; 0x117e <xTaskResumeAll+0xea>
    1178:	80 e0       	ldi	r24, 0x00	; 0
    117a:	01 c0       	rjmp	.+2      	; 0x117e <xTaskResumeAll+0xea>
    117c:	80 e0       	ldi	r24, 0x00	; 0
    117e:	0f 90       	pop	r0
    1180:	0f be       	out	0x3f, r0	; 63
    1182:	df 91       	pop	r29
    1184:	cf 91       	pop	r28
    1186:	1f 91       	pop	r17
    1188:	0f 91       	pop	r16
    118a:	ff 90       	pop	r15
    118c:	ef 90       	pop	r14
    118e:	df 90       	pop	r13
    1190:	08 95       	ret

00001192 <prvIdleTask>:
    1192:	04 ea       	ldi	r16, 0xA4	; 164
    1194:	15 e0       	ldi	r17, 0x05	; 5
    1196:	0f 2e       	mov	r0, r31
    1198:	fc ec       	ldi	r31, 0xCC	; 204
    119a:	ef 2e       	mov	r14, r31
    119c:	f5 e0       	ldi	r31, 0x05	; 5
    119e:	ff 2e       	mov	r15, r31
    11a0:	f0 2d       	mov	r31, r0
    11a2:	29 c0       	rjmp	.+82     	; 0x11f6 <prvIdleTask+0x64>
    11a4:	0e 94 89 07 	call	0xf12	; 0xf12 <vTaskSuspendAll>
    11a8:	d8 01       	movw	r26, r16
    11aa:	cc 91       	ld	r28, X
    11ac:	0e 94 4a 08 	call	0x1094	; 0x1094 <xTaskResumeAll>
    11b0:	cc 23       	and	r28, r28
    11b2:	09 f1       	breq	.+66     	; 0x11f6 <prvIdleTask+0x64>
    11b4:	0f b6       	in	r0, 0x3f	; 63
    11b6:	f8 94       	cli
    11b8:	0f 92       	push	r0
    11ba:	d8 01       	movw	r26, r16
    11bc:	15 96       	adiw	r26, 0x05	; 5
    11be:	ed 91       	ld	r30, X+
    11c0:	fc 91       	ld	r31, X
    11c2:	16 97       	sbiw	r26, 0x06	; 6
    11c4:	c6 81       	ldd	r28, Z+6	; 0x06
    11c6:	d7 81       	ldd	r29, Z+7	; 0x07
    11c8:	ce 01       	movw	r24, r28
    11ca:	02 96       	adiw	r24, 0x02	; 2
    11cc:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    11d0:	80 91 a2 05 	lds	r24, 0x05A2	; 0x8005a2 <uxCurrentNumberOfTasks>
    11d4:	81 50       	subi	r24, 0x01	; 1
    11d6:	80 93 a2 05 	sts	0x05A2, r24	; 0x8005a2 <uxCurrentNumberOfTasks>
    11da:	80 91 a3 05 	lds	r24, 0x05A3	; 0x8005a3 <uxDeletedTasksWaitingCleanUp>
    11de:	81 50       	subi	r24, 0x01	; 1
    11e0:	80 93 a3 05 	sts	0x05A3, r24	; 0x8005a3 <uxDeletedTasksWaitingCleanUp>
    11e4:	0f 90       	pop	r0
    11e6:	0f be       	out	0x3f, r0	; 63
    11e8:	8f 89       	ldd	r24, Y+23	; 0x17
    11ea:	98 8d       	ldd	r25, Y+24	; 0x18
    11ec:	0e 94 c8 03 	call	0x790	; 0x790 <vPortFree>
    11f0:	ce 01       	movw	r24, r28
    11f2:	0e 94 c8 03 	call	0x790	; 0x790 <vPortFree>
    11f6:	80 91 a3 05 	lds	r24, 0x05A3	; 0x8005a3 <uxDeletedTasksWaitingCleanUp>
    11fa:	81 11       	cpse	r24, r1
    11fc:	d3 cf       	rjmp	.-90     	; 0x11a4 <prvIdleTask+0x12>
    11fe:	f7 01       	movw	r30, r14
    1200:	80 81       	ld	r24, Z
    1202:	82 30       	cpi	r24, 0x02	; 2
    1204:	10 f0       	brcs	.+4      	; 0x120a <prvIdleTask+0x78>
    1206:	0e 94 db 02 	call	0x5b6	; 0x5b6 <vPortYield>
    120a:	0e 94 c4 00 	call	0x188	; 0x188 <vApplicationIdleHook>
    120e:	f3 cf       	rjmp	.-26     	; 0x11f6 <prvIdleTask+0x64>

00001210 <vTaskSwitchContext>:
    1210:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
    1214:	88 23       	and	r24, r24
    1216:	21 f0       	breq	.+8      	; 0x1220 <vTaskSwitchContext+0x10>
    1218:	81 e0       	ldi	r24, 0x01	; 1
    121a:	80 93 9c 05 	sts	0x059C, r24	; 0x80059c <xYieldPending>
    121e:	08 95       	ret
    1220:	10 92 9c 05 	sts	0x059C, r1	; 0x80059c <xYieldPending>
    1224:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    1228:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    122c:	85 a1       	ldd	r24, Z+37	; 0x25
    122e:	0e 94 95 01 	call	0x32a	; 0x32a <switch_out>
    1232:	20 91 9f 05 	lds	r18, 0x059F	; 0x80059f <uxTopReadyPriority>
    1236:	82 2f       	mov	r24, r18
    1238:	90 e0       	ldi	r25, 0x00	; 0
    123a:	fc 01       	movw	r30, r24
    123c:	ee 0f       	add	r30, r30
    123e:	ff 1f       	adc	r31, r31
    1240:	ee 0f       	add	r30, r30
    1242:	ff 1f       	adc	r31, r31
    1244:	ee 0f       	add	r30, r30
    1246:	ff 1f       	adc	r31, r31
    1248:	e8 0f       	add	r30, r24
    124a:	f9 1f       	adc	r31, r25
    124c:	e4 53       	subi	r30, 0x34	; 52
    124e:	fa 4f       	sbci	r31, 0xFA	; 250
    1250:	30 81       	ld	r19, Z
    1252:	31 11       	cpse	r19, r1
    1254:	11 c0       	rjmp	.+34     	; 0x1278 <vTaskSwitchContext+0x68>
    1256:	21 50       	subi	r18, 0x01	; 1
    1258:	82 2f       	mov	r24, r18
    125a:	90 e0       	ldi	r25, 0x00	; 0
    125c:	fc 01       	movw	r30, r24
    125e:	ee 0f       	add	r30, r30
    1260:	ff 1f       	adc	r31, r31
    1262:	ee 0f       	add	r30, r30
    1264:	ff 1f       	adc	r31, r31
    1266:	ee 0f       	add	r30, r30
    1268:	ff 1f       	adc	r31, r31
    126a:	e8 0f       	add	r30, r24
    126c:	f9 1f       	adc	r31, r25
    126e:	e4 53       	subi	r30, 0x34	; 52
    1270:	fa 4f       	sbci	r31, 0xFA	; 250
    1272:	30 81       	ld	r19, Z
    1274:	33 23       	and	r19, r19
    1276:	79 f3       	breq	.-34     	; 0x1256 <vTaskSwitchContext+0x46>
    1278:	ac 01       	movw	r20, r24
    127a:	44 0f       	add	r20, r20
    127c:	55 1f       	adc	r21, r21
    127e:	44 0f       	add	r20, r20
    1280:	55 1f       	adc	r21, r21
    1282:	44 0f       	add	r20, r20
    1284:	55 1f       	adc	r21, r21
    1286:	48 0f       	add	r20, r24
    1288:	59 1f       	adc	r21, r25
    128a:	da 01       	movw	r26, r20
    128c:	a4 53       	subi	r26, 0x34	; 52
    128e:	ba 4f       	sbci	r27, 0xFA	; 250
    1290:	11 96       	adiw	r26, 0x01	; 1
    1292:	ed 91       	ld	r30, X+
    1294:	fc 91       	ld	r31, X
    1296:	12 97       	sbiw	r26, 0x02	; 2
    1298:	02 80       	ldd	r0, Z+2	; 0x02
    129a:	f3 81       	ldd	r31, Z+3	; 0x03
    129c:	e0 2d       	mov	r30, r0
    129e:	12 96       	adiw	r26, 0x02	; 2
    12a0:	fc 93       	st	X, r31
    12a2:	ee 93       	st	-X, r30
    12a4:	11 97       	sbiw	r26, 0x01	; 1
    12a6:	41 53       	subi	r20, 0x31	; 49
    12a8:	5a 4f       	sbci	r21, 0xFA	; 250
    12aa:	e4 17       	cp	r30, r20
    12ac:	f5 07       	cpc	r31, r21
    12ae:	29 f4       	brne	.+10     	; 0x12ba <vTaskSwitchContext+0xaa>
    12b0:	42 81       	ldd	r20, Z+2	; 0x02
    12b2:	53 81       	ldd	r21, Z+3	; 0x03
    12b4:	fd 01       	movw	r30, r26
    12b6:	52 83       	std	Z+2, r21	; 0x02
    12b8:	41 83       	std	Z+1, r20	; 0x01
    12ba:	fc 01       	movw	r30, r24
    12bc:	ee 0f       	add	r30, r30
    12be:	ff 1f       	adc	r31, r31
    12c0:	ee 0f       	add	r30, r30
    12c2:	ff 1f       	adc	r31, r31
    12c4:	ee 0f       	add	r30, r30
    12c6:	ff 1f       	adc	r31, r31
    12c8:	8e 0f       	add	r24, r30
    12ca:	9f 1f       	adc	r25, r31
    12cc:	fc 01       	movw	r30, r24
    12ce:	e4 53       	subi	r30, 0x34	; 52
    12d0:	fa 4f       	sbci	r31, 0xFA	; 250
    12d2:	01 80       	ldd	r0, Z+1	; 0x01
    12d4:	f2 81       	ldd	r31, Z+2	; 0x02
    12d6:	e0 2d       	mov	r30, r0
    12d8:	86 81       	ldd	r24, Z+6	; 0x06
    12da:	97 81       	ldd	r25, Z+7	; 0x07
    12dc:	90 93 f1 05 	sts	0x05F1, r25	; 0x8005f1 <pxCurrentTCB+0x1>
    12e0:	80 93 f0 05 	sts	0x05F0, r24	; 0x8005f0 <pxCurrentTCB>
    12e4:	20 93 9f 05 	sts	0x059F, r18	; 0x80059f <uxTopReadyPriority>
    12e8:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    12ec:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    12f0:	85 a1       	ldd	r24, Z+37	; 0x25
    12f2:	0e 94 8a 01 	call	0x314	; 0x314 <switch_in>
    12f6:	08 95       	ret

000012f8 <xTaskRemoveFromEventList>:
    12f8:	0f 93       	push	r16
    12fa:	1f 93       	push	r17
    12fc:	cf 93       	push	r28
    12fe:	df 93       	push	r29
    1300:	dc 01       	movw	r26, r24
    1302:	15 96       	adiw	r26, 0x05	; 5
    1304:	ed 91       	ld	r30, X+
    1306:	fc 91       	ld	r31, X
    1308:	16 97       	sbiw	r26, 0x06	; 6
    130a:	c6 81       	ldd	r28, Z+6	; 0x06
    130c:	d7 81       	ldd	r29, Z+7	; 0x07
    130e:	8e 01       	movw	r16, r28
    1310:	04 5f       	subi	r16, 0xF4	; 244
    1312:	1f 4f       	sbci	r17, 0xFF	; 255
    1314:	c8 01       	movw	r24, r16
    1316:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    131a:	80 91 95 05 	lds	r24, 0x0595	; 0x800595 <uxSchedulerSuspended>
    131e:	81 11       	cpse	r24, r1
    1320:	1c c0       	rjmp	.+56     	; 0x135a <xTaskRemoveFromEventList+0x62>
    1322:	0a 50       	subi	r16, 0x0A	; 10
    1324:	11 09       	sbc	r17, r1
    1326:	c8 01       	movw	r24, r16
    1328:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    132c:	8e 89       	ldd	r24, Y+22	; 0x16
    132e:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <uxTopReadyPriority>
    1332:	98 17       	cp	r25, r24
    1334:	10 f4       	brcc	.+4      	; 0x133a <xTaskRemoveFromEventList+0x42>
    1336:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <uxTopReadyPriority>
    133a:	90 e0       	ldi	r25, 0x00	; 0
    133c:	9c 01       	movw	r18, r24
    133e:	22 0f       	add	r18, r18
    1340:	33 1f       	adc	r19, r19
    1342:	22 0f       	add	r18, r18
    1344:	33 1f       	adc	r19, r19
    1346:	22 0f       	add	r18, r18
    1348:	33 1f       	adc	r19, r19
    134a:	82 0f       	add	r24, r18
    134c:	93 1f       	adc	r25, r19
    134e:	b8 01       	movw	r22, r16
    1350:	84 53       	subi	r24, 0x34	; 52
    1352:	9a 4f       	sbci	r25, 0xFA	; 250
    1354:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
    1358:	05 c0       	rjmp	.+10     	; 0x1364 <xTaskRemoveFromEventList+0x6c>
    135a:	b8 01       	movw	r22, r16
    135c:	8d ea       	ldi	r24, 0xAD	; 173
    135e:	95 e0       	ldi	r25, 0x05	; 5
    1360:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
    1364:	e0 91 f0 05 	lds	r30, 0x05F0	; 0x8005f0 <pxCurrentTCB>
    1368:	f0 91 f1 05 	lds	r31, 0x05F1	; 0x8005f1 <pxCurrentTCB+0x1>
    136c:	9e 89       	ldd	r25, Y+22	; 0x16
    136e:	86 89       	ldd	r24, Z+22	; 0x16
    1370:	89 17       	cp	r24, r25
    1372:	20 f4       	brcc	.+8      	; 0x137c <xTaskRemoveFromEventList+0x84>
    1374:	81 e0       	ldi	r24, 0x01	; 1
    1376:	80 93 9c 05 	sts	0x059C, r24	; 0x80059c <xYieldPending>
    137a:	01 c0       	rjmp	.+2      	; 0x137e <xTaskRemoveFromEventList+0x86>
    137c:	80 e0       	ldi	r24, 0x00	; 0
    137e:	df 91       	pop	r29
    1380:	cf 91       	pop	r28
    1382:	1f 91       	pop	r17
    1384:	0f 91       	pop	r16
    1386:	08 95       	ret

00001388 <xTaskPriorityDisinherit>:
    1388:	0f 93       	push	r16
    138a:	1f 93       	push	r17
    138c:	cf 93       	push	r28
    138e:	df 93       	push	r29
    1390:	fc 01       	movw	r30, r24
    1392:	89 2b       	or	r24, r25
    1394:	79 f1       	breq	.+94     	; 0x13f4 <xTaskPriorityDisinherit+0x6c>
    1396:	84 a1       	ldd	r24, Z+36	; 0x24
    1398:	81 50       	subi	r24, 0x01	; 1
    139a:	84 a3       	std	Z+36, r24	; 0x24
    139c:	26 89       	ldd	r18, Z+22	; 0x16
    139e:	93 a1       	ldd	r25, Z+35	; 0x23
    13a0:	29 17       	cp	r18, r25
    13a2:	51 f1       	breq	.+84     	; 0x13f8 <xTaskPriorityDisinherit+0x70>
    13a4:	81 11       	cpse	r24, r1
    13a6:	2a c0       	rjmp	.+84     	; 0x13fc <xTaskPriorityDisinherit+0x74>
    13a8:	ef 01       	movw	r28, r30
    13aa:	8f 01       	movw	r16, r30
    13ac:	0e 5f       	subi	r16, 0xFE	; 254
    13ae:	1f 4f       	sbci	r17, 0xFF	; 255
    13b0:	c8 01       	movw	r24, r16
    13b2:	0e 94 0f 02 	call	0x41e	; 0x41e <uxListRemove>
    13b6:	8b a1       	ldd	r24, Y+35	; 0x23
    13b8:	8e 8b       	std	Y+22, r24	; 0x16
    13ba:	24 e0       	ldi	r18, 0x04	; 4
    13bc:	30 e0       	ldi	r19, 0x00	; 0
    13be:	28 1b       	sub	r18, r24
    13c0:	31 09       	sbc	r19, r1
    13c2:	3d 87       	std	Y+13, r19	; 0x0d
    13c4:	2c 87       	std	Y+12, r18	; 0x0c
    13c6:	90 91 9f 05 	lds	r25, 0x059F	; 0x80059f <uxTopReadyPriority>
    13ca:	98 17       	cp	r25, r24
    13cc:	10 f4       	brcc	.+4      	; 0x13d2 <xTaskPriorityDisinherit+0x4a>
    13ce:	80 93 9f 05 	sts	0x059F, r24	; 0x80059f <uxTopReadyPriority>
    13d2:	90 e0       	ldi	r25, 0x00	; 0
    13d4:	9c 01       	movw	r18, r24
    13d6:	22 0f       	add	r18, r18
    13d8:	33 1f       	adc	r19, r19
    13da:	22 0f       	add	r18, r18
    13dc:	33 1f       	adc	r19, r19
    13de:	22 0f       	add	r18, r18
    13e0:	33 1f       	adc	r19, r19
    13e2:	82 0f       	add	r24, r18
    13e4:	93 1f       	adc	r25, r19
    13e6:	b8 01       	movw	r22, r16
    13e8:	84 53       	subi	r24, 0x34	; 52
    13ea:	9a 4f       	sbci	r25, 0xFA	; 250
    13ec:	0e 94 ee 01 	call	0x3dc	; 0x3dc <vListInsertEnd>
    13f0:	81 e0       	ldi	r24, 0x01	; 1
    13f2:	05 c0       	rjmp	.+10     	; 0x13fe <xTaskPriorityDisinherit+0x76>
    13f4:	80 e0       	ldi	r24, 0x00	; 0
    13f6:	03 c0       	rjmp	.+6      	; 0x13fe <xTaskPriorityDisinherit+0x76>
    13f8:	80 e0       	ldi	r24, 0x00	; 0
    13fa:	01 c0       	rjmp	.+2      	; 0x13fe <xTaskPriorityDisinherit+0x76>
    13fc:	80 e0       	ldi	r24, 0x00	; 0
    13fe:	df 91       	pop	r29
    1400:	cf 91       	pop	r28
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	08 95       	ret

00001408 <__udivmodsi4>:
    1408:	a1 e2       	ldi	r26, 0x21	; 33
    140a:	1a 2e       	mov	r1, r26
    140c:	aa 1b       	sub	r26, r26
    140e:	bb 1b       	sub	r27, r27
    1410:	fd 01       	movw	r30, r26
    1412:	0d c0       	rjmp	.+26     	; 0x142e <__udivmodsi4_ep>

00001414 <__udivmodsi4_loop>:
    1414:	aa 1f       	adc	r26, r26
    1416:	bb 1f       	adc	r27, r27
    1418:	ee 1f       	adc	r30, r30
    141a:	ff 1f       	adc	r31, r31
    141c:	a2 17       	cp	r26, r18
    141e:	b3 07       	cpc	r27, r19
    1420:	e4 07       	cpc	r30, r20
    1422:	f5 07       	cpc	r31, r21
    1424:	20 f0       	brcs	.+8      	; 0x142e <__udivmodsi4_ep>
    1426:	a2 1b       	sub	r26, r18
    1428:	b3 0b       	sbc	r27, r19
    142a:	e4 0b       	sbc	r30, r20
    142c:	f5 0b       	sbc	r31, r21

0000142e <__udivmodsi4_ep>:
    142e:	66 1f       	adc	r22, r22
    1430:	77 1f       	adc	r23, r23
    1432:	88 1f       	adc	r24, r24
    1434:	99 1f       	adc	r25, r25
    1436:	1a 94       	dec	r1
    1438:	69 f7       	brne	.-38     	; 0x1414 <__udivmodsi4_loop>
    143a:	60 95       	com	r22
    143c:	70 95       	com	r23
    143e:	80 95       	com	r24
    1440:	90 95       	com	r25
    1442:	9b 01       	movw	r18, r22
    1444:	ac 01       	movw	r20, r24
    1446:	bd 01       	movw	r22, r26
    1448:	cf 01       	movw	r24, r30
    144a:	08 95       	ret

0000144c <malloc>:
    144c:	0f 93       	push	r16
    144e:	1f 93       	push	r17
    1450:	cf 93       	push	r28
    1452:	df 93       	push	r29
    1454:	82 30       	cpi	r24, 0x02	; 2
    1456:	91 05       	cpc	r25, r1
    1458:	10 f4       	brcc	.+4      	; 0x145e <malloc+0x12>
    145a:	82 e0       	ldi	r24, 0x02	; 2
    145c:	90 e0       	ldi	r25, 0x00	; 0
    145e:	e0 91 f4 05 	lds	r30, 0x05F4	; 0x8005f4 <__flp>
    1462:	f0 91 f5 05 	lds	r31, 0x05F5	; 0x8005f5 <__flp+0x1>
    1466:	20 e0       	ldi	r18, 0x00	; 0
    1468:	30 e0       	ldi	r19, 0x00	; 0
    146a:	a0 e0       	ldi	r26, 0x00	; 0
    146c:	b0 e0       	ldi	r27, 0x00	; 0
    146e:	30 97       	sbiw	r30, 0x00	; 0
    1470:	19 f1       	breq	.+70     	; 0x14b8 <malloc+0x6c>
    1472:	40 81       	ld	r20, Z
    1474:	51 81       	ldd	r21, Z+1	; 0x01
    1476:	02 81       	ldd	r16, Z+2	; 0x02
    1478:	13 81       	ldd	r17, Z+3	; 0x03
    147a:	48 17       	cp	r20, r24
    147c:	59 07       	cpc	r21, r25
    147e:	c8 f0       	brcs	.+50     	; 0x14b2 <malloc+0x66>
    1480:	84 17       	cp	r24, r20
    1482:	95 07       	cpc	r25, r21
    1484:	69 f4       	brne	.+26     	; 0x14a0 <malloc+0x54>
    1486:	10 97       	sbiw	r26, 0x00	; 0
    1488:	31 f0       	breq	.+12     	; 0x1496 <malloc+0x4a>
    148a:	12 96       	adiw	r26, 0x02	; 2
    148c:	0c 93       	st	X, r16
    148e:	12 97       	sbiw	r26, 0x02	; 2
    1490:	13 96       	adiw	r26, 0x03	; 3
    1492:	1c 93       	st	X, r17
    1494:	27 c0       	rjmp	.+78     	; 0x14e4 <malloc+0x98>
    1496:	00 93 f4 05 	sts	0x05F4, r16	; 0x8005f4 <__flp>
    149a:	10 93 f5 05 	sts	0x05F5, r17	; 0x8005f5 <__flp+0x1>
    149e:	22 c0       	rjmp	.+68     	; 0x14e4 <malloc+0x98>
    14a0:	21 15       	cp	r18, r1
    14a2:	31 05       	cpc	r19, r1
    14a4:	19 f0       	breq	.+6      	; 0x14ac <malloc+0x60>
    14a6:	42 17       	cp	r20, r18
    14a8:	53 07       	cpc	r21, r19
    14aa:	18 f4       	brcc	.+6      	; 0x14b2 <malloc+0x66>
    14ac:	9a 01       	movw	r18, r20
    14ae:	bd 01       	movw	r22, r26
    14b0:	ef 01       	movw	r28, r30
    14b2:	df 01       	movw	r26, r30
    14b4:	f8 01       	movw	r30, r16
    14b6:	db cf       	rjmp	.-74     	; 0x146e <malloc+0x22>
    14b8:	21 15       	cp	r18, r1
    14ba:	31 05       	cpc	r19, r1
    14bc:	f9 f0       	breq	.+62     	; 0x14fc <malloc+0xb0>
    14be:	28 1b       	sub	r18, r24
    14c0:	39 0b       	sbc	r19, r25
    14c2:	24 30       	cpi	r18, 0x04	; 4
    14c4:	31 05       	cpc	r19, r1
    14c6:	80 f4       	brcc	.+32     	; 0x14e8 <malloc+0x9c>
    14c8:	8a 81       	ldd	r24, Y+2	; 0x02
    14ca:	9b 81       	ldd	r25, Y+3	; 0x03
    14cc:	61 15       	cp	r22, r1
    14ce:	71 05       	cpc	r23, r1
    14d0:	21 f0       	breq	.+8      	; 0x14da <malloc+0x8e>
    14d2:	fb 01       	movw	r30, r22
    14d4:	93 83       	std	Z+3, r25	; 0x03
    14d6:	82 83       	std	Z+2, r24	; 0x02
    14d8:	04 c0       	rjmp	.+8      	; 0x14e2 <malloc+0x96>
    14da:	90 93 f5 05 	sts	0x05F5, r25	; 0x8005f5 <__flp+0x1>
    14de:	80 93 f4 05 	sts	0x05F4, r24	; 0x8005f4 <__flp>
    14e2:	fe 01       	movw	r30, r28
    14e4:	32 96       	adiw	r30, 0x02	; 2
    14e6:	44 c0       	rjmp	.+136    	; 0x1570 <malloc+0x124>
    14e8:	fe 01       	movw	r30, r28
    14ea:	e2 0f       	add	r30, r18
    14ec:	f3 1f       	adc	r31, r19
    14ee:	81 93       	st	Z+, r24
    14f0:	91 93       	st	Z+, r25
    14f2:	22 50       	subi	r18, 0x02	; 2
    14f4:	31 09       	sbc	r19, r1
    14f6:	39 83       	std	Y+1, r19	; 0x01
    14f8:	28 83       	st	Y, r18
    14fa:	3a c0       	rjmp	.+116    	; 0x1570 <malloc+0x124>
    14fc:	20 91 f2 05 	lds	r18, 0x05F2	; 0x8005f2 <__brkval>
    1500:	30 91 f3 05 	lds	r19, 0x05F3	; 0x8005f3 <__brkval+0x1>
    1504:	23 2b       	or	r18, r19
    1506:	41 f4       	brne	.+16     	; 0x1518 <malloc+0xcc>
    1508:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
    150c:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
    1510:	30 93 f3 05 	sts	0x05F3, r19	; 0x8005f3 <__brkval+0x1>
    1514:	20 93 f2 05 	sts	0x05F2, r18	; 0x8005f2 <__brkval>
    1518:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    151c:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
    1520:	21 15       	cp	r18, r1
    1522:	31 05       	cpc	r19, r1
    1524:	41 f4       	brne	.+16     	; 0x1536 <malloc+0xea>
    1526:	2d b7       	in	r18, 0x3d	; 61
    1528:	3e b7       	in	r19, 0x3e	; 62
    152a:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
    152e:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
    1532:	24 1b       	sub	r18, r20
    1534:	35 0b       	sbc	r19, r21
    1536:	e0 91 f2 05 	lds	r30, 0x05F2	; 0x8005f2 <__brkval>
    153a:	f0 91 f3 05 	lds	r31, 0x05F3	; 0x8005f3 <__brkval+0x1>
    153e:	e2 17       	cp	r30, r18
    1540:	f3 07       	cpc	r31, r19
    1542:	a0 f4       	brcc	.+40     	; 0x156c <malloc+0x120>
    1544:	2e 1b       	sub	r18, r30
    1546:	3f 0b       	sbc	r19, r31
    1548:	28 17       	cp	r18, r24
    154a:	39 07       	cpc	r19, r25
    154c:	78 f0       	brcs	.+30     	; 0x156c <malloc+0x120>
    154e:	ac 01       	movw	r20, r24
    1550:	4e 5f       	subi	r20, 0xFE	; 254
    1552:	5f 4f       	sbci	r21, 0xFF	; 255
    1554:	24 17       	cp	r18, r20
    1556:	35 07       	cpc	r19, r21
    1558:	48 f0       	brcs	.+18     	; 0x156c <malloc+0x120>
    155a:	4e 0f       	add	r20, r30
    155c:	5f 1f       	adc	r21, r31
    155e:	50 93 f3 05 	sts	0x05F3, r21	; 0x8005f3 <__brkval+0x1>
    1562:	40 93 f2 05 	sts	0x05F2, r20	; 0x8005f2 <__brkval>
    1566:	81 93       	st	Z+, r24
    1568:	91 93       	st	Z+, r25
    156a:	02 c0       	rjmp	.+4      	; 0x1570 <malloc+0x124>
    156c:	e0 e0       	ldi	r30, 0x00	; 0
    156e:	f0 e0       	ldi	r31, 0x00	; 0
    1570:	cf 01       	movw	r24, r30
    1572:	df 91       	pop	r29
    1574:	cf 91       	pop	r28
    1576:	1f 91       	pop	r17
    1578:	0f 91       	pop	r16
    157a:	08 95       	ret

0000157c <free>:
    157c:	cf 93       	push	r28
    157e:	df 93       	push	r29
    1580:	00 97       	sbiw	r24, 0x00	; 0
    1582:	09 f4       	brne	.+2      	; 0x1586 <free+0xa>
    1584:	81 c0       	rjmp	.+258    	; 0x1688 <free+0x10c>
    1586:	fc 01       	movw	r30, r24
    1588:	32 97       	sbiw	r30, 0x02	; 2
    158a:	13 82       	std	Z+3, r1	; 0x03
    158c:	12 82       	std	Z+2, r1	; 0x02
    158e:	a0 91 f4 05 	lds	r26, 0x05F4	; 0x8005f4 <__flp>
    1592:	b0 91 f5 05 	lds	r27, 0x05F5	; 0x8005f5 <__flp+0x1>
    1596:	10 97       	sbiw	r26, 0x00	; 0
    1598:	81 f4       	brne	.+32     	; 0x15ba <free+0x3e>
    159a:	20 81       	ld	r18, Z
    159c:	31 81       	ldd	r19, Z+1	; 0x01
    159e:	82 0f       	add	r24, r18
    15a0:	93 1f       	adc	r25, r19
    15a2:	20 91 f2 05 	lds	r18, 0x05F2	; 0x8005f2 <__brkval>
    15a6:	30 91 f3 05 	lds	r19, 0x05F3	; 0x8005f3 <__brkval+0x1>
    15aa:	28 17       	cp	r18, r24
    15ac:	39 07       	cpc	r19, r25
    15ae:	51 f5       	brne	.+84     	; 0x1604 <free+0x88>
    15b0:	f0 93 f3 05 	sts	0x05F3, r31	; 0x8005f3 <__brkval+0x1>
    15b4:	e0 93 f2 05 	sts	0x05F2, r30	; 0x8005f2 <__brkval>
    15b8:	67 c0       	rjmp	.+206    	; 0x1688 <free+0x10c>
    15ba:	ed 01       	movw	r28, r26
    15bc:	20 e0       	ldi	r18, 0x00	; 0
    15be:	30 e0       	ldi	r19, 0x00	; 0
    15c0:	ce 17       	cp	r28, r30
    15c2:	df 07       	cpc	r29, r31
    15c4:	40 f4       	brcc	.+16     	; 0x15d6 <free+0x5a>
    15c6:	4a 81       	ldd	r20, Y+2	; 0x02
    15c8:	5b 81       	ldd	r21, Y+3	; 0x03
    15ca:	9e 01       	movw	r18, r28
    15cc:	41 15       	cp	r20, r1
    15ce:	51 05       	cpc	r21, r1
    15d0:	f1 f0       	breq	.+60     	; 0x160e <free+0x92>
    15d2:	ea 01       	movw	r28, r20
    15d4:	f5 cf       	rjmp	.-22     	; 0x15c0 <free+0x44>
    15d6:	d3 83       	std	Z+3, r29	; 0x03
    15d8:	c2 83       	std	Z+2, r28	; 0x02
    15da:	40 81       	ld	r20, Z
    15dc:	51 81       	ldd	r21, Z+1	; 0x01
    15de:	84 0f       	add	r24, r20
    15e0:	95 1f       	adc	r25, r21
    15e2:	c8 17       	cp	r28, r24
    15e4:	d9 07       	cpc	r29, r25
    15e6:	59 f4       	brne	.+22     	; 0x15fe <free+0x82>
    15e8:	88 81       	ld	r24, Y
    15ea:	99 81       	ldd	r25, Y+1	; 0x01
    15ec:	84 0f       	add	r24, r20
    15ee:	95 1f       	adc	r25, r21
    15f0:	02 96       	adiw	r24, 0x02	; 2
    15f2:	91 83       	std	Z+1, r25	; 0x01
    15f4:	80 83       	st	Z, r24
    15f6:	8a 81       	ldd	r24, Y+2	; 0x02
    15f8:	9b 81       	ldd	r25, Y+3	; 0x03
    15fa:	93 83       	std	Z+3, r25	; 0x03
    15fc:	82 83       	std	Z+2, r24	; 0x02
    15fe:	21 15       	cp	r18, r1
    1600:	31 05       	cpc	r19, r1
    1602:	29 f4       	brne	.+10     	; 0x160e <free+0x92>
    1604:	f0 93 f5 05 	sts	0x05F5, r31	; 0x8005f5 <__flp+0x1>
    1608:	e0 93 f4 05 	sts	0x05F4, r30	; 0x8005f4 <__flp>
    160c:	3d c0       	rjmp	.+122    	; 0x1688 <free+0x10c>
    160e:	e9 01       	movw	r28, r18
    1610:	fb 83       	std	Y+3, r31	; 0x03
    1612:	ea 83       	std	Y+2, r30	; 0x02
    1614:	49 91       	ld	r20, Y+
    1616:	59 91       	ld	r21, Y+
    1618:	c4 0f       	add	r28, r20
    161a:	d5 1f       	adc	r29, r21
    161c:	ec 17       	cp	r30, r28
    161e:	fd 07       	cpc	r31, r29
    1620:	61 f4       	brne	.+24     	; 0x163a <free+0xbe>
    1622:	80 81       	ld	r24, Z
    1624:	91 81       	ldd	r25, Z+1	; 0x01
    1626:	84 0f       	add	r24, r20
    1628:	95 1f       	adc	r25, r21
    162a:	02 96       	adiw	r24, 0x02	; 2
    162c:	e9 01       	movw	r28, r18
    162e:	99 83       	std	Y+1, r25	; 0x01
    1630:	88 83       	st	Y, r24
    1632:	82 81       	ldd	r24, Z+2	; 0x02
    1634:	93 81       	ldd	r25, Z+3	; 0x03
    1636:	9b 83       	std	Y+3, r25	; 0x03
    1638:	8a 83       	std	Y+2, r24	; 0x02
    163a:	e0 e0       	ldi	r30, 0x00	; 0
    163c:	f0 e0       	ldi	r31, 0x00	; 0
    163e:	12 96       	adiw	r26, 0x02	; 2
    1640:	8d 91       	ld	r24, X+
    1642:	9c 91       	ld	r25, X
    1644:	13 97       	sbiw	r26, 0x03	; 3
    1646:	00 97       	sbiw	r24, 0x00	; 0
    1648:	19 f0       	breq	.+6      	; 0x1650 <free+0xd4>
    164a:	fd 01       	movw	r30, r26
    164c:	dc 01       	movw	r26, r24
    164e:	f7 cf       	rjmp	.-18     	; 0x163e <free+0xc2>
    1650:	8d 91       	ld	r24, X+
    1652:	9c 91       	ld	r25, X
    1654:	11 97       	sbiw	r26, 0x01	; 1
    1656:	9d 01       	movw	r18, r26
    1658:	2e 5f       	subi	r18, 0xFE	; 254
    165a:	3f 4f       	sbci	r19, 0xFF	; 255
    165c:	82 0f       	add	r24, r18
    165e:	93 1f       	adc	r25, r19
    1660:	20 91 f2 05 	lds	r18, 0x05F2	; 0x8005f2 <__brkval>
    1664:	30 91 f3 05 	lds	r19, 0x05F3	; 0x8005f3 <__brkval+0x1>
    1668:	28 17       	cp	r18, r24
    166a:	39 07       	cpc	r19, r25
    166c:	69 f4       	brne	.+26     	; 0x1688 <free+0x10c>
    166e:	30 97       	sbiw	r30, 0x00	; 0
    1670:	29 f4       	brne	.+10     	; 0x167c <free+0x100>
    1672:	10 92 f5 05 	sts	0x05F5, r1	; 0x8005f5 <__flp+0x1>
    1676:	10 92 f4 05 	sts	0x05F4, r1	; 0x8005f4 <__flp>
    167a:	02 c0       	rjmp	.+4      	; 0x1680 <free+0x104>
    167c:	13 82       	std	Z+3, r1	; 0x03
    167e:	12 82       	std	Z+2, r1	; 0x02
    1680:	b0 93 f3 05 	sts	0x05F3, r27	; 0x8005f3 <__brkval+0x1>
    1684:	a0 93 f2 05 	sts	0x05F2, r26	; 0x8005f2 <__brkval>
    1688:	df 91       	pop	r29
    168a:	cf 91       	pop	r28
    168c:	08 95       	ret

0000168e <memcpy>:
    168e:	fb 01       	movw	r30, r22
    1690:	dc 01       	movw	r26, r24
    1692:	02 c0       	rjmp	.+4      	; 0x1698 <memcpy+0xa>
    1694:	01 90       	ld	r0, Z+
    1696:	0d 92       	st	X+, r0
    1698:	41 50       	subi	r20, 0x01	; 1
    169a:	50 40       	sbci	r21, 0x00	; 0
    169c:	d8 f7       	brcc	.-10     	; 0x1694 <memcpy+0x6>
    169e:	08 95       	ret

000016a0 <memset>:
    16a0:	dc 01       	movw	r26, r24
    16a2:	01 c0       	rjmp	.+2      	; 0x16a6 <memset+0x6>
    16a4:	6d 93       	st	X+, r22
    16a6:	41 50       	subi	r20, 0x01	; 1
    16a8:	50 40       	sbci	r21, 0x00	; 0
    16aa:	e0 f7       	brcc	.-8      	; 0x16a4 <memset+0x4>
    16ac:	08 95       	ret

000016ae <_exit>:
    16ae:	f8 94       	cli

000016b0 <__stop_program>:
    16b0:	ff cf       	rjmp	.-2      	; 0x16b0 <__stop_program>
